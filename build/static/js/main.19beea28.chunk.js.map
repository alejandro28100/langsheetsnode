{"version":3,"sources":["theme/index.js","components/WorksheetCard.js","hooks/useBodyBackground.js","svgs/logo.svg","svgs/missingWord.svg","svgs/wordOrder.svg","components/Logo.js","components/Navbar.js","hooks/useDocumentTitle.js","utils/index.js","pages/Home.js","components/Form/Navbar.js","components/Form/WorksheetTitle.js","components/Slate/Editable.js","components/LanguagePicker.js","components/PublicSwitch.js","components/Slate/plugins/withTextAlignment.js","components/Slate/plugins/withExerciseBlock.js","components/Slate/plugins/withMissingWordExercise.js","components/Slate/plugins/withWordOrderExercise.js","hooks/useSlateEditor.js","utils/objects.js","utils/exerciseBlocks.js","components/Slate/Inline/MissingWord.js","components/Slate/Inline/Leaf.js","components/Slate/Block/DefaultElement.js","components/Slate/Block/MissingWordExerciseParagraph.js","components/Slate/Block/WordOrderExerciseParagraph.js","components/Slate/Block/Heading.js","utils/slate.js","components/Slate/ToolbarButton.js","components/ScoringSection.js","components/Slate/Block/ExerciseBlock.js","hooks/useSlateRender.js","hooks/useIsFullscreen.js","components/Slate/commands/index.js","components/Form/ActionsMenu.js","components/Form/Toolbar.js","pages/Form.js","hooks/useSlateDecorate.js","pages/Practice.js","pages/NotFounded.js","App.js","reportWebVitals.js","index.js"],"names":["theme","extendTheme","colors","brand","50","100","200","300","400","500","600","700","800","900","LANGUAGES","es","en","fr","ru","de","ja","zh","WorksheetCard","lang","title","id","_id","deleteSheet","createdAt","isPublic","useState","isAlertOpen","setIsAlertOpen","onClose","cancelRef","useRef","boxShadow","background","height","borderRadius","width","padding","flexDirection","noOfLines","fontFamily","fontSize","fontWeight","mr","as","SiGoogletranslate","MdPublic","RiGitRepositoryPrivateFill","pr","py","Flex","alignItems","justifyContent","spacing","size","colorScheme","variant","hasArrow","label","href","icon","FaChalkboardTeacher","RiFileEditFill","onClick","e","MdDelete","isOpen","leastDestructiveRef","ref","ml","defaultProps","useBodyBackground","backgroundColor","useEffect","document","body","style","propTypes","PropTypes","string","isRequired","_g","_defs","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","props","viewBox","fill","xmlns","clipPath","d","_path","_path2","_path3","_path4","ForwardRef","SvgMissingWord","stroke","className","_rect","_rect2","_rect3","SvgWordOrder","x","y","rx","strokeLinecap","strokeLinejoin","Logo","withIcon","iconSize","w","h","getIconSize","display","LogoIcon","color","Navbar","leftActions","rightActions","sm","useMediaQuery","isTabletOrLower","px","shadow","sx","Button","children","HiMenuAlt4","zIndex","useDocumentTitle","isFullscreen","fullscreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","parseWorksheets","worksheets","map","parseWorksheet","stringifyWorkshet","worksheet","updatedWorksheet","content","JSON","stringify","parse","initialState","error","undefined","loading","reducer","state","action","type","payload","console","warn","Home","history","useHistory","toast","useToast","useReducer","dispatch","a","newWorksheet","published","text","Date","fetch","method","headers","response","json","ok","push","updatedWorksheets","filter","description","status","durarion","isClosable","getWorksheets","worksheetsHandler","createSheet","isIndeterminate","message","maxW","my","textAlign","mx","md","lg","gap","placeItems","templateColumns","base","isLoaded","leftIcon","HiDocumentAdd","_focus","outline","mt","flexGrow","arrowSize","placement","referrerPolicy","transition","cursor","m","handlePrint","FaPrint","WorksheetTitle","textRef","current","focus","required","value","onChange","newValue","property","placeholder","CustomEditable","decorate","renderElement","renderLeaf","readOnly","p","Editable","LanguagePicker","PublicSwitch","isChecked","withTextAlignment","editor","normalizeNode","entry","node","path","Editor","isBlock","alignment","Transforms","setNodes","at","withExerciseBlock","Node","has","Path","next","insertNodes","withMissingWordExercise","includes","hasMissingWords","descendants","missingWord","isNode","Element","isElement","firstNodePath","first","lastNodePath","last","child","childPath","equals","select","hanging","get","insertText","offset","withWordOrderExercise","hasDivisions","split","useSlateEditor","useMemo","withHistory","withReact","createEditor","shuffleArray","array","Error","temporaryValue","randomIndex","result","currentIndex","Math","floor","random","getExerciseBlockProps","showAnswers","checkExercise","ancestors","getDivisions","config","withIDs","word","nanoid","isCorrect","shuffle","Mark","FaCheck","FaTimes","MissingWordInput","leaf","correctAnswer","userAnswer","useSlate","ReactEditor","findPath","handleIsCorrect","toLowerCase","trim","inputValue","properties","isAnswered","MissingWordEditable","isPrinting","attributes","borderBottom","Leaf","isReadOnly","useReadOnly","division","bold","italic","underline","strike","DefaultElement","element","MissingWordExerciseParagraph","WordOrderPractice","textContent","userAnswersRef","userAnswers","correctAnswers","flexWrap","border","onDragEnd","destination","items","list","startIndex","endIndex","Array","from","splice","removed","reorder","index","checkAnswers","droppableId","direction","provided","snapshot","innerRef","droppableProps","isDraggingOver","WordComponent","bg","DraggableWordComponent","getBg","isDragging","draggableId","userSelect","draggableProps","dragHandleProps","answer","WordOrderExerciseParagraph","Heading","isBlockActive","format","nodes","match","n","isMarkActive","marks","toggleMark","removeMark","addMark","ToolbarButton","customOnClick","formatKey","rest","handleClick","isActive","toggleBlock","ButtonsSection","exerciseBlockPath","ScoringSection","EXERCISES_TYPES","EXERCISES_HELP_TEXT","MissingWordIcon","Tools","exerciseType","Range","isCollapsed","selection","alert","handleCreateMissingWord","borderBottomWidth","opacity","ExerciseBlock","isFocused","useFocused","isSelected","useSelected","isExpanded","fragment","borderBottomRadius","position","in","animateOpacity","contentEditable","borderTopRadius","IoMdHelpCircleOutline","ExerciseList","useSlateRender","useCallback","useIsFullscreen","initialValue","setValue","handler","addEventListener","removeEventListener","createExercise","newNode","zoom","blur","setTimeout","window","print","handleOpenFullscreen","screen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","handleCloseFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","ActionsMenu","saveWorksheet","RiDraftFill","FaFileUpload","WordOrderIcon","BsFullscreenExit","BsFullscreen","DesktopToolbar","isDesktop","flex","HiViewGridAdd","aria-label","FaHeading","FaBold","FaItalic","FaUnderline","FaStrikethrough","FaAlignLeft","FaAlignCenter","FaAlignRight","FaAlignJustify","ACTIONS","isWritingMode","log","savingWorksheet","Form","useParams","ranges","Text","isText","parent","parts","forEach","part","anchor","useSlateDecorate","duration","getWorksheet","host","location","newContent","templateRows","rowSpan","colSpan","top","gridTemplateRows","gridTemplateColumns","FaArrowLeft","pt","colStart","isLoading","borderTop","Toolbar","gridColumn","gridRow","flexDir","minH","HiDotsVertical","IconButton","overflowX","bottom","right","orientation","deselect","MdKeyboardHide","FaChevronUp","_hover","FaHome","defaultValue","Practice","setWorksheet","maxWidth","propery","prevValue","handleChangeProp","NotFounded","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.19beea28.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst theme = extendTheme({\r\n    colors: {\r\n        brand: {\r\n            50: \"#eaeaff\",\r\n            100: \"#c2c2f3\",\r\n            200: \"#9b9ae6\",\r\n            300: \"#7371da\",\r\n            400: \"#4c48cf\",\r\n            500: \"#332fb6\",\r\n            600: \"#27258e\",\r\n            700: \"#1b1a66\",\r\n            800: \"#0f1040\",\r\n            900: \"#06041a\",\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import React, { Fragment, useState, useRef } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { Text, Icon, ButtonGroup, IconButton, Button, Spacer, Flex, Tooltip, AlertDialog, AlertDialogBody, AlertDialogOverlay, AlertDialogContent, AlertDialogHeader, AlertDialogFooter } from \"@chakra-ui/react\"\r\n\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport { MdDelete, MdPublic } from \"react-icons/md\";\r\nimport { RiFileEditFill } from \"react-icons/ri\";\r\nimport { RiGitRepositoryPrivateFill } from \"react-icons/ri\";\r\nimport { SiGoogletranslate } from \"react-icons/si\";\r\n\r\n\r\nconst LANGUAGES = {\r\n    es: \"Español\",\r\n    en: \"Inglés\",\r\n    fr: \"Francés\",\r\n    ru: \"Ruso\",\r\n    de: \"Alemán\",\r\n    ja: \"Japonés\",\r\n    zh: \"Chino\"\r\n}\r\n\r\nfunction WorksheetCard({ lang, title, _id: id, createdAt, deleteSheet, isPublic }) {\r\n    const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n    const onClose = () => setIsAlertOpen(false);\r\n    const cancelRef = useRef();\r\n    return (\r\n        <Fragment>\r\n\r\n            <Flex boxShadow=\"base\" background=\"white\" height=\"40\" borderRadius=\"xl\" width=\"full\">\r\n                <Flex padding=\"5\" flexDirection=\"column\">\r\n                    <Text title={title === \"\" ? \"Sin título\" : title} noOfLines={2} fontFamily=\"sans-serif\" fontSize=\"large\" fontWeight=\"semibold\">{title === \"\" ? \"Sin título\" : title}</Text>\r\n                    <Spacer />\r\n\r\n                    {LANGUAGES[lang] && <Text >\r\n                        <Icon mr=\"2\" as={SiGoogletranslate} />\r\n                        {LANGUAGES[lang]}\r\n                    </Text>}\r\n\r\n                    <Text noOfLines={1} title={`Actividad ${isPublic ? \"Pública\" : \"Privada\"}`}>\r\n                        <Icon mr=\"2\" as={isPublic ? MdPublic : RiGitRepositoryPrivateFill} />\r\n                        Actividad {isPublic ? \"Pública\" : \"Privada\"}\r\n                    </Text>\r\n\r\n\r\n                </Flex>\r\n                <Spacer />\r\n                <Flex pr=\"5\" py=\"5\">\r\n                    <ButtonGroup as={Flex} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-evenly\" spacing=\"0\" size=\"lg\" colorScheme=\"brand\" variant=\"ghost\">\r\n\r\n                        <Tooltip hasArrow label=\"Comenzar Actividad\" >\r\n                            <IconButton as=\"a\" href={`/worksheets/${id}/practice`} icon={<Icon as={FaChalkboardTeacher} />} />\r\n                        </Tooltip>\r\n\r\n                        <Tooltip hasArrow label=\"Editar Actividad\">\r\n                            <IconButton as=\"a\" href={`/worksheets/${id}/edit`} icon={<Icon as={RiFileEditFill} />} />\r\n                        </Tooltip>\r\n\r\n                        <Tooltip hasArrow label=\"Eliminar Actividad\">\r\n                            <IconButton onClick={e => setIsAlertOpen(true)} icon={<Icon as={MdDelete} />} />\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n                </Flex>\r\n            </Flex >\r\n\r\n            <AlertDialog\r\n                isOpen={isAlertOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            Eliminar Actividad\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            ¿Estás seguro de querer borrar esta actividad? Esta acción es irreversible.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button ref={cancelRef} onClick={onClose}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button colorScheme=\"red\" onClick={e => deleteSheet(id)} ml={3}>\r\n                                Eliminar\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nWorksheetCard.defaultProps = {\r\n    lang: \"\",\r\n    isPublic: true,\r\n}\r\n\r\nWorksheetCard.propTypes = {\r\n    lang: PropTypes.oneOf([\"en\", \"fr\", \"de\", \"ja\", \"es\", \"zh\", \"ru\", \"\"]).isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired,\r\n    isPublic: PropTypes.bool.isRequired,\r\n    createdAt: PropTypes.string.isRequired,\r\n    deleteSheet: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default WorksheetCard\r\n\r\n\r\n","import { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useBodyBackground = (backgroundColor) => {\r\n    //Set the color value to the body background on mount \r\n\r\n    useEffect(() => {\r\n        document.body.style.background = backgroundColor;\r\n    }, [backgroundColor]);\r\n}\r\n\r\n\r\n\r\n\r\nuseBodyBackground.propTypes = {\r\n    backgroundColor: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default useBodyBackground\r\n","var _g, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 70,\n    height: 78,\n    viewBox: \"0 0 70 78\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.7126 21.9061L55.7683 3.7113L29.024 0.0596367C25.5601 -0.413512 22.3645 1.97751 21.8856 5.39973L14.2604 59.911C13.7815 63.3332 16.2016 66.4903 19.6655 66.9635L56.4828 71.9905C59.9467 72.4636 63.1423 70.0726 63.6212 66.6504L69.8733 21.9541L69.7126 21.9061Z\",\n    fill: \"#605EC5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.8201 21.991L53.7102 19.7918L55.9559 3.73657L69.8201 21.991Z\",\n    fill: \"#8987DE\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2476 29.9889L30.5532 26.3441L30.0225 30.138L56.7169 33.7828L57.2476 29.9889Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.9146 39.52L29.2202 35.8752L28.6895 39.6692L55.3839 43.3139L55.9146 39.52Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.8744 45.4979L27.4214 48.7365L50.65 51.908L51.103 48.6695L27.8744 45.4979Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.6339 26.3764L33.2997 10.2388H6.3008C2.80408 10.2388 -0.0300293 13.0394 -0.0300293 16.4934V71.5224C-0.0300293 74.9771 2.80474 77.777 6.3008 77.777H43.4684C46.9651 77.777 49.7992 74.9764 49.7992 71.5224V26.4016L49.6339 26.3764Z\",\n    fill: \"#252388\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.752 26.4463H33.4893V10.2388L49.752 26.4463Z\",\n    fill: \"#4846AE\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.4054 36.0681H11.4578V39.8981H38.4054V36.0681Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.4054 45.6899H11.4578V49.5198H38.4054V45.6899Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.9068 55.4049H11.4578V58.6742H34.9068V55.4049Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 70,\n    height: 77.7778,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.5139c054.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMissingWord(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_2\",\n    \"data-name\": \"Capa 2\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 42 16\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.14,13.06c-.39,0-.74-.5-1-1.51a19.28,19.28,0,0,1-.42-2c-.43.06-1,.17-1.71.32l-1.69.35c-.22.56-.58,1.38-1.1,2.45a.61.61,0,0,1-.55.36.7.7,0,0,1-.46-.19.61.61,0,0,1-.2-.46A11.73,11.73,0,0,1,10,10a.7.7,0,0,1-.1-.38c0-.35.2-.57.62-.67.49-.91,1.1-2,1.84-3.14,1-1.61,1.64-2.42,1.89-2.42s.56.23.69.7l.4,2.15.95,4.44.36,1a2.39,2.39,0,0,1,.19.69.63.63,0,0,1-.2.46A.64.64,0,0,1,16.14,13.06Zm-2.26-7.3-1.82,3q.76-.21,2.34-.48Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M23.38,12.61a10.06,10.06,0,0,1-3.67.57.71.71,0,0,1-.52-.26.77.77,0,0,1-.25-.54V10.53q0-.91.12-2.61c.08-1.22.13-2.1.14-2.64s0-1,.07-1.75a.57.57,0,0,1,.21-.43,7,7,0,0,1,2-.26,3.58,3.58,0,0,1,2.16.76A2.65,2.65,0,0,1,24.8,5.78a3.05,3.05,0,0,1-1.27,2.59,4.4,4.4,0,0,1,1.43.9,1.57,1.57,0,0,1,.48,1.09,2,2,0,0,1-.84,1.49A4.11,4.11,0,0,1,23.38,12.61ZM22.17,9.25l-.68-.1H21a4.84,4.84,0,0,1-.74-.05c0,.53,0,1,0,1.43v1.33a8.26,8.26,0,0,0,2.73-.48,2.71,2.71,0,0,0,.86-.53c.26-.22.39-.39.39-.5s-.28-.43-.82-.68A7.17,7.17,0,0,0,22.17,9.25Zm-.72-5.11a7.5,7.5,0,0,0-1,0V5.3l-.13,2.47c.61.05.93.08,1,.07a2.67,2.67,0,0,0,1.58-.6,1.83,1.83,0,0,0,.66-1.46,1.45,1.45,0,0,0-.67-1.12A2.27,2.27,0,0,0,21.45,4.14Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M33,5.7a.67.67,0,0,1-.62-.48,1.11,1.11,0,0,0-.33-.49,1.76,1.76,0,0,0-.66-.07c-.62,0-1.31.47-2.06,1.41a5.9,5.9,0,0,0-1.53,3.61,2,2,0,0,0,.53,1.42,1.68,1.68,0,0,0,1.31.61A2.85,2.85,0,0,0,31,11.37a8.66,8.66,0,0,0,1.14-.75,1.09,1.09,0,0,1,.54-.27.57.57,0,0,1,.46.21.65.65,0,0,1,.19.46.68.68,0,0,1-.24.51A5.19,5.19,0,0,1,29.66,13a2.92,2.92,0,0,1-2.24-1,3.37,3.37,0,0,1-.88-2.33,7.19,7.19,0,0,1,1.81-4.44,4.12,4.12,0,0,1,3.06-1.89,4.86,4.86,0,0,1,.56,0,1.9,1.9,0,0,1,.44.09A.67.67,0,0,1,33,3.14c.29,0,.48.2.56.58A7.52,7.52,0,0,1,33.65,5a.78.78,0,0,1-.14.46A.56.56,0,0,1,33,5.7Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.8,0H2.2a2,2,0,0,0-2,2V14a2,2,0,0,0,2,2H39.8a2,2,0,0,0,2-2V2A2,2,0,0,0,39.8,0Zm-.65,14.26H2.86A.91.91,0,0,1,2,13.35V2.7a1,1,0,0,1,1-1h36a1,1,0,0,1,1.13,1.07V3a.68.68,0,0,1,0,.12h0v10.2A.9.9,0,0,1,39.15,14.26Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMissingWord);\nexport default __webpack_public_path__ + \"static/media/missingWord.646310c6.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2, _rect3, _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWordOrder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 6,\n    width: 4,\n    height: 4,\n    rx: 0.5,\n    fill: \"#4846AE\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6,\n    y: 6,\n    width: 4,\n    height: 4,\n    rx: 0.5,\n    fill: \"#4846AE\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    y: 6,\n    width: 4,\n    height: 4,\n    rx: 0.5,\n    fill: \"#4846AE\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5218 11.5161C12.0215 12.0161 11.5219 12.5161 10.9268 12.8914C10.0216 13.5162 8 13.5 6.99997 13.5C5.98032 13.4885 4.99928 13.0089 3.99992 12.5\",\n    stroke: \"#616161\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.32786 13.9956C4.10086 13.6319 4.02894 13.2646 3.80915 12.8979C3.72803 12.7626 3.64479 12.6383 3.57362 12.5089C3.41056 12.2124 3.5 12 3.78875 12.0797C3.2496 12.0797 4.5 11.9506 5.07287 11.9506C5.44509 11.9511 6 11.9075 6.13559 11.9075\",\n    stroke: \"#616161\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWordOrder);\nexport default __webpack_public_path__ + \"static/media/wordOrder.45b7dea5.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Text, Icon } from \"@chakra-ui/react\"\r\nimport { Logo as LogoIcon } from \"../svgs\"\r\n\r\nconst getIconSize = (size) => {\r\n    switch (size) {\r\n        case \"sm\":\r\n            return { w: \"1em,\", h: \"1em\" };\r\n        case \"lg\":\r\n            return { w: \"3em\", h: \"3m\" };\r\n        //Return md values as default\r\n        default:\r\n            return { w: \"2.5em\", h: \"2.5em\" };\r\n    }\r\n}\r\n\r\nconst Logo = ({ withIcon, size }) => {\r\n\r\n    const iconSize = getIconSize(size);\r\n    return (\r\n        <Button variant=\"unstyled\" display=\"flex\" as=\"a\" href=\"/\">\r\n            {withIcon && <Icon mr=\"2\" {...iconSize} as={LogoIcon} title=\"LangSheets\" />}\r\n            <Text fontFamily=\"cursive\" fontSize=\"large\" fontWeight=\"semibold\" color=\"brand.500\" mr=\"2\">LangSheets</Text>\r\n        </Button>\r\n    )\r\n}\r\n\r\nLogo.defaultProps = {\r\n    withIcon: true,\r\n    size: \"md\"\r\n}\r\n\r\nLogo.propTypes = {\r\n    withIcon: PropTypes.bool.isRequired,\r\n    size: PropTypes.oneOf([\"sm\", \"md\", \"lg\"]),\r\n}\r\n\r\nexport default Logo\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Flex, Spacer, Icon, Menu, MenuList, MenuButton, Button, useMediaQuery } from \"@chakra-ui/react\"\r\nimport { HiMenuAlt4 } from \"react-icons/hi\";\r\nimport Logo from \"./Logo\";\r\n\r\n\r\nfunction Navbar({ leftActions, rightActions, withIcon, sm }) {\r\n    const [isTabletOrLower] = useMediaQuery([\"(max-width:900px)\"]);\r\n    return (\r\n        <Flex px=\"10\" background=\"white\" py=\"2\" shadow=\"sm\"\r\n            sx={{\r\n                \"@media print\": {\r\n                    display: \"none\",\r\n                }\r\n            }}\r\n        >\r\n            <Logo {...withIcon} />\r\n\r\n            {\r\n                isTabletOrLower\r\n                    ? (\r\n                        sm && <Fragment>\r\n                            <Spacer />\r\n                            <Menu>\r\n                                <MenuButton colorScheme=\"purple\" variant=\"ghost\" as={Button} children={<Icon as={HiMenuAlt4} />} />\r\n                                <MenuList zIndex=\"dropdown\">\r\n                                    {sm}\r\n                                </MenuList>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )\r\n                    : (\r\n                        <Fragment>\r\n\r\n                            {leftActions}\r\n                            <Spacer />\r\n                            {rightActions}\r\n                        </Fragment>\r\n                    )\r\n            }\r\n\r\n        </Flex>\r\n    )\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    withIcon: true\r\n}\r\n\r\nNavbar.propTypes = {\r\n    sm: PropTypes.node,\r\n    leftActions: PropTypes.node,\r\n    rightActions: PropTypes.node,\r\n    withIcon: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default Navbar\r\n","import { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useDocumentTitle = title => {\r\n    useEffect(() => {\r\n        document.title = title\r\n    }, [title]);\r\n}\r\n\r\nuseDocumentTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default useDocumentTitle\r\n","export function isFullscreen() {\r\n    return (\r\n        document.fullscreen ||\r\n        document.mozFullScreen ||\r\n        document.webkitIsFullScreen ||\r\n        document.msFullscreenElement);\r\n};\r\n\r\nexport function parseWorksheets(worksheets) {\r\n    return worksheets.map(parseWorksheet);\r\n}\r\n\r\nexport function stringifyWorkshet(worksheet) {\r\n    const updatedWorksheet = { ...worksheet };\r\n    updatedWorksheet.content = JSON.stringify(worksheet.content);\r\n    return updatedWorksheet;\r\n}\r\n\r\nexport function parseWorksheet(worksheet) {\r\n    const updatedWorksheet = { ...worksheet };\r\n    updatedWorksheet.content = JSON.parse(worksheet.content);\r\n    return updatedWorksheet;\r\n}","import React, { useEffect, Fragment, useReducer } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { Grid, Container, Text, Flex, Icon, Button, Skeleton, Alert, AlertDescription, AlertIcon, Progress, useToast } from \"@chakra-ui/react\"\r\n\r\nimport WorksheetCard from \"../components/WorksheetCard\";\r\n\r\nimport { HiDocumentAdd } from \"react-icons/hi\";\r\nimport useBodyBackground from '../hooks/useBodyBackground';\r\nimport Navbar from '../components/Navbar';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport { parseWorksheets } from '../utils';\r\n\r\n// const examples = [\r\n//     {\r\n//         \"id\": \"67e10aff-5431-4c51-8639-06768ebdf48f\",\r\n//         \"title\": \"Frases Mexicanas\",\r\n//         \"content\": \"[{\\\"type\\\":\\\"heading 2xl\\\",\\\"children\\\":[{\\\"text\\\":\\\"Instrucciones : \\\"},{\\\"text\\\":\\\"Rellena \\\",\\\"bold\\\":true},{\\\"text\\\":\\\"los \\\"},{\\\"text\\\":\\\"espacios \\\",\\\"italic\\\":true},{\\\"text\\\":\\\"vacíos como corresponda usando las palabras a continuación\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"subtitle\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"heading xl\\\",\\\"children\\\":[{\\\"text\\\":\\\"Toluca , nieto ,tortas, pelos, taco, corrió.\\\",\\\"bold\\\":true,\\\"italic\\\":true}],\\\"textAlign\\\":\\\"center\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"exercise-block\\\",\\\"exerciseType\\\":\\\"missing-word\\\",\\\"children\\\":[{\\\"type\\\":\\\"exercise-list-items\\\",\\\"children\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"1. De lengua me hecho un \\\"},{\\\"text\\\":\\\"taco\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" .\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"2. ¿Qué Pachuca por \\\"},{\\\"text\\\":\\\"Toluca\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" ?\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"3. Mejor aquí \\\"},{\\\"text\\\":\\\"corrió\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" que aquí quedó… \\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"4. Abuelita soy tu \\\"},{\\\"text\\\":\\\"nieto\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" !\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"5. Hablar sin \\\"},{\\\"text\\\":\\\"pelos\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" en la lengua.\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"6. Me quedé como el perro de las dos \\\"},{\\\"text\\\":\\\"tortas\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" .\\\"}]}]}]},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]}]\",\r\n//         \"createdAt\": \"2021-04-24T01:50:11.979Z\",\r\n//         \"lang\": \"es\",\r\n//         \"isPublic\": false\r\n//     },\r\n//     {\r\n//         \"id\": \"1ee461c0-6a59-4092-9832-c2181cb5c402\",\r\n//         \"title\": \"El presente de Indicativo\",\r\n//         \"content\": \"[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"El Presente de Indicativo\\\",\\\"bold\\\":true},{\\\"text\\\":\\\", en español indica que la acción expresada por el verbo se da en el mismo momento en el que se habla. El presente de indicativo es uno de  los tiempos verbales más utilizados y versátiles del español. Por esta misma razón puede ser utilizado en muchos contextos diferentes. \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Este tiempo verbal no tiene por qué estar ligado únicamente al presente (ahora) sino que puede estar desligado del tiempo o referirse al pasado o al futuro.  \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Es un tiempo verbal muy versátil que nos sirve tanto para hablar del presente (\\\"},{\\\"text\\\":\\\"“¿Dónde vives?”\\\",\\\"italic\\\":true},{\\\"text\\\":\\\"), como del futuro (\\\"},{\\\"text\\\":\\\"“Este verano voy a Sicilia”\\\",\\\"italic\\\":true},{\\\"text\\\":\\\"), del pasado (\\\"},{\\\"text\\\":\\\"“Cervantes publica la primera parte del Quijote en 1605”\\\",\\\"italic\\\":true},{\\\"text\\\":\\\") y de verdades inmutables (\\\"},{\\\"text\\\":\\\"“Dos y dos son cuatro”/ “Lo que no mata, engorda” / “El aceite flota en el agua\\\",\\\"italic\\\":true},{\\\"text\\\":\\\"”).\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Además, usamos el presente para hablar de:\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Cualidades de las cosas\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Es una casa antigua y tiene un patio grande\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ese libro vale 20 euros\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Situaciones regulares\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Pedro normalmente 8 horas al día\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Juan vive en Motril y trabaja en Granada\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Situaciones momentáneas\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Mi novio esta semana está en Madrid\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Hoy no puedo trabajar\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Cosas que no cambian\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Los gatos comen ratones\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"En verano hace calor\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"El presente del indicativo también se usa para describir:\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"    \\\"},{\\\"text\\\":\\\"* Acciones habituales\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"bold\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Cuando una acción se repite en el presente, el pasado y el futuro, normalmente se emplea el presente del indicativo  para describirla.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplo:    \\\"},{\\\"text\\\":\\\" Siempre leo en voz alta.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"* Acciones futuras\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"A veces se describen acciones del futuro empleando el presente para darles más énfasis, color y vida.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplos:    \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"La fiesta empieza a las nueve.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"La semana que viene hay un eclipse del sol.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Si abres la boca, ¡estás muerto!\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"* El futuro perifrástico\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Se forma el futuro perifrástico con el verbo ir o venir conjugado en el presente.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplos:     \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Vamos a ir con ellos mañana.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Mi padre viene el mes próximo.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"* Acciones del pasado\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Acciones reportadas en los periódicos, revistas, etc., a menudo emplean el presente para hacerlas más vivas.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplos:   \\\"},{\\\"text\\\":\\\" \\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"El robo tiene lugar el 18 de febrero de 1868. \\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Tres hombres enmascarados entran en el banco, sacan sus pistolas y piden a los empleados que estén tranquilos.\\\",\\\"italic\\\":true}]}]\",\r\n//         \"createdAt\": \"2021-04-24T02:42:29.794Z\",\r\n//         \"lang\": \"es\",\r\n//         \"isPublic\": true\r\n//     },\r\n//     {\r\n//         \"id\": \"b9e5b43d-63ae-4879-8f40-7280d8432a74\",\r\n//         \"title\": \"Vocabulary B1-B2: Health\",\r\n//         \"content\": \"[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Complete the sentences using the words below.\\\",\\\"bold\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"bold\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"x-ray, medicine, ambulance, dentist, nurse, bandage\\\",\\\"italic\\\":true}],\\\"textAlign\\\":\\\"center\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"exercise-block\\\",\\\"exerciseType\\\":\\\"missing-word\\\",\\\"children\\\":[{\\\"type\\\":\\\"exercise-list-items\\\",\\\"children\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"A \\\"},{\\\"text\\\":\\\"nurse\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" helps a doctor. They can also help patients who don't have a serious condition.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\" \\\"},{\\\"text\\\":\\\" Medicine\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" makes us feel better or helps us get better. It comes in many forms.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"We can put a \\\"},{\\\"text\\\":\\\"bandage\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" around an injury or body part that hurts.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\" An \\\"},{\\\"text\\\":\\\"X-ray\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" is a picture of our bones.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"An \\\"},{\\\"text\\\":\\\"ambulance\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" takes people to the hospital quickly.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"A \\\"},{\\\"text\\\":\\\"dentist\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" checks our teeth.\\\"}]}]}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]}]\",\r\n//         \"createdAt\": \"2021-04-24T22:18:44.365Z\",\r\n//         \"lang\": \"en\",\r\n//         \"isPublic\": true\r\n//     }\r\n// ]\r\n\r\nconst initialState = {\r\n    error: undefined,\r\n    loading: true,\r\n    worksheets: undefined,\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'call-api':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case 'api-call-ended':\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case 'update-worksheets':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                worksheets: action.payload.worksheets\r\n            }\r\n\r\n        case 'api-error':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            console.warn(\"The action type given did not match any posible action\", action)\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Home = () => {\r\n    const history = useHistory();\r\n    const toast = useToast();\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const { error, loading, worksheets } = state;\r\n\r\n    useEffect(() => {\r\n\r\n        async function getWorksheets() {\r\n            dispatch({ type: 'call-api' });\r\n\r\n            const response = await fetch(\"/api/activities\");\r\n            const json = await response.json();\r\n\r\n            if (response.ok) {\r\n                dispatch({ type: 'update-worksheets', payload: { worksheets: parseWorksheets(json) } });\r\n                return;\r\n            }\r\n            dispatch({ type: 'api-error', payload: { error: json } })\r\n\r\n        }\r\n\r\n        getWorksheets()\r\n\r\n    }, [])\r\n\r\n    async function handleCreateWorksheet() {\r\n\r\n        dispatch({ type: 'call-api' });\r\n\r\n        const newWorksheet = {\r\n            title: \"Actividad sin título\",\r\n            lang: \"es\",\r\n            published: false,\r\n            content: JSON.stringify([{\r\n                type: 'paragraph',\r\n                children: [{ text: '' }]\r\n            }]),\r\n            createdAt: new Date()\r\n        }\r\n\r\n        const response = await fetch(\"/api/activities\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newWorksheet)\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        dispatch({ type: 'api-call-ended' });\r\n\r\n        if (response.ok) {\r\n            //Redirect to the form page with the id of the document created\r\n            history.push(`/worksheets/${json._id}/edit`);\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: 'api-error', payload: { error: json } });\r\n    }\r\n\r\n    async function handleDeleteWorksheet(id) {\r\n        dispatch({ type: 'call-api' });\r\n\r\n        const response = await fetch(`/api/activities/${id}`, {\r\n            method: \"DELETE\"\r\n        })\r\n\r\n        const json = response.json();\r\n\r\n        if (response.ok) {\r\n\r\n            const updatedWorksheets = [...worksheets].filter(worksheet => worksheet._id !== id);\r\n\r\n            dispatch({ type: 'update-worksheets', payload: { worksheets: updatedWorksheets } });\r\n\r\n            toast({\r\n                title: \"Actividad Eliminada\",\r\n                description: \"La actividad fue eliminada exitósamente\",\r\n                status: \"info\",\r\n                durarion: 5000,\r\n                isClosable: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: 'api-error', payload: { error: json } });\r\n    }\r\n\r\n    const worksheetsHandler = {\r\n        createSheet: handleCreateWorksheet,\r\n        deleteSheet: handleDeleteWorksheet,\r\n    }\r\n\r\n    useBodyBackground(\"var(--chakra-colors-gray-100)\")\r\n    useDocumentTitle(`LangSheets | Mis actividades`);\r\n    return (\r\n        <Fragment>\r\n\r\n            <Navbar />\r\n            { loading &&\r\n                <Progress size=\"xs\" isIndeterminate\r\n                    sx={{\r\n                        \"& > div\": {\r\n                            background: \"var(--chakra-colors-brand-300)\"\r\n                        }\r\n                    }}\r\n                />\r\n            }\r\n            { error &&\r\n                <Alert status=\"error\">\r\n                    <AlertIcon />\r\n                    <AlertDescription>{error.message}</AlertDescription>\r\n                </Alert>\r\n            }\r\n\r\n            <Container maxW=\"container.lg\" >\r\n                <Text fontSize=\"xx-large\" fontWeight=\"semibold\" my=\"5\" textAlign={[\"center\", \"left\"]}> Mis Worksheets </Text>\r\n\r\n\r\n                <Grid\r\n                    mx={{ md: \"7\", lg: \"0\" }}\r\n                    gap=\"5\"\r\n                    justifyContent=\"center\"\r\n                    placeItems=\"center\"\r\n                    templateColumns={{ base: \"\", md: \"repeat(2, var(--chakra-sizes-72))\", lg: \"repeat(3, minmax(var(--chakra-sizes-72),var(--chakra-sizes-80)))\" }}\r\n                >\r\n                    {!!worksheets && worksheets.map(worksheet => (\r\n                        <Skeleton key={worksheet._id} isLoaded={!loading} >\r\n                            <WorksheetCard\r\n                                {...{ ...worksheet, ...worksheetsHandler }}\r\n                            />\r\n                        </Skeleton>\r\n                    ))\r\n                    }\r\n                    <Flex width=\"full\" as={Button} colorScheme=\"brand\" variant=\"ghost\" background=\"white\" onClick={worksheetsHandler.createSheet} leftIcon={<Icon as={HiDocumentAdd} />} size=\"lg\" boxShadow=\"base\" height=\"40\" borderRadius=\"xl\">\r\n                        Crear Nueva actividad\r\n                        </Flex>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Home\r\n","import Icon from '@chakra-ui/icon'\r\nimport { Box, Flex } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React, { Fragment } from 'react'\r\nimport { FaChalkboardTeacher, FaPrint } from 'react-icons/fa'\r\nimport { Logo } from '../../svgs'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Flex flexDirection=\"column\" alignItems=\"center\">\r\n\r\n                <Box px=\"4\" variant=\"unstyled\" _focus={{ outline: \"none\" }} as=\"a\" href=\"/\">\r\n                    <Logo width=\"70px\" />\r\n                </Box>\r\n\r\n                <Flex mt=\"40\" flexDirection=\"column\" flexGrow=\"1\" width=\"full\">\r\n\r\n                    <Tooltip hasArrow arrowSize=\"5\" placement=\"auto-start\" label=\"Previsualizar actividad\">\r\n                        <Box\r\n                            as=\"a\" target=\"_blank\" referrerPolicy=\"no-referrer\" href={`/worksheets/${props.id}/practice`}\r\n                            sx={{\r\n                                \"&\": {\r\n                                    transition: \"all ease 300ms\",\r\n                                    color: \"white\",\r\n                                    cursor: \"pointer\",\r\n                                    textAlign: \"center\",\r\n                                    borderRadius: \"none\"\r\n                                },\r\n                                \"&:hover, &:active\": {\r\n                                    background: \"#252388\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Icon m=\"4\" w={8} h={8} as={FaChalkboardTeacher} />\r\n                        </Box>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip hasArrow arrowSize=\"5\" placement=\"auto-start\" label=\"Imprimir actividad\">\r\n                        <Box\r\n                            onClick={props.handlePrint}\r\n                            sx={{\r\n                                \"&\": {\r\n                                    transition: \"all ease 300ms\",\r\n                                    color: \"white\",\r\n                                    cursor: \"pointer\",\r\n                                    textAlign: \"center\",\r\n                                    borderRadius: \"none\"\r\n                                },\r\n                                \"&:hover, &:active\": {\r\n                                    background: \"#252388\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Icon m=\"4\" w={8} h={8} as={FaPrint} />\r\n                        </Box>\r\n                    </Tooltip>\r\n\r\n                </Flex>\r\n\r\n            </Flex>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, { useRef } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Editable, EditablePreview, EditableInput, Box } from \"@chakra-ui/react\"\r\n\r\n\r\nfunction WorksheetTitle({ title, dispatch }) {\r\n    const textRef = useRef();\r\n    return (\r\n        <Box\r\n            onClick={() => textRef.current.focus()}\r\n            sx={{\r\n                \"@media print\": {\r\n                    textAlign: \"center\",\r\n                }\r\n            }}\r\n        >\r\n            <Editable\r\n                fontSize=\"x-large\"\r\n                required\r\n                id=\"title\"\r\n                value={title}\r\n                onChange={newValue => dispatch({ type: \"change-worksheet-prop\", payload: { property: \"title\", value: newValue } })}\r\n                type=\"text\"\r\n                placeholder=\"Escribe un tílulo aquí...\"\r\n            >\r\n                <EditablePreview ref={textRef} />\r\n                <EditableInput />\r\n            </Editable>\r\n        </Box>\r\n    )\r\n}\r\n\r\nWorksheetTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default WorksheetTitle\r\n","import React from 'react'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport { Editable } from \"slate-react\";\r\n\r\nconst CustomEditable = ({ decorate, renderElement, renderLeaf, readOnly, placeholder }) => (\r\n    <Box\r\n        background=\"white\"\r\n        p=\"5\"\r\n        as={Editable}\r\n        {...{\r\n            decorate,\r\n            renderElement,\r\n            renderLeaf,\r\n            readOnly,\r\n            placeholder,\r\n        }}\r\n    />\r\n)\r\n\r\nexport default CustomEditable\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Select, Box, Text } from '@chakra-ui/react';\r\n\r\nconst LanguagePicker = ({ dispatch, lang }) => {\r\n    return (\r\n        <Box my=\"4\">\r\n            <Text my=\"2\">Idioma</Text>\r\n            <Select\r\n                background=\"white\"\r\n                required\r\n                value={lang}\r\n                onChange={e => dispatch({ type: \"change-worksheet-prop\", payload: { property: \"lang\", value: e.target.value } })}\r\n            >\r\n                <option value=\"\"></option>\r\n                <option value=\"de\">Alemán</option>\r\n                <option value=\"es\">Español</option>\r\n                <option value=\"fr\">Francés</option>\r\n                <option value=\"en\">Inglés</option>\r\n                <option value=\"ru\">Ruso</option>\r\n                <option value=\"zh\">Chino</option>\r\n                <option value=\"ja\">Japonés</option>\r\n            </Select>\r\n        </Box>\r\n    )\r\n}\r\n\r\nLanguagePicker.defaultProps = {\r\n    lang: \"\",\r\n}\r\n\r\nLanguagePicker.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    lang: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default LanguagePicker\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Text } from '@chakra-ui/layout'\r\nimport { Tooltip, Switch } from '@chakra-ui/react'\r\n\r\nconst PublicSwitch = ({ dispatch, isPublic }) => {\r\n    return (\r\n        <Box my=\"4\">\r\n            <Tooltip label=\"Si la actividad es pública, será listada en la página global de actividades\">\r\n                <Text my=\"2\" >Actividad Pública <Switch colorScheme=\"brand\" ml=\"4\" onChange={(e) => dispatch({ type: \"change-worksheet-prop\", payload: { property: \"isPublic\", value: !isPublic } })} isChecked={isPublic} /> </Text>\r\n            </Tooltip>\r\n        </Box>\r\n    )\r\n}\r\n\r\nPublicSwitch.defaultProps = {\r\n    isPublic: true\r\n}\r\n\r\nPublicSwitch.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    isPublic: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default PublicSwitch\r\n","import { Editor, Transforms } from 'slate';\r\n\r\nconst withTextAlignment = (editor) => {\r\n\tconst { normalizeNode } = editor;\r\n\r\n\teditor.normalizeNode = (entry) => {\r\n\t\tconst [node, path] = entry;\r\n\t\t// make sure, every block has a standard alignment of 'left'\r\n\t\tif (Editor.isBlock(node) && !node.alignment) {\r\n\t\t\tTransforms.setNodes(editor, { textAlign: 'left' }, { at: path });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Default Behaviour\r\n\t\tnormalizeNode(entry);\r\n\t};\r\n\treturn editor;\r\n};\r\nexport default withTextAlignment;\r\n","import { Transforms, Node, Path } from 'slate';\r\n\r\nconst withExerciseBlock = (editor) => {\r\n    const { normalizeNode } = editor;\r\n\r\n    editor.normalizeNode = entry => {\r\n        const [node, path] = entry;\r\n        if (node.type === 'exercise-block') {\r\n\r\n            //Add a paragraph below if there's not a block below the exercise block \r\n            if (!Node.has(editor, Path.next(path))) {\r\n                return Transforms.insertNodes(editor, { type: \"paragraph\", children: [{ text: \"\" }] }, { at: Path.next(path) });\r\n            }\r\n\r\n            // if (!Node.has(editor, Path.previous(path))) {\r\n            //     console.log(\"Paragraph inserted\");\r\n            //     return Transforms.insertNodes(editor, { type: \"paragraph\", children: [{ text: \"\" }] }, { at: Path.previous(path) });\r\n            // }\r\n\r\n        }\r\n        normalizeNode(entry);\r\n    }\r\n    return editor;\r\n};\r\n\r\n\r\nexport default withExerciseBlock;\r\n","import { Node, Element, Transforms, Path, Editor } from 'slate';\r\n\r\nconst withMissingWordExercise = (editor) => {\r\n\r\n    const { normalizeNode } = editor;\r\n\r\n    editor.normalizeNode = entry => {\r\n        const [node, path] = entry;\r\n\r\n        //Check whethert the block is a paragraph or a paragraph-with-missing-word\r\n        if (Editor.isBlock(editor, node) && [\"paragraph\", \"paragraph-with-missing-word\"].includes(node.type)) {\r\n\r\n            let hasMissingWords = false;\r\n\r\n            //Loock for missing word items inside the paragraph\r\n            for (const [child] of Node.descendants(node)) {\r\n                if (child.missingWord) {\r\n                    hasMissingWords = true;\r\n                }\r\n            }\r\n\r\n            //Make sure the type of paragraph corresponds \r\n            //to whether or nor they have a missing word item inside of them\r\n\r\n            if (hasMissingWords) {\r\n                if (node.type !== \"paragraph-with-missing-word\") {\r\n                    return Transforms.setNodes(editor, { type: \"paragraph-with-missing-word\" }, { at: path });\r\n                };\r\n            } else {\r\n                if (node.type === \"paragraph-with-missing-word\") {\r\n                    return Transforms.setNodes(editor, { type: \"paragraph\" }, { at: path });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (Node.isNode(node) && Element.isElement(node)) {\r\n            const firstNodePath = Node.first(editor, path)[1];\r\n            const lastNodePath = Node.last(editor, path)[1];\r\n\r\n            for (const [child, childPath] of Node.children(editor, path)) {\r\n\r\n                if (child.missingWord === true) {\r\n                    // If the node is the last child, \r\n                    // insert child with an space after it\r\n                    if (Path.equals(childPath, lastNodePath)) {\r\n                        return Transforms.insertNodes(editor, { text: \" \" }, {\r\n                            at: Path.next(childPath),\r\n                            select: true,\r\n                            hanging: true\r\n                        })\r\n                    }\r\n\r\n                    // If the node is the first child, insert an empty node before\r\n                    if (Path.equals(childPath, firstNodePath)) {\r\n                        return Transforms.insertNodes(editor, { text: ' ' },\r\n                            {\r\n                                at: childPath,\r\n                                select: true,\r\n                                hanging: true\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    //If the blank space has a next sibling with no space , insert one\r\n                    if (Node.has(editor, Path.next(childPath))) {\r\n                        let { text } = Node.get(editor, Path.next(childPath));\r\n                        if (text[0] !== ' ') {\r\n                            return Transforms.insertText(editor, ' ', {\r\n                                at: { path: Path.next(childPath), offset: 0 }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        normalizeNode(entry);\r\n    }\r\n    return editor;\r\n}\r\n\r\nexport default withMissingWordExercise;","import { Node, Transforms, Editor } from 'slate';\r\n\r\nconst withWordOrderExercise = (editor) => {\r\n\r\n    const { normalizeNode } = editor;\r\n\r\n    editor.normalizeNode = entry => {\r\n        const [node, path] = entry;\r\n\r\n        //Check whether the block is a paragraph or a word-order-exercise-paragraph\r\n        if (Editor.isBlock(editor, node) && [\"paragraph\", \"word-order-exercise-paragraph\"].includes(node.type)) {\r\n\r\n            let hasDivisions = false;\r\n\r\n            const nodeString = Node.string(node);\r\n            const divisions = nodeString.split(\"/\");\r\n\r\n            if (divisions.length > 1) {\r\n                hasDivisions = true;\r\n            }\r\n\r\n            //Make sure the type of paragraph corresponds \r\n            //to whether or nor they have divisions inside of them\r\n\r\n            if (hasDivisions) {\r\n                if (node.type !== \"word-order-exercise-paragraph\") {\r\n                    return Transforms.setNodes(editor, { type: \"word-order-exercise-paragraph\" }, { at: path });\r\n                };\r\n            } else {\r\n                if (node.type === \"word-order-exercise-paragraph\") {\r\n                    return Transforms.setNodes(editor, { type: \"paragraph\" }, { at: path });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        normalizeNode(entry);\r\n    }\r\n    return editor;\r\n}\r\n\r\nexport default withWordOrderExercise;","import { useMemo } from 'react'\r\nimport { createEditor } from 'slate';\r\nimport { withReact } from 'slate-react';\r\nimport { withHistory } from \"slate-history\";\r\n\r\n//slate Custom plugins\r\nimport { withMissingWordExercise, withTextAlignment, withExerciseBlock, withWordOrderExercise } from \"../components/Slate/plugins\";\r\n\r\nfunction useSlateEditor() {\r\n    const editor = useMemo(() =>\r\n        withTextAlignment(\r\n            withWordOrderExercise(\r\n                withExerciseBlock(\r\n                    withMissingWordExercise(\r\n                        withHistory(\r\n                            withReact(createEditor())\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n        , [])\r\n    return editor;\r\n}\r\n\r\nexport default useSlateEditor\r\n","export function shuffleArray(array) {\r\n    if (!array.length || !array) throw new Error(\"Expected an array wit items and got\", JSON.stringify(array));\r\n\r\n    let result = [...array];\r\n    let currentIndex = result.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = result[currentIndex];\r\n        result[currentIndex] = result[randomIndex];\r\n        result[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    if (array[0] === result[0]) {\r\n        return shuffleArray(result);\r\n    }\r\n\r\n    return result;\r\n}","import { nanoid } from \"nanoid\";\r\nimport { Node } from \"slate\";\r\nimport { shuffleArray } from \"./objects\";\r\n\r\n\r\nexport function getExerciseBlockProps(editor, path) {\r\n    if (!editor || !path) throw new Error('Slate editor and path are required');\r\n    let showAnswers;\r\n    let checkExercise;\r\n    for (const [node] of Node.ancestors(editor, path)) {\r\n        if (node.type === \"exercise-block\") {\r\n            showAnswers = node.showAnswers;\r\n            checkExercise = node.checkExercise;\r\n        }\r\n    }\r\n\r\n    return {\r\n        showAnswers,\r\n        checkExercise\r\n    }\r\n}\r\n\r\n\r\n//Word order exercise functions\r\n\r\n//turns a string into an array of words\r\nexport function getDivisions(string, config) {\r\n    let words = string.split(\"/\");\r\n\r\n    let withIDs = words.map(word => ({ word, id: nanoid(), isCorrect: false }));\r\n\r\n    return config.shuffle ? shuffleArray(withIDs) : withIDs;\r\n\r\n}","import { ReactEditor, useSlate } from \"slate-react\"\r\nimport { Transforms } from \"slate\"\r\nimport { Box } from \"@chakra-ui/layout\";\r\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\r\nimport Icon from \"@chakra-ui/icon\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { useMediaQuery } from \"@chakra-ui/media-query\";\r\nimport { getExerciseBlockProps } from \"../../../utils/exerciseBlocks\";\r\n\r\n\r\nconst Mark = ({ isCorrect, checkExercise, showAnswers }) => {\r\n    //if the exercises is not checked or the answers are shown, render nothing\r\n    if (!checkExercise || showAnswers) return null;\r\n    //render correct mark\r\n    if (isCorrect) {\r\n        return <InputRightElement as=\"span\" children={<Icon as={FaCheck} color=\"green.400\" />} />\r\n    }\r\n    //render wrong mark\r\n    return <InputRightElement as=\"span\" children={<Icon as={FaTimes} color=\"red.400\" />} />\r\n}\r\n\r\nexport const MissingWordInput = (props) => {\r\n    const { text: correctAnswer, userAnswer = \"\", isCorrect = false } = props.leaf;\r\n\r\n    const editor = useSlate();\r\n    const path = ReactEditor.findPath(editor, props.text);\r\n\r\n    const { showAnswers, checkExercise } = getExerciseBlockProps(editor, path)\r\n\r\n    function setLeafProps(properties) {\r\n        Transforms.setNodes(editor, properties, { at: path })\r\n    }\r\n\r\n    function handleOnChange(e) {\r\n        const value = e.target.value;\r\n        setLeafProps({\r\n            isAnswered: value.trim().length > 0,\r\n            isCorrect: handleIsCorrect(value),\r\n            userAnswer: value\r\n        });\r\n    }\r\n\r\n    function handleIsCorrect(userAnswer) {\r\n        //remove all the spaces around the words and compare them in a non sensitive case\r\n        return userAnswer.toLowerCase().trim() === correctAnswer.toLowerCase().trim();\r\n    }\r\n\r\n    const inputValue = showAnswers ? correctAnswer : userAnswer;\r\n\r\n    // return <Input variant=\"filled\" readOnly={isChecked} value={userAnswer} onChange={handleOnChange} />\r\n\r\n    return (\r\n        <InputGroup w=\"32\" as=\"span\" display=\"inline-block\" >\r\n            <Input variant=\"filled\" readOnly={checkExercise} value={inputValue} onChange={handleOnChange} />\r\n            <Mark {...{ isCorrect, checkExercise, showAnswers }} />\r\n        </InputGroup>\r\n    )\r\n\r\n}\r\n\r\nexport const MissingWordEditable = props => {\r\n\r\n    const [isPrinting] = useMediaQuery([\"print\"])\r\n\r\n    //If printing preview is active duplicate the content of the element using the text property of leaf \r\n    //so the missing word space in the printing view is larger\r\n    //In normal mode use the children property to render the text in the leaf\r\n    const children = isPrinting\r\n        ? props.leaf.text + props.leaf.text\r\n        : props.children;\r\n\r\n    return (\r\n        <Box as=\"span\"\r\n            color={isPrinting ? \"transparent\" : \"\"}\r\n            borderRadius=\"sm\"\r\n            px=\"1\"\r\n            background=\"brand.200\"\r\n            {...props.attributes}\r\n            sx={{\r\n                \"@media print\": {\r\n                    background: \"none\",\r\n                    borderBottom: \"solid black 1px\",\r\n                    color: \"transparent\",\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n\r\n","import { Text } from \"@chakra-ui/layout\";\r\nimport { useReadOnly } from \"slate-react\"\r\nimport { MissingWordEditable, MissingWordInput } from \"./MissingWord\";\r\nconst Leaf = (props) => {\r\n    let { leaf, children, attributes } = props\r\n    const isReadOnly = useReadOnly();\r\n    const isMissingWord = leaf.missingWord === true;\r\n\r\n    if (isMissingWord) {\r\n        //If the editor is in readOnly mode render an input to be answered by a student\r\n        if (isReadOnly) {\r\n            return <MissingWordInput {...props} />\r\n        }\r\n        return <MissingWordEditable {...props} />\r\n    }\r\n\r\n    if (leaf.division) {\r\n        children = <Text as=\"span\" fontWeight=\"black\" color=\"brand.500\">{children}</Text>\r\n    }\r\n\r\n    if (leaf.bold) {\r\n        children = <strong>{children}</strong>\r\n    }\r\n    if (leaf.italic) {\r\n        children = <em>{children}</em>\r\n    }\r\n\r\n    if (leaf.underline) {\r\n        children = <u>{children}</u>\r\n    }\r\n\r\n    if (leaf.strike) {\r\n        children = <s>{children}</s>\r\n    }\r\n\r\n    //Default text element\r\n    return (\r\n        <span {...attributes}>{children}</span>\r\n    )\r\n};\r\n\r\nexport default Leaf\r\n","import { Text } from '@chakra-ui/layout';\r\n\r\nconst DefaultElement = (props) => {\r\n    const { children, element, attributes } = props;\r\n    const { textAlign } = element;\r\n    return (\r\n        <Text textAlign={textAlign} {...attributes}>\r\n            {children}\r\n        </Text>\r\n    )\r\n}\r\n\r\n\r\nexport default DefaultElement\r\n","import React from 'react'\r\n\r\nconst MissingWordExerciseParagraph = (props) => {\r\n    const { attributes, children } = props;\r\n    return (\r\n        <div {...attributes}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default MissingWordExerciseParagraph\r\n","import React, { useRef } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { ReactEditor, useReadOnly, useSlate } from 'slate-react';\r\n\r\nimport { Flex } from '@chakra-ui/layout';\r\nimport { Text } from '@chakra-ui/layout';\r\nimport { Node, Transforms } from 'slate';\r\nimport { getDivisions, getExerciseBlockProps } from '../../../utils/exerciseBlocks';\r\n\r\nconst WordOrderExerciseParagraph = (props) => {\r\n    const isReadOnly = useReadOnly();\r\n\r\n    if (isReadOnly)\r\n        return <WordOrderPractice {...props} />\r\n\r\n    return <Editable {...props} />\r\n}\r\n\r\nconst WordOrderPractice = props => {\r\n    const editor = useSlate();\r\n    const { element } = props;\r\n\r\n    const path = ReactEditor.findPath(editor, element);\r\n    const { showAnswers, checkExercise } = getExerciseBlockProps(editor, path)\r\n\r\n    const textContent = Node.string(element);\r\n    //save the shuffled words in a ref to prevent them from being shuffled on each render\r\n    const userAnswersRef = useRef(getDivisions(textContent, { shuffle: true }));\r\n    const { userAnswers = userAnswersRef.current } = element;\r\n\r\n    const correctAnswers = getDivisions(textContent, { shuffle: false });\r\n\r\n    function handleOnDragEnd(result) {\r\n        // `destination` is `undefined` if the item was dropped outside the list\r\n        // In this case, do nothing\r\n        if (!result.destination) {\r\n            return\r\n        }\r\n\r\n        const items = reorder(\r\n            userAnswers,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        const path = ReactEditor.findPath(editor, element);\r\n        Transforms.setNodes(editor, { userAnswers: checkAnswers(items, correctAnswers) }, { at: path })\r\n    }\r\n\r\n    if (showAnswers) {\r\n        return (\r\n            <Flex flexWrap=\"wrap\" alignItems=\"center\" my=\"4\" p=\"4\" borderRadius=\"base\" border=\"2px var(--chakra-colors-purple-600) solid\">\r\n                {\r\n                    correctAnswers.map((word) => (\r\n                        <WordComponent key={word.id} {...{ ...word, isCorrect: true, }} />\r\n                    ))\r\n                }\r\n            </Flex>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd} >\r\n            <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n                {(provided, snapshot) => (\r\n                    <Flex flexWrap=\"wrap\" alignItems=\"center\" my=\"4\" p=\"4\" borderRadius=\"base\" border=\"2px var(--chakra-colors-purple-600) solid\"\r\n                        ref={provided.innerRef}\r\n                        {...provided.droppableProps}\r\n                        className={`${snapshot.isDraggingOver && 'draggingOver'}`}\r\n                    >\r\n                        {userAnswers.map((word, index) => (\r\n                            <DraggableWordComponent key={word.id} {...{ ...word, index, checkExercise }} />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </Flex>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nconst WordComponent = (props) => {\r\n    return (\r\n        <Text\r\n            m=\"1\" px=\"2\"\r\n            py=\"1\"\r\n            bg={props.isCorrect ? \"green.500\" : \"yellow.300\"}\r\n            color={props.isCorrect ? \"white\" : \"black\"}\r\n            borderRadius=\"base\"\r\n            as=\"span\"\r\n            fontWeight=\"medium\"\r\n            transition=\"all ease 300\"\r\n            cursor=\"default\"\r\n        >\r\n            {props.word}\r\n        </Text>\r\n    )\r\n}\r\n\r\nconst DraggableWordComponent = ({ id, word, index, checkExercise, isCorrect }) => {\r\n\r\n    function getBg(snapshot) {\r\n\r\n        if (snapshot.isDragging) {\r\n            return \"purple.600\"\r\n        }\r\n\r\n        if (checkExercise) {\r\n            if (isCorrect)\r\n                return \"green.300\"\r\n\r\n            return \"yellow.300\"\r\n        }\r\n\r\n        return \"purple.500\"\r\n    }\r\n\r\n    function getColor() {\r\n        if (checkExercise && !isCorrect) {\r\n            return \"black\"\r\n        }\r\n        return \"white\"\r\n    }\r\n\r\n    return (\r\n        <Draggable key={id} draggableId={id} index={index}>\r\n            {(provided, snapshot) => (\r\n                <Text\r\n                    userSelect=\"none\"\r\n                    m=\"1\"\r\n                    px=\"2\"\r\n                    py=\"1\"\r\n                    borderRadius=\"base\"\r\n                    as=\"span\"\r\n                    cursor=\"move\"\r\n                    fontWeight=\"medium\"\r\n                    color={getColor()}\r\n                    transition=\"all ease 300\"\r\n                    bg={getBg(snapshot)}\r\n                    style={provided.draggableProps.style}\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                >\r\n                    {word}\r\n                </Text>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nconst Editable = (props) => {\r\n    const { attributes, children } = props;\r\n    return (\r\n        <div {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction checkAnswers(userAnswers, correctAnswers) {\r\n\r\n    return userAnswers.map((answer, index) => {\r\n        return {\r\n            ...answer,\r\n            isCorrect: answer.word === correctAnswers[index].word\r\n        };\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction reorder(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\n\r\nexport default WordOrderExerciseParagraph\r\n","import { Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction Heading({ element, children, attributes }) {\r\n    const { textAlign } = element;\r\n    const fontSize = element.type.split(\" \")[1];\r\n    return (\r\n        <Text textAlign={textAlign} fontSize={fontSize} {...attributes}>{children}</Text>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n\r\n","import { Editor, Transforms } from \"slate\";\r\n\r\nfunction isBlockActive(key, format, editor) {\r\n    if (!editor) return false;\r\n    //get the node in the current selection that matches the format given\r\n    const [match] = Editor.nodes(editor, {\r\n        match: n => n[key] === format,\r\n    })\r\n    return !!match\r\n}\r\n\r\nfunction toggleBlock(key, format, editor) {\r\n    const isActive = isBlockActive(key, format, editor);\r\n    Transforms.setNodes(\r\n        editor,\r\n        { [key]: isActive ? null : format },\r\n        { match: n => Editor.isBlock(editor, n) }\r\n    );\r\n}\r\n\r\nfunction isMarkActive(format, editor) {\r\n    if (!editor) return false;\r\n    //get the marks (style marks) in the current selection\r\n    const marks = Editor.marks(editor);\r\n    if (!marks) return false\r\n    return marks[format] === true;\r\n}\r\n\r\nfunction toggleMark(format, editor) {\r\n    if (!editor) return\r\n    const isActive = isMarkActive(format, editor)\r\n\r\n    if (isActive) {\r\n        return Editor.removeMark(editor, format)\r\n    }\r\n\r\n    return Editor.addMark(editor, format, true)\r\n\r\n}\r\n\r\nexport {\r\n    isBlockActive,\r\n    toggleBlock,\r\n    isMarkActive,\r\n    toggleMark\r\n}","import { Button } from '@chakra-ui/button';\r\nimport { MenuItem } from '@chakra-ui/menu';\r\nimport { Tooltip } from '@chakra-ui/tooltip';\r\nimport PropTypes from \"prop-types\";\r\nimport React from 'react'\r\nimport { useSlate } from 'slate-react';\r\n\r\nimport { toggleBlock, toggleMark, isBlockActive, isMarkActive } from \"../../utils/slate\";\r\n\r\n\r\nconst ToolbarButton = ({ format, label, type, customOnClick, variant, icon, formatKey, ...rest }) => {\r\n\r\n    const editor = useSlate();\r\n\r\n    function handleClick() {\r\n        if (typeof customOnClick === \"function\") {\r\n            //run custom click function\r\n            return customOnClick.call()\r\n        }\r\n        if (type === \"mark\") {\r\n            return toggleMark(format, editor);\r\n        }\r\n        return toggleBlock(formatKey, format, editor);\r\n    }\r\n\r\n    function isActive() {\r\n        if (type === \"mark\") {\r\n            return isMarkActive(format, editor);\r\n        };\r\n        return isBlockActive(formatKey, format, editor);\r\n    }\r\n\r\n    if (variant === \"button\") {\r\n        return (\r\n            <Tooltip hasArrow label={label} fontSize=\"md\">\r\n                <Button size=\"sm\" {...rest} color={isActive() ? 'brand.500' : '#616161'} background={isActive() ? \"brand.100\" : \"\"} variant=\"ghost\" onClick={handleClick} >\r\n                    {icon}\r\n                </Button>\r\n            </Tooltip >\r\n        )\r\n    };\r\n\r\n    return (\r\n        <MenuItem color={isActive() ? \"brand.500\" : \"\"} background={isActive() ? \"brand.100\" : \"\"} onClick={handleClick} icon={icon} >\r\n            {label}\r\n        </MenuItem>\r\n    )\r\n\r\n}\r\n\r\nToolbarButton.defaultProps = {\r\n    customOnClick: undefined,\r\n    variant: \"button\",\r\n    formatKey: \"type\"\r\n}\r\n\r\nToolbarButton.propTypes = {\r\n    customOnClick: PropTypes.func,\r\n    formatKey: PropTypes.string.isRequired,\r\n    format: PropTypes.string.isRequired,\r\n    icon: PropTypes.node,\r\n    variant: PropTypes.oneOf([\"menuListItem\", \"button\"]).isRequired,\r\n    type: PropTypes.oneOf([\"mark\", \"block\"]).isRequired,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.node\r\n    ]).isRequired,\r\n}\r\nexport default ToolbarButton\r\n","import { Button, ButtonGroup } from '@chakra-ui/button';\r\nimport React, { Fragment } from 'react'\r\nimport { Transforms } from 'slate';\r\nimport { ReactEditor, useSlate } from 'slate-react';\r\n\r\nconst ScoringSection = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <ButtonsSection {...props} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst ButtonsSection = (props) => {\r\n    const editor = useSlate();\r\n\r\n    const exerciseBlockPath = ReactEditor.findPath(editor, props.element);\r\n\r\n    function handleCheckAnswers() {\r\n        Transforms.setNodes(editor, { checkExercise: true }, { at: exerciseBlockPath });\r\n    }\r\n\r\n    function handleShowAnswers() {\r\n        Transforms.setNodes(editor, { showAnswers: true }, { at: exerciseBlockPath });\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup display=\"flex\" flexWrap=\"wrap\" spacing={[\"0\", \"4\"]} justifyContent=\"center\" colorScheme=\"purple\" size=\"sm\">\r\n            <Button my=\"2\" variant=\"solid\"\r\n                onClick={handleCheckAnswers}\r\n            >\r\n                Calificar respuestas\r\n            </Button>\r\n            <Button my=\"2\" variant=\"outline\"\r\n                onClick={handleShowAnswers}\r\n            >\r\n                Ver respuestas\r\n            </Button>\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\nexport default ScoringSection\r\n","import React, { Fragment } from \"react\";\r\nimport { useReadOnly, useSelected, useFocused, useSlate } from \"slate-react\";\r\nimport { Box, Collapse, Divider, Flex, Icon, IconButton, Input, Popover, PopoverBody, PopoverCloseButton, PopoverContent, PopoverHeader, PopoverTrigger, Text } from \"@chakra-ui/react\";\r\nimport ToolbarButton from \"../ToolbarButton\";\r\nimport ScoringSection from \"../../ScoringSection\";\r\nimport { Editor, Range } from \"slate\";\r\n\r\nimport { toggleMark } from \"../../../utils/slate\";\r\nimport { shuffleArray } from \"../../../utils/objects\";\r\n\r\nimport { MissingWord as MissingWordIcon } from \"../../../svgs\";\r\nimport { IoMdHelpCircleOutline } from \"react-icons/io\";\r\n\r\nconst EXERCISES_TYPES = {\r\n    'missing-word': \"Palabras faltantes\",\r\n    'word-order': \"Ordenar oraciones\"\r\n}\r\n\r\nconst EXERCISES_HELP_TEXT = {\r\n    \"missing-word\": <Fragment>\r\n        <Text my=\"2\">\r\n            Cada oración puede contener una o múltiple palabras faltantes.\r\n        </Text>\r\n        <Text my=\"2\">\r\n            Para añadir una palabra faltante seleccione la palabra(s) y presione el boton de añadir palabra faltante. <Icon color=\"brand.500\" w=\"2.5em\" as={MissingWordIcon} />\r\n        </Text>\r\n\r\n        <Text my=\"2\">\r\n            Cada palabra faltante lucirá con un fondo de color púrpura.\r\n        </Text>\r\n\r\n        <Text my=\"2\" color=\"brand.500\" fontWeight=\"semibold\">\r\n            Ejemplo:\r\n    </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Escribiendo la siguiente oración\r\n        </em>\r\n        </Text>\r\n        <Text my=\"2\" as=\"samp\">\r\n            Si quieres cambiar el <Text px=\"2\" as=\"span\" bg=\"brand.200\" borderRadius=\"base\" >mundo</Text>, cámbiate a ti mismo.\r\n    </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Se creara el siguiente ejercicio :\r\n        </em>\r\n        </Text>\r\n        <Flex alignItems=\"center\" flexWrap=\"wrap\">\r\n            Si quieres cambiar el <Input w=\"24\" bg=\"gray.100\" />, cámbiate a ti mismo.\r\n    </Flex>\r\n\r\n    </Fragment>,\r\n    \"word-order\": <Fragment>\r\n        <Text my=\"2\">\r\n            Cada oración tiene que ser dividida usando diagonales <Text as=\"kbd\" bg=\"brand.100\">/</Text>\r\n        </Text>\r\n        <Text my=\"2\" color=\"brand.500\" fontWeight=\"semibold\">\r\n            Ejemplo:\r\n        </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Escribiendo la siguiente oración\r\n            </em>\r\n        </Text>\r\n        <Text my=\"2\" as=\"samp\">\r\n            Si quieres <Text as=\"span\" color=\"brand.500\" fontSize=\"x-large\">/</Text> cambiar <Text as=\"span\" color=\"brand.500\" fontSize=\"x-large\">/</Text>el mundo, cámbiate<Text as=\"span\" color=\"brand.500\" fontSize=\"x-large\">/</Text> a ti mismo.\r\n        </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Se creara el siguiente ejercicio :\r\n            </em>\r\n        </Text>\r\n        <Flex flexWrap=\"wrap\">\r\n            {\r\n                shuffleArray([\"Si quieres\", \"cambiar\", \"el mundo, cámbiate\", \"a ti mismo.\"]).map((word, index) => (\r\n                    <Text key={`${word}-${index}`} as=\"span\" borderRadius=\"base\" m=\"1\" px=\"1\" py=\"2\" color=\"white\" bg=\"brand.500\">{word}</Text>\r\n                ))\r\n            }\r\n        </Flex>\r\n    </Fragment>\r\n}\r\n\r\nfunction handleCreateMissingWord(editor, node) {\r\n    //Make sure there's text selected\r\n    if (Range.isCollapsed(editor.selection)) {\r\n        alert(\"Para crear una palabra faltante , seleciona primero la palabra\")\r\n        return\r\n    }\r\n\r\n    //Asign the property missingWord into the selected text in the editor\r\n    toggleMark(\"missingWord\", editor)\r\n}\r\n\r\nconst Tools = (props) => {\r\n    const editor = useSlate();\r\n    switch (props.exerciseType) {\r\n        case 'missing-word':\r\n            return (\r\n                <Box w=\"full\">\r\n                    <ToolbarButton m=\"2\" colorScheme=\"brand\" type=\"mark\" customOnClick={() => handleCreateMissingWord(editor)} format=\"missingWord\" label=\"Añadir Palabra faltante\" icon={<Icon width=\"2.5em\" as={MissingWordIcon} />} />\r\n                    <Divider borderBottomWidth=\"2px\" opacity=\"1\" />\r\n                </Box>\r\n            )\r\n        case 'word-order':\r\n            return null\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\n\r\nexport const ExerciseBlock = (props) => {\r\n    const editor = useSlate();\r\n    const isReadOnly = useReadOnly();\r\n\r\n    const isFocused = useFocused();\r\n    const isSelected = useSelected();\r\n\r\n    function isActive() {\r\n        if (isFocused && isSelected) {\r\n            if (editor.selection) {\r\n                if (Range.isExpanded(editor.selection)) {\r\n                    const [element] = Editor.fragment(editor, editor.selection);\r\n                    if (element.exerciseType === \"missing-word\") {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if (isReadOnly) {\r\n        return (\r\n            <Fragment>\r\n                <Box {...props.attributes} borderBottomRadius=\"base\" py=\"4\" >\r\n                    {props.children}\r\n                </Box>\r\n                <ScoringSection {...props} />\r\n            </Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <Box borderRadius=\"5px\" border={`${isActive() ? \"var(--chakra-colors-brand-100)\" : \"transparent\"} 1px solid`} {...props.attributes} transition=\"all ease 300ms\" position=\"relative\"  >\r\n\r\n            <Collapse in={isActive()} animateOpacity contentEditable={false}>\r\n                {!isReadOnly &&\r\n                    (<Box borderTopRadius=\"base\" w={[\"full\", \"full\", \"auto\"]} bg=\"brand.400\" px=\"4\" py=\"2\" color=\"white\">\r\n                        Actividad: <b> {EXERCISES_TYPES[props.element.exerciseType]} </b>\r\n\r\n                        {\r\n                            !!EXERCISES_HELP_TEXT[props.element.exerciseType] &&\r\n                            <Popover>\r\n                                <PopoverTrigger>\r\n                                    <IconButton variant=\"ghost\" colorScheme=\"white\" icon={<Icon as={IoMdHelpCircleOutline} />} />\r\n                                </PopoverTrigger>\r\n                                <PopoverContent>\r\n                                    <PopoverCloseButton />\r\n                                    <PopoverHeader color=\"black\">Ayuda</PopoverHeader>\r\n                                    <PopoverBody color=\"black\">\r\n                                        {EXERCISES_HELP_TEXT[props.element.exerciseType]}\r\n                                    </PopoverBody>\r\n                                </PopoverContent>\r\n                            </Popover>\r\n                        }\r\n\r\n\r\n                    </Box>)\r\n                }\r\n                <Tools isActive={isActive()} exerciseType={props.element.exerciseType} />\r\n            </Collapse>\r\n            <Box borderBottomRadius=\"base\" py=\"4\" px={isActive() && \"2\"}  >\r\n                {props.children}\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport const ExerciseList = (props) => {\r\n    return (\r\n        <Box {...props.attributes}>\r\n            {props.children}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExerciseBlock;","import React, { useCallback } from 'react'\r\n//Slate elements\r\nimport Leaf from \"../components/Slate/Inline/Leaf\";\r\nimport DefaultElement from \"../components/Slate/Block/DefaultElement\";\r\nimport MissingWordExerciseParagraph from \"../components/Slate/Block/MissingWordExerciseParagraph\";\r\nimport WordOrderExerciseParagraph from \"../components/Slate/Block/WordOrderExerciseParagraph\";\r\nimport Heading from \"../components/Slate/Block/Heading\";\r\nimport { ExerciseList, ExerciseBlock } from '../components/Slate/Block/ExerciseBlock';\r\n\r\n\r\nconst useSlateRender = () => {\r\n    //method to render inline leaves in the slate editor\r\n    const renderLeaf = useCallback(props => {\r\n        return <Leaf {...props} />\r\n    }, [])\r\n    //method to render block/void elements in the slate editor\r\n    const renderElement = useCallback(props => {\r\n        const type = props.element.type;\r\n\r\n        if (type?.split(\" \")[0] === \"heading\") {\r\n            return <Heading {...props} />\r\n        }\r\n        switch (type) {\r\n            case 'exercise-block':\r\n                return <ExerciseBlock {...props} />\r\n            case 'exercise-list-items':\r\n                return <ExerciseList {...props} />\r\n            case 'missing-word-exercise-paragraph':\r\n                return <MissingWordExerciseParagraph {...props} />\r\n\r\n            case 'word-order-exercise-paragraph':\r\n                return <WordOrderExerciseParagraph {...props} />\r\n\r\n            default:\r\n                return <DefaultElement {...props} />\r\n        }\r\n    }, [])\r\n    return [renderLeaf, renderElement];\r\n}\r\n\r\nexport default useSlateRender\r\n","import { useState, useEffect } from \"react\"\r\nimport { isFullscreen } from \"../utils\";\r\n\r\nexport default function useIsFullscreen() {\r\n\r\n    const initialValue = isFullscreen();\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    function handler() {\r\n        setValue(isFullscreen());\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('fullscreenchange', handler)\r\n\r\n        return () => {\r\n            document.removeEventListener('fullscreenchange', handler)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return value;\r\n}","import { Node, Transforms } from \"slate\";\r\nimport { ReactEditor } from \"slate-react\";\r\n\r\nfunction createExercise(editor, { type }) {\r\n\r\n    const newNode = {\r\n        type: 'exercise-block',\r\n        exerciseType: type,\r\n        children: [\r\n            {\r\n                type: 'exercise-list-items',\r\n                children: [\r\n                    {\r\n                        type: 'paragraph',\r\n                        children: [\r\n                            {\r\n                                text: ''\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n\r\n    if (editor.selection) {\r\n        const [node] = Node.fragment(editor, editor.selection);\r\n        //Prevent the user from creating embeded exercise-block s\r\n        if (node.type === \"exercise-block\") {\r\n            alert(\"No es posible crear un ejercicio dentro de otro ejercicio, selecciona una linea de texto vacía fuera del cuadro de ejercicio\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    Transforms.insertNodes(editor, newNode, { select: true });\r\n    ReactEditor.focus(editor);\r\n\r\n}\r\n\r\nexport {\r\n    createExercise\r\n}","import Icon from '@chakra-ui/icon'\r\nimport { Menu, MenuButton, MenuGroup, MenuItem, MenuList } from '@chakra-ui/menu'\r\nimport React, { Fragment } from 'react'\r\nimport { BsFullscreen, BsFullscreenExit } from 'react-icons/bs'\r\nimport { FaFileUpload, FaPrint } from 'react-icons/fa'\r\nimport { RiDraftFill } from 'react-icons/ri'\r\nimport { useSlate } from 'slate-react'\r\nimport useIsFullscreen from '../../hooks/useIsFullscreen'\r\nimport { MissingWord as MissingWordIcon, WordOrderIcon } from '../../svgs'\r\nimport { isFullscreen } from '../../utils'\r\nimport { createExercise } from '../Slate/commands'\r\n\r\n\r\n\r\nconst ActionsMenu = ({ saveWorksheet }) => {\r\n    const editor = useSlate();\r\n    const isFullscreen = useIsFullscreen();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Menu>\r\n                <MenuButton>Actividad</MenuButton>\r\n                <MenuList>\r\n                    <MenuItem onClick={saveWorksheet} icon={<Icon as={RiDraftFill} />} >Guardar Cambios</MenuItem>\r\n                    <MenuItem icon={<Icon as={FaFileUpload} />} >Publicar Actividad</MenuItem>\r\n                    <MenuItem icon={<Icon as={FaPrint} />} onClick={handlePrint}>Imprimir Actividad</MenuItem>\r\n                </MenuList>\r\n            </Menu>\r\n            <Menu>\r\n                <MenuButton mx=\"4\">Insertar</MenuButton>\r\n                <MenuList>\r\n                    <MenuGroup title=\"Ejercicios\">\r\n                        <MenuItem icon={<Icon w={8} h={8} as={MissingWordIcon} />} onClick={e => createExercise(editor, { type: \"missing-word\" })}>Palabras Faltantes</MenuItem>\r\n                        <MenuItem icon={<Icon w={8} h={8} as={WordOrderIcon} />} onClick={e => createExercise(editor, { type: \"word-order\" })}>Ordenar Oraciones</MenuItem>\r\n                    </MenuGroup>\r\n                </MenuList>\r\n            </Menu>\r\n            <Menu>\r\n                <MenuButton mx=\"4\">Ver</MenuButton>\r\n                <MenuList>\r\n                    {\r\n                        isFullscreen\r\n                            ? <MenuItem icon={<Icon as={BsFullscreenExit} />} onClick={handleCloseFullscreen}>Vista normal</MenuItem>\r\n                            : <MenuItem icon={<Icon as={BsFullscreen} />} onClick={handleOpenFullscreen}>Pantalla completa</MenuItem>\r\n                    }\r\n                </MenuList>\r\n            </Menu>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nfunction handlePrint(e) {\r\n    //set print preview scale to 100%\r\n    document.body.style.zoom = \"100%\";\r\n\r\n    //Deselect the button so the tooltip disappears\r\n    e.target.blur();\r\n\r\n    //Open the native print browser dialog\r\n    //with a delay to prevent the button tooltip apearing on the printing preview \r\n    setTimeout(() => {\r\n        window.print();\r\n    }, 500)\r\n}\r\n\r\nfunction handleOpenFullscreen() {\r\n\r\n    if (isFullscreen()) return;\r\n\r\n    let screen = document.documentElement;\r\n\r\n    if (screen.requestFullscreen) {\r\n        screen.requestFullscreen();\r\n    } else if (screen.mozRequestFullScreen) { /*Firefox*/\r\n        screen.mozRequestFullScreen();\r\n    } else if (screen.webkitRequestFullscreen) { /* Safari */\r\n        screen.webkitRequestFullscreen();\r\n    } else if (screen.msRequestFullscreen) { /* IE11 */\r\n        screen.msRequestFullscreen();\r\n    }\r\n}\r\n\r\nfunction handleCloseFullscreen() {\r\n\r\n    if (!isFullscreen()) return;\r\n\r\n    if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) { /*Firefox */\r\n        document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) { /* Safari */\r\n        document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) { /* IE11 */\r\n        document.msExitFullscreen();\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ActionsMenu\r\n","import { Button } from '@chakra-ui/button'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { useMediaQuery } from '@chakra-ui/media-query'\r\nimport { Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/menu'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React, { Fragment } from 'react'\r\nimport { FaAlignCenter, FaAlignJustify, FaAlignLeft, FaAlignRight, FaBold, FaHeading, FaItalic, FaStrikethrough, FaUnderline } from 'react-icons/fa'\r\nimport { HiViewGridAdd } from 'react-icons/hi'\r\nimport { useSlate } from 'slate-react'\r\nimport { MissingWord as MissingWordIcon, WordOrderIcon } from '../../svgs'\r\nimport { createExercise } from '../Slate/commands'\r\nimport ToolbarButton from '../Slate/ToolbarButton'\r\n\r\nconst DesktopToolbar = () => {\r\n\r\n    const editor = useSlate();\r\n    const [isDesktop] = useMediaQuery(\"(min-width: 1024px)\")\r\n    return (\r\n        <Fragment>\r\n\r\n            <Menu>\r\n                <MenuButton  {...isDesktop ? '' : { ...{ borderRadius: \"none\", height: \"full\" } }} flex=\"0 0 auto\" display=\"flex\" as={Button} size=\"sm\" colorScheme=\"brand\" variant=\"solid\">\r\n                    <Icon w={5} h={5} mr=\"2\" as={HiViewGridAdd} /> Insertar Ejercicio\r\n                </MenuButton>\r\n                <MenuList>\r\n                    <MenuItem icon={<Icon w={5} h={5} as={MissingWordIcon} />}\r\n                        onClick={e => createExercise(editor, { type: \"missing-word\" })}\r\n                    >Palabras faltantes</MenuItem>\r\n                    <MenuItem icon={<Icon w={5} h={5} as={WordOrderIcon} />}\r\n                        onClick={e => createExercise(editor, { type: \"word-order\" })}\r\n                    >Ordernar oraciones</MenuItem>\r\n                </MenuList>\r\n            </Menu>\r\n\r\n            <Menu>\r\n                <Tooltip hasArrow label=\"Estilos de tipografía\" fontSize=\"md\">\r\n                    <MenuButton\r\n                        as={Button}\r\n                        aria-label=\"Estilos de tipografía\"\r\n                        variant=\"ghost\"\r\n                        color=\"#616161\"\r\n                        size=\"sm\"\r\n                    >\r\n                        <Icon as={FaHeading} />\r\n                    </MenuButton>\r\n                </Tooltip>\r\n\r\n                <MenuList>\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading 4xl\" label={<Text fontSize=\"3xl\">Título 1</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading 3xl\" label={<Text fontSize=\"2xl\">Título 2</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading 2xl\" label={<Text fontSize=\"xl\">Subtítulo 1</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading xl\" label={<Text fontSize=\"lg\">Subtítulo 2</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"\" label={<Text fontSize=\"md\">Texto normal</Text>} />\r\n                </MenuList>\r\n            </Menu>\r\n\r\n            <ToolbarButton type=\"mark\" format=\"bold\" label=\"Negrita\" icon={<Icon as={FaBold} />} />\r\n            <ToolbarButton type=\"mark\" format=\"italic\" label=\"Cursiva\" icon={<Icon as={FaItalic} />} />\r\n            <ToolbarButton type=\"mark\" format=\"underline\" label=\"Subrayado\" icon={<Icon as={FaUnderline} />} />\r\n            <ToolbarButton type=\"mark\" format=\"strike\" label=\"Tachado\" icon={<Icon as={FaStrikethrough} />} />\r\n\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"left\" label=\"Alinear a la izquierda\" icon={<Icon as={FaAlignLeft} />} />\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"center\" label=\"Alinear al centro\" icon={<Icon as={FaAlignCenter} />} />\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"right\" label=\"Alinear a la derecha\" icon={<Icon as={FaAlignRight} />} />\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"justify\" label=\"Justificar\" icon={<Icon as={FaAlignJustify} />} />\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DesktopToolbar\r\n","// @refresh reset\r\nimport React, { useEffect, Fragment, useReducer } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { Slate } from \"slate-react\"\r\n\r\nimport Navbar from \"../components/Form/Navbar\";\r\nimport WorksheetTitle from \"../components/Form/WorksheetTitle\";\r\n\r\nimport { Box, Icon, IconButton, ButtonGroup, Text, Grid, GridItem, MenuItem, Flex, Menu, MenuButton, Button, MenuList, Divider, Switch, MenuGroup, useMediaQuery, Slide, MenuDivider, useToast, Skeleton, Progress } from \"@chakra-ui/react\";\r\n\r\nimport Editable from \"../components/Slate/Editable\";\r\nimport LanguagePicker from '../components/LanguagePicker';\r\nimport PublicSwitch from '../components/PublicSwitch';\r\nimport Logo from '../components/Logo';\r\n\r\nimport { FaArrowLeft, FaFileUpload, FaChalkboardTeacher, FaPrint, FaHome, FaChevronUp } from \"react-icons/fa\";\r\nimport { HiDotsVertical } from 'react-icons/hi';\r\nimport { RiDraftFill } from \"react-icons/ri\";\r\nimport { BsFullscreenExit, BsFullscreen } from \"react-icons/bs\";\r\nimport { MdKeyboardHide } from \"react-icons/md\";\r\n\r\nimport useSlateEditor from '../hooks/useSlateEditor';\r\nimport useSlateRender from '../hooks/useSlateRender';\r\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\r\nimport useIsFullscreen from \"../hooks/useIsFullscreen\";\r\n\r\nimport { Transforms } from 'slate';\r\nimport { isFullscreen, parseWorksheet, stringifyWorkshet } from '../utils';\r\nimport useSlateDecorate from '../hooks/useSlateDecorate';\r\nimport ActionsMenu from '../components/Form/ActionsMenu';\r\nimport Toolbar from '../components/Form/Toolbar';\r\n\r\n\r\nconst ACTIONS = {\r\n    SAVING_WORKSHEET: 'saving-worksheet',\r\n    TOGGLE_WRITTING_MODE: \"toggle-writting-mode\",\r\n    CHANGE_WORKSHEET_PROP: \"change-worksheet-prop\",\r\n    SET_WORKSHEET: \"set-worksheet\",\r\n    SUCESS: \"sucess\",\r\n    ERROR: \"error\",\r\n}\r\n\r\n\r\nfunction reducer(state, action) {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS.TOGGLE_WRITTING_MODE:\r\n            return {\r\n                ...state,\r\n                isWritingMode: !state.isWritingMode\r\n            }\r\n        case ACTIONS.CHANGE_WORKSHEET_PROP: {\r\n            if (!action.payload.property) throw new Error(\"'property' is required but got undefined\");\r\n\r\n            //prevent user from updating content prop when being in preview mode\r\n            if (action.payload.property === \"content\" && !state.isWritingMode) {\r\n                console.log(\"Cannot update activity state in preview mode\");\r\n                return state;\r\n            }\r\n\r\n            const updatedWorksheet = { ...state.worksheet };\r\n            updatedWorksheet[action.payload.property] = action.payload.value;\r\n\r\n            return {\r\n                ...state,\r\n                worksheet: updatedWorksheet,\r\n            }\r\n        }\r\n        case ACTIONS.SAVING_WORKSHEET:\r\n            return {\r\n                ...state,\r\n                savingWorksheet: true,\r\n            }\r\n        case ACTIONS.SET_WORKSHEET:\r\n            return {\r\n                ...state,\r\n                savingWorksheet: false,\r\n                loading: false,\r\n                worksheet: action.payload.worksheet,\r\n                error: undefined\r\n            }\r\n        case ACTIONS.ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            console.warn(\"Action provided did not matched\", action);\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialValue = {\r\n    isWritingMode: true,\r\n    loading: true,\r\n    error: \"\",\r\n    worksheet: undefined,\r\n    savingWorksheet: false\r\n}\r\n\r\nfunction handleOpenFullscreen() {\r\n\r\n    if (isFullscreen()) return;\r\n\r\n    let screen = document.documentElement;\r\n\r\n    if (screen.requestFullscreen) {\r\n        screen.requestFullscreen();\r\n    } else if (screen.mozRequestFullScreen) { /*Firefox*/\r\n        screen.mozRequestFullScreen();\r\n    } else if (screen.webkitRequestFullscreen) { /* Safari */\r\n        screen.webkitRequestFullscreen();\r\n    } else if (screen.msRequestFullscreen) { /* IE11 */\r\n        screen.msRequestFullscreen();\r\n    }\r\n}\r\n\r\nfunction handleCloseFullscreen() {\r\n\r\n    if (!isFullscreen()) return;\r\n\r\n    if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) { /*Firefox */\r\n        document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) { /* Safari */\r\n        document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) { /* IE11 */\r\n        document.msExitFullscreen();\r\n    }\r\n}\r\n\r\nconst Form = () => {\r\n    const history = useHistory();\r\n    const toast = useToast();\r\n    //Get the id of the worksheet from the url \r\n    const { id } = useParams();\r\n    //Slate editor component\r\n    const editor = useSlateEditor();\r\n\r\n    //Slate editor render functions\r\n    const [renderLeaf, renderElement] = useSlateRender();\r\n    const decorate = useSlateDecorate(editor);\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue);\r\n    const { worksheet, loading, error, isWritingMode, savingWorksheet } = state;\r\n\r\n    const isFullscreen = useIsFullscreen();\r\n\r\n    useEffect(() => {\r\n        async function getWorksheet() {\r\n            const response = await fetch(`/api/activities/${id}`);\r\n            const json = await response.json();\r\n\r\n            if (response.status === 404) {\r\n                history.push(`/worksheets/404`);\r\n                return;\r\n            }\r\n\r\n            if (response.ok) {\r\n                dispatch({ type: ACTIONS.SET_WORKSHEET, payload: { worksheet: parseWorksheet(json) } })\r\n                return;\r\n            }\r\n\r\n            toast({\r\n                description: json.message,\r\n                status: 'error',\r\n                isClosable: true\r\n            })\r\n\r\n            // dispatch({ type: ACTIONS.ERROR, payload: { error: json } });\r\n\r\n        }\r\n\r\n        getWorksheet();\r\n\r\n    }, [id, toast, history]);\r\n\r\n    async function saveWorksheet() {\r\n\r\n        if (state.loading) {\r\n            return console.log(\"Cannot save changes when page is loading\");\r\n        }\r\n\r\n        dispatch({ type: ACTIONS.SAVING_WORKSHEET });\r\n\r\n        const response = await fetch(`/api/activities/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(stringifyWorkshet(worksheet))\r\n        })\r\n\r\n        const json = await response.json();\r\n        if (response.ok) {\r\n\r\n            dispatch({ type: ACTIONS.SET_WORKSHEET, payload: { worksheet: parseWorksheet(json) } });\r\n            toast({\r\n                position: isDesktop ? 'top-right' : 'bottom',\r\n                title: \"Actividad Guardada\",\r\n                description: \"La actividad fue guardada exitósamente\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: ACTIONS.ERROR, payload: { error: json } });\r\n    }\r\n\r\n    function handlePrint(e) {\r\n        //set print preview scale to 100%\r\n        document.body.style.zoom = \"100%\";\r\n\r\n        //Deselect the button so the tooltip disappears\r\n        e.target.blur();\r\n\r\n        //Open the native print browser dialog\r\n        //with a delay to prevent the button tooltip apearing on the printing preview \r\n        setTimeout(() => {\r\n            window.print();\r\n        }, 500)\r\n    }\r\n\r\n    const title = !!state?.worksheet?.title\r\n        ? `LangSheets | ${state?.worksheet?.title}`\r\n        : \"LangSheets\";\r\n    useDocumentTitle(title);\r\n\r\n    const host = window.location.host;\r\n\r\n    const [isDesktop] = useMediaQuery(\"(min-width: 1024px)\")\r\n\r\n\r\n    function handleHideKeyboard() {\r\n        Transforms.deselect(editor);\r\n    }\r\n    return (\r\n        <Slate\r\n            {...{\r\n                editor,\r\n                value: loading\r\n                    ? [{ children: [{ text: 'Cargando...' }] }]\r\n                    : error\r\n                        ? [{ children: [{ text: '' }] }]\r\n                        : worksheet.content,\r\n                onChange: newContent => dispatch({ type: ACTIONS.CHANGE_WORKSHEET_PROP, payload: { property: \"content\", value: newContent } })\r\n            }}\r\n        >\r\n            { isDesktop\r\n                ? (\r\n\r\n                    <Grid h=\"100vh\" templateColumns=\"repeat(12, 1fr)\" templateRows=\"auto 1fr\">\r\n\r\n                        <GridItem rowSpan={2} colSpan={1} bg=\"#05043E\" py=\"10\" position=\"sticky\" top=\"0\" zIndex=\"docked\" sx={{\r\n                            \"@media print\": {\r\n                                display: \"none\",\r\n                            }\r\n                        }}>\r\n                            <Navbar {...{ handlePrint, id }} />\r\n                        </GridItem>\r\n\r\n\r\n                        <GridItem rowSpan={1} colSpan={11} sx={{\r\n                            \"@media print\": {\r\n                                display: \"none\",\r\n                            }\r\n                        }} >\r\n                            {loading &&\r\n                                <Progress size=\"sm\" isIndeterminate\r\n                                    sx={{\r\n                                        \"& > div\": {\r\n                                            background: \"var(--chakra-colors-brand-300)\"\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                            <Grid gridTemplateRows=\"auto auto auto\" gridTemplateColumns=\"50px 1fr auto\" h=\"full\" bg=\"white\">\r\n\r\n                                <GridItem rowSpan=\"1\" colSpan=\"1\" display=\"grid\" placeItems=\"center\" >\r\n                                    <Box as=\"a\" href=\"/\" mx=\"4\">\r\n                                        <Icon as={FaArrowLeft} />\r\n                                    </Box>\r\n                                </GridItem>\r\n\r\n                                <GridItem rowSpan=\"1\" display=\"flex\" flexDirection=\"row\" alignItems=\"center\" pt=\"2\">\r\n                                    <Skeleton isLoaded={!loading} >\r\n                                        <WorksheetTitle {...{ dispatch, title: worksheet ? worksheet.title : \"\" }} />\r\n                                    </Skeleton>\r\n                                </GridItem>\r\n\r\n                                <GridItem display=\"flex\" alignItems=\"center\" px=\"4\" colStart={3} rowSpan={2}>\r\n                                    <ButtonGroup>\r\n                                        <Button isLoading={savingWorksheet} onClick={saveWorksheet} colorScheme=\"brand\" variant=\"ghost\">\r\n                                            <Icon as={RiDraftFill} mr=\"2\" />\r\n                                        Guardar Cambios\r\n                                    </Button>\r\n                                        <Button colorScheme=\"brand\">\r\n                                            <Icon as={FaFileUpload} mr=\"2\" />\r\n                                        Publicar\r\n                                    </Button>\r\n                                    </ButtonGroup>\r\n                                </GridItem>\r\n\r\n                                <GridItem py=\"2\" colStart={2} rowSpan=\"1\" display=\"inline-flex\" alignItems=\"center\">\r\n                                    <ActionsMenu {...{ saveWorksheet }} />\r\n                                </GridItem>\r\n                                <GridItem py=\"2\" px=\"5\" colSpan={3} width=\"full\" borderTop=\"2px solid var(--chakra-colors-gray-100)\">\r\n                                    <ButtonGroup as={Flex} alignItems=\"center\">\r\n                                        <Toolbar />\r\n                                    </ButtonGroup>\r\n                                </GridItem>\r\n                            </Grid>\r\n\r\n                        </GridItem>\r\n\r\n\r\n                        <GridItem rowSpan={1} colSpan={8} p=\"12\" bg=\"gray.100\" sx={{\r\n                            \"@media print\": {\r\n                                gridColumn: \"span 12/span 12\",\r\n                                gridRow: \"span 2/span 2\"\r\n                            }\r\n                        }}>\r\n                            <Skeleton isLoaded={!loading}>\r\n                                <Editable\r\n                                    {...{\r\n                                        decorate,\r\n                                        renderElement,\r\n                                        renderLeaf,\r\n                                        readOnly: !isWritingMode,\r\n                                        placeholder: \"Escribe aquí...\"\r\n                                    }}\r\n                                />\r\n                            </Skeleton>\r\n                        </GridItem>\r\n\r\n                        <GridItem rowSpan={1} colSpan={3}\r\n                            sx={{\r\n                                \"@media print\": {\r\n                                    display: \"none\",\r\n                                }\r\n                            }}>\r\n                            <Divider />\r\n                            <Box p=\"4\">\r\n                                <Text fontWeight=\"semibold\" fontSize=\"lg\">Detalles de la actividad</Text>\r\n                                {\r\n                                    !loading && !error &&\r\n                                    <Fragment>\r\n                                        <LanguagePicker {...{ dispatch, lang: worksheet.lang }} />\r\n                                        <PublicSwitch {...{ dispatch, isPublic: worksheet.isPublic }} />\r\n\r\n                                    </Fragment>\r\n                                }\r\n                            </Box>\r\n\r\n                            <Divider />\r\n                            <Box p=\"4\">\r\n                                <Text fontWeight=\"semibold\" fontSize=\"lg\">Ajustes</Text>\r\n                                <Text my=\"2\" >\r\n                                    Modo de edición: <Switch colorScheme=\"brand\" ml=\"4\" isChecked={isWritingMode} onChange={() => dispatch({ type: \"toggle-writting-mode\" })} />\r\n                                </Text>\r\n                            </Box>\r\n\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n                )\r\n                : (\r\n                    <Flex flexDir=\"column\" minH=\"100vh\">\r\n                        {loading &&\r\n                            <Progress size=\"sm\" isIndeterminate\r\n                                sx={{\r\n                                    \"& > div\": {\r\n                                        background: \"var(--chakra-colors-brand-300)\"\r\n                                    }\r\n                                }}\r\n                            />\r\n                        }\r\n                        <Flex py=\"2\" px=\"4\" alignItems=\"center\">\r\n\r\n                            <Box flexGrow=\"1\">\r\n                                <Skeleton isLoaded={!loading} >\r\n                                    <WorksheetTitle {...{ dispatch, title: worksheet ? worksheet.title : \"\" }} />\r\n                                </Skeleton>\r\n                            </Box>\r\n\r\n                            <Menu>\r\n                                <MenuButton variant=\"ghost\" colorScheme=\"brand\" icon={<Icon as={HiDotsVertical} />} as={IconButton} />\r\n                                <MenuList>\r\n                                    <MenuGroup title=\"Actividad\">\r\n                                        <MenuItem onClick={saveWorksheet} icon={<Icon color=\"brand.500\" as={RiDraftFill} />} >Guardar Cambios</MenuItem>\r\n                                        <MenuItem icon={<Icon color=\"brand.500\" as={FaFileUpload} />} >Publicar Actividad</MenuItem>\r\n                                    </MenuGroup>\r\n                                    <MenuDivider />\r\n                                    <MenuGroup title=\"Ver\">\r\n                                        {\r\n                                            isFullscreen\r\n                                                ? <MenuItem icon={<Icon as={BsFullscreenExit} />} onClick={handleCloseFullscreen}>Vista normal</MenuItem>\r\n                                                : <MenuItem icon={<Icon as={BsFullscreen} />} onClick={handleOpenFullscreen}>Pantalla completa</MenuItem>\r\n                                        }\r\n                                    </MenuGroup>\r\n                                </MenuList>\r\n                            </Menu>\r\n\r\n                        </Flex>\r\n                        <Divider />\r\n                        <Box flexGrow=\"1\" bg=\"gray.100\" p=\"4\" boxShadow=\"base\">\r\n                            <Skeleton height=\"full\" isLoaded={!loading}>\r\n                                <Editable\r\n                                    {...{\r\n                                        decorate,\r\n                                        renderElement,\r\n                                        renderLeaf,\r\n                                        readOnly: !isWritingMode,\r\n                                        placeholder: \"Escribe aquí...\"\r\n                                    }}\r\n                                />\r\n                            </Skeleton>\r\n                        </Box>\r\n\r\n                        {editor.selection && (\r\n                            <Slide direction=\"bottom\" in={editor.selection} style={{ zIndex: 50, boxShadow: \"var(--chakra-shadows-dark-lg)\", }}>\r\n\r\n                                <Flex pr=\"30vw\" w=\"100vw\" color=\"#616161\" bg=\"white\" alignItems=\"center\" height=\"50px\">\r\n                                    <Flex width=\"full\" height=\"full\" overflowX=\"auto\" alignItems=\"center\">\r\n                                        <Toolbar />\r\n                                    </Flex>\r\n\r\n                                    <Flex height=\"full\" position=\"fixed\" bottom=\"0\" right=\"0\" alignItems=\"center\">\r\n                                        <Divider orientation=\"vertical\" />\r\n                                        <IconButton bg=\"white\" borderRadius=\"none\" height=\"full\" onClick={handleHideKeyboard} variant=\"ghost\" colorScheme=\"brand\" icon={<Icon as={MdKeyboardHide} />} />\r\n                                        <Divider orientation=\"vertical\" />\r\n                                        <IconButton variant=\"ghost\" borderRadius=\"none\" height=\"full\" colorScheme=\"brand\" icon={<Icon as={FaChevronUp} />} />\r\n                                    </Flex>\r\n                                </Flex>\r\n\r\n                            </Slide>\r\n                        )}\r\n\r\n                        {!editor.selection && (\r\n                            <Slide direction=\"bottom\" in={!editor.selection} style={{ zIndex: 150 }}>\r\n\r\n                                <Box color=\"white\" display=\"flex\" bg=\"#05043E\" alignItems=\"center\" width=\"100%\" justifyContent=\"space-around\">\r\n                                    <Flex onClick={handlePrint} flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\" cursor=\"pointer\" aria-label=\"button\" py=\"2\" _hover={{ color: \"var(--chakra-colors-brand-300)\" }} >\r\n                                        <Icon w={6} h={6} as={FaPrint} />\r\n                                        <Text fontSize=\"x-small\">Imprimir</Text>\r\n                                    </Flex>\r\n\r\n                                    <Flex flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\" cursor=\"pointer\" aria-label=\"button\" py=\"2\" _hover={{ color: \"var(--chakra-colors-brand-300)\" }} >\r\n                                        <Icon w={6} h={6} as={FaHome} />\r\n                                        <Text fontSize=\"x-small\">Inicio</Text>\r\n                                    </Flex>\r\n\r\n                                    <Flex flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\" cursor=\"pointer\" aria-label=\"button\" py=\"2\" _hover={{ color: \"var(--chakra-colors-brand-300)\" }}>\r\n                                        <Icon w={6} h={6} as={FaChalkboardTeacher} />\r\n                                        <Text fontSize=\"x-small\">Previsualizar</Text>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Slide>\r\n                        )}\r\n                    </Flex>\r\n                )\r\n            }\r\n\r\n\r\n            {/* <pre>\r\n        {worksheet && JSON.stringify(worksheet.content, null, 2)}\r\n    </pre> */}\r\n            <Box display=\"none\" flexDirection=\"column\" alignItems=\"flex-start\" position=\"fixed\" zIndex=\"banner\" bottom=\"0.5\" width=\"full\"\r\n                sx={{\r\n                    \"@media print\": {\r\n                        display: \"flex\",\r\n                    }\r\n                }}\r\n            >\r\n                <Icon as={Logo} />\r\n                <Text fontSize=\"smaller\"> {host}/worksheets/{id}/practice </Text>\r\n            </Box>\r\n        </Slate >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Form\r\n","import { useCallback } from \"react\";\r\nimport { Node, Text } from \"slate\";\r\n\r\nexport default function useSlateDecorate(editor) {\r\n\r\n    return useCallback(([node, path]) => {\r\n        const ranges = [];\r\n\r\n        if (Text.isText(node)) {\r\n            const parent = Node.parent(editor, path);\r\n\r\n            if (parent.type === \"word-order-exercise-paragraph\") {\r\n                const { text } = node\r\n                const parts = text.split(\"/\")\r\n                let offset = 0;\r\n\r\n                parts.forEach((part, index) => {\r\n                    if (index !== 0) {\r\n                        ranges.push({\r\n                            anchor: { path, offset: offset - 1 },\r\n                            focus: { path, offset },\r\n                            division: true,\r\n                        })\r\n                    }\r\n\r\n                    offset = offset + part.length + 1;\r\n                })\r\n            }\r\n        }\r\n        return ranges\r\n    }, [editor])\r\n}","// @refresh reset\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport { Slate, Editable } from \"slate-react\"\r\n\r\nimport { Container, Box, Text } from \"@chakra-ui/react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nimport { getWorksheet } from \"../utils/localStorage\";\r\n\r\nimport useBodyBackground from '../hooks/useBodyBackground';\r\nimport useSlateRender from '../hooks/useSlateRender';\r\nimport useSlateEditor from '../hooks/useSlateEditor';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport { parseWorksheet } from '../utils';\r\n\r\nconst defaultValue = {\r\n    \"title\": \"\",\r\n    \"content\": [\r\n        {\r\n            \"type\": \"paragraph\",\r\n            \"children\": [\r\n                {\r\n                    \"text\": \"\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst Practice = () => {\r\n    //Get the id of the worksheet from the url \r\n    const { id } = useParams();\r\n\r\n    const editor = useSlateEditor();\r\n    // console.log(editor.children);\r\n    const [renderLeaf, renderElement] = useSlateRender();\r\n\r\n    // Keep track of state for the value of the editor.\r\n    const [worksheet, setWorksheet] = useState(defaultValue)\r\n\r\n    function handleChangeProp({ propery, value }) {\r\n        setWorksheet(prevValue => {\r\n            return { ...prevValue, [propery]: value }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        async function getWorksheet() {\r\n            const response = await fetch(`/api/activities/${id}`);\r\n            const json = await response.json();\r\n\r\n            if (response.ok) {\r\n                setWorksheet(\r\n                    parseWorksheet(json)\r\n                )\r\n                // dispatch({ type: ACTIONS.SET_WORKSHEET, payload: { worksheet: parseWorksheet(json) } })\r\n                return;\r\n            }\r\n\r\n            // dispatch({ type: ACTIONS.ERROR, payload: { error: json } });\r\n\r\n        }\r\n        getWorksheet();\r\n    }, [id])\r\n\r\n\r\n    //Set a custom background color\r\n    useBodyBackground(\"var(--chakra-colors-gray-100)\");\r\n    useDocumentTitle(`LangSheets | ${worksheet.title}`);\r\n    return (\r\n\r\n        <Fragment>\r\n            <Navbar />\r\n            <Box >\r\n\r\n                <Text background=\"purple.400\" textAlign=\"center\" color=\"white\" width=\"full\" mt=\"4\" px=\"4\" py=\"6\" fontSize={[\"4xl\", \"4xl\", \"5xl\"]} fontWeight=\"bold\" >{worksheet.title}</Text>\r\n\r\n                < Container maxWidth=\"container.lg\" my=\"4\" >\r\n                    <Slate\r\n                        {...{\r\n                            editor,\r\n                            value: worksheet.content,\r\n                            onChange: (newContent) => handleChangeProp({ propery: \"content\", value: newContent })\r\n                        }}\r\n                    >\r\n                        <Box background=\"white\" px={[\"8\", \"16\"]} py=\"16\" as={Editable} shadow=\"sm\"\r\n                            {...{ renderElement, renderLeaf, readOnly: true }}\r\n                        />\r\n                    </Slate>\r\n                </Container>\r\n            </Box >\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Practice\r\n","import { Flex, Text } from '@chakra-ui/layout'\r\nimport React, { Fragment } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nconst NotFounded = () => {\r\n    useDocumentTitle(\"Página no encontrada\")\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            <Flex alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\" textAlign=\"center\" height=\"100vh\">\r\n\r\n                <Text fontSize=\"6xl\">404</Text>\r\n                <Text fontSize=\"4xl\">Page not founded</Text>\r\n            </Flex>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFounded\r\n","\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\n\nimport Home from \"./pages/Home\";\nimport Form from \"./pages/Form\";\nimport Practice from \"./pages/Practice\";\nimport NotFounded from \"./pages/NotFounded\";\n\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/worksheets/:id/edit\" component={Form} />\n            <Route path=\"/worksheets/:id/practice\" component={Practice} />\n            <Route path=\"*\" component={NotFounded} />\n          </Switch>\n        </Router>\n      </div>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
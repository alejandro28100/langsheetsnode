{"version":3,"sources":["theme/index.js","components/PrivateRoute.js","context/UserContext.js","components/WorksheetCard.js","hooks/useBodyBackground.js","svgs/logo.svg","svgs/missingWord.svg","svgs/wordOrder.svg","components/Navbar.js","hooks/useDocumentTitle.js","utils/index.js","pages/Dashboard.js","components/Form/Navbar.js","components/Form/WorksheetTitle.js","components/Slate/Editable.js","components/LanguagePicker.js","components/PrivateSwitch.js","components/Logo.js","components/Slate/plugins/withTextAlignment.js","components/Slate/plugins/withExerciseBlock.js","components/Slate/plugins/withMissingWordExercise.js","components/Slate/plugins/withWordOrderExercise.js","hooks/useSlateEditor.js","context/socket.js","utils/objects.js","utils/exerciseBlocks.js","components/Slate/Inline/MissingWord/UserLabel.js","components/Slate/Inline/MissingWord/Mark.js","components/Slate/Inline/MissingWord/Input.js","components/Slate/Inline/MissingWord/Editable.js","components/Slate/Inline/Leaf.js","components/Slate/Block/DefaultElement.js","components/Slate/Block/MissingWordExerciseParagraph.js","components/Slate/Block/WordOrderExerciseParagraph.js","components/Slate/Block/Heading.js","utils/slate.js","components/Slate/ToolbarButton.js","components/ScoringSection.js","components/Slate/Block/ExerciseBlock.js","hooks/useSlateRender.js","hooks/useIsFullscreen.js","components/Slate/commands/index.js","components/Form/ActionsMenu.js","components/Form/Toolbar.js","pages/Form.js","hooks/useSlateDecorate.js","pages/Home.js","pages/Practice.js","pages/NotFounded.js","pages/SignUp.js","pages/Login.js","pages/SyncEditor.js","pages/Activities.js","App.js","reportWebVitals.js","index.js"],"names":["theme","extendTheme","colors","brand","50","100","200","300","400","500","600","700","800","900","PrivateRoute","Component","component","redirectTo","rest","isLoading","loggedIn","location","useLocation","token","Cookies","get","render","props","to","state","from","pathname","UserContext","createContext","initialValue","user","undefined","error","loading","reducer","action","type","payload","UserProvider","children","useReducer","dispatch","history","useHistory","email","password","a","fetch","method","headers","body","JSON","stringify","response","json","ok","set","name","lastName","useEffect","getUserInfo","value","logout","remove","push","login","signUp","Provider","useUser","useContext","LANGUAGES","es","en","fr","ru","de","ja","zh","WorksheetCard","lang","title","id","_id","deleteSheet","createdAt","isPublic","useState","isAlertOpen","setIsAlertOpen","onClose","cancelRef","useRef","boxShadow","background","height","borderRadius","width","padding","flexDirection","noOfLines","fontFamily","fontSize","fontWeight","mr","as","SiGoogletranslate","MdPublic","RiGitRepositoryPrivateFill","pr","py","Flex","alignItems","justifyContent","spacing","size","colorScheme","variant","hasArrow","label","href","icon","FaChalkboardTeacher","RiFileEditFill","onClick","e","MdDelete","isOpen","leastDestructiveRef","ref","ml","defaultProps","useBodyBackground","backgroundColor","document","style","propTypes","PropTypes","string","isRequired","_g","_defs","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","titleId","viewBox","fill","xmlns","clipPath","d","_path","_path2","_path3","_path4","ForwardRef","SvgMissingWord","stroke","className","_rect","_rect2","_rect3","SvgWordOrder","x","y","rx","strokeLinecap","strokeLinejoin","Navbar","leftActions","rightActions","sm","withIcon","useMediaQuery","isTabletOrLower","px","shadow","sx","display","w","h","Logo","Button","HiMenuAlt4","zIndex","p","FiLogOut","IconButton","FaUserCircle","useDocumentTitle","isFullscreen","fullscreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","parseWorksheets","worksheets","map","parseWorksheet","worksheet","updatedWorksheet","content","parse","createQueryString","params","join","initialState","console","warn","Dashboard","toast","useToast","newWorksheet","private","published","text","Date","author","updatedWorksheets","filter","description","status","durarion","isClosable","getWorksheets","worksheetsHandler","createSheet","FaSearch","leftIcon","isIndeterminate","message","maxW","my","textAlign","mx","md","lg","gap","placeItems","templateColumns","base","isLoaded","HiDocumentAdd","_focus","outline","mt","flexGrow","arrowSize","placement","referrerPolicy","transition","color","cursor","m","handlePrint","FaPrint","WorksheetTitle","updateWorksheetProp","textRef","current","focus","required","onBlur","property","onChange","newValue","placeholder","CustomEditable","decorate","renderElement","renderLeaf","readOnly","Editable","LanguagePicker","PrivateSwitch","isPrivate","isChecked","BrandLogo","withTextAlignment","editor","normalizeNode","entry","node","path","Editor","isBlock","alignment","Transforms","setNodes","at","withExerciseBlock","Node","has","Path","next","insertNodes","previous","log","withMissingWordExercise","includes","hasMissingWords","descendants","missingWord","isNode","Element","isElement","firstNodePath","first","lastNodePath","last","child","childPath","equals","select","hanging","insertText","offset","withWordOrderExercise","isIntoAnExerciseBlock","ancestors","hasDivisions","split","useSlateEditor","config","useMemo","plugins","withReact","createEditor","withHistory","socket","io","autoConnect","SocketContext","shuffleArray","array","Error","temporaryValue","randomIndex","result","currentIndex","Math","floor","random","getExerciseBlockProps","showAnswers","checkExercise","getDivisions","withIDs","word","nanoid","isCorrect","shuffle","DotAnimation","position","UserLabel","Mark","show","FaCheck","FaTimes","handleIsCorrect","userAnswer","correctAnswer","toLowerCase","trim","MissingWordInput","leaf","focused","useSlate","ReactEditor","findPath","inputValue","handleOnFocus","event","preventDefault","blur","username","auth","userID","handleOnChange","isAnswered","bg","transform","animation","right","onFocus","MissingWordEditable","isPrinting","attributes","borderBottom","Leaf","isReadOnly","useReadOnly","division","bold","italic","underline","strike","DefaultElement","element","MissingWordExerciseParagraph","WordOrderPractice","textContent","userAnswersRef","userAnswers","correctAnswers","flexWrap","border","onDragEnd","destination","items","list","startIndex","endIndex","Array","splice","removed","reorder","index","checkAnswers","droppableId","direction","provided","snapshot","isDraggingOver","innerRef","droppableProps","top","WordComponent","DraggableWordComponent","getBg","isDragging","isDragDisabled","draggableId","userSelect","draggableProps","dragHandleProps","answer","WordOrderExerciseParagraph","Heading","isBlockActive","format","nodes","match","n","isMarkActive","marks","toggleMark","removeMark","addMark","ToolbarButton","customOnClick","formatKey","handleClick","isActive","toggleBlock","ButtonsSection","exerciseBlockPath","ScoringSection","EXERCISES_TYPES","EXERCISES_HELP_TEXT","MissingWordIcon","Tools","exerciseType","Range","isCollapsed","selection","alert","handleCreateMissingWord","borderBottomWidth","opacity","ExerciseBlock","isFocused","useFocused","isSelected","useSelected","isExpanded","fragment","borderBottomRadius","in","animateOpacity","contentEditable","borderTopRadius","IoMdHelpCircleOutline","ExerciseList","useSlateRender","useCallback","useIsFullscreen","setValue","handler","addEventListener","removeEventListener","createExercise","newNode","zoom","setTimeout","window","print","handleOpenFullscreen","screen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","handleCloseFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","ActionsMenu","handlePublishActivity","FaFileUpload","WordOrderIcon","BsFullscreenExit","BsFullscreen","DesktopToolbar","isDesktop","flex","HiViewGridAdd","aria-label","FaHeading","FaBold","FaItalic","FaUnderline","FaStrikethrough","FaAlignLeft","FaAlignCenter","FaAlignRight","FaAlignJustify","ACTIONS","isWritingMode","savingWorksheet","Form","useParams","ranges","Text","isText","parent","parts","forEach","part","anchor","useSlateDecorate","duration","getWorksheet","host","newContent","templateRows","rowSpan","colSpan","gridTemplateRows","gridTemplateColumns","FaArrowLeft","pt","rightIcon","FaCheckCircle","colStart","borderTop","Toolbar","gridColumn","gridRow","flexDir","minH","HiDotsVertical","overflowX","bottom","orientation","deselect","MdKeyboardHide","FaChevronUp","_hover","FaHome","Home","lineHeight","objectFit","src","users","UserNameForm","inputRef","handleSetUserName","localStorage","setItem","onSubmit","TeacherView","maxWidth","StudentView","UsersList","max","Practice","remoteChange","operations","operation","emit","getItem","connect","on","withoutNormalizing","commingUsers","newUser","err","offAny","off","activityID","NotFounded","password2","SignUp","form","setForm","changeFormProp","prop","updatedForm","autoFocus","textDecoration","Login","editorValue","SyncEditor","socketChange","now","toString","senderID","connected","disconnect","LANGS","it","jp","AcitivityCard","useDisclosure","onOpen","handleCloneActivity","overflowY","left","isTruncated","FaLanguage","FaUserAlt","alignSelf","FaClone","mb","Activities","activities","setActivities","setLoading","setError","language","setLanguage","keywords","setKeywords","getActivities","onKeyDown","FaChevronDown","activity","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"+JAmBeA,EAjBDC,YAAY,CACtBC,OAAQ,CACJC,MAAO,CACHC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,c,yDCQFC,EAlBM,SAAC,GAAwE,IAA3DC,EAA0D,EAArEC,UAAsBC,EAA+C,EAA/CA,WAAoCC,GAAW,EAAnCC,UAAmC,EAAxBC,SAAwB,kEACnFC,EAAWC,cACXC,EAAQC,IAAQC,IAAI,SAC1B,OACI,cAAC,IAAD,2BAAWP,GAAX,IACIQ,OAAQ,SAACC,GAAD,OACFJ,EACI,cAACR,EAAD,eAAeY,IACf,cAAC,IAAD,CAAUC,GAAIX,EACZY,MACI,CAAEC,KAAMT,EAASU,iB,gCCVvCC,EAAcC,0BAEdC,EAAe,CACjBC,UAAMC,EACNC,WAAOD,EACPE,SAAS,GAGb,SAASC,EAAQV,EAAOW,GACpB,OAAQA,EAAOC,MACX,IAAK,SACD,OAAO,2BACAZ,GADP,IAEIM,UAAMC,IAEd,IAAK,UACD,OAAO,2BACAP,GADP,IAEIS,SAAS,EACTD,WAAOD,IAEf,IAAK,UACD,IAAQD,EAASK,EAAOE,QAAhBP,KACR,OAAO,2BACAN,GADP,IAEIM,OACAG,SAAS,IAEjB,IAAK,QACD,IAAQD,EAAUG,EAAOE,QAAjBL,MACR,OAAO,2BACAR,GADP,IAEIM,UAAMC,EACNE,SAAS,EACTD,WAOT,IAAMM,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,EAA0BC,qBAAWN,EAASL,GAA9C,mBAAOL,EAAP,KAAciB,EAAd,KACMC,EAAUC,cAF0B,4CA8B1C,WAAqBC,EAAOC,GAA5B,iBAAAC,EAAA,6DACIL,EAAS,CAAEL,KAAM,YADrB,SAG2BW,MAAM,mBAAoB,CAC7CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBR,QACAC,eAVZ,cAGUQ,EAHV,gBAcuBA,EAASC,OAdhC,UAcUA,EAdV,QAgBQD,EAASE,GAhBjB,wBAkBQpC,IAAQqC,IAAI,QAASF,EAAKpC,cAEnBoC,EAAKpC,MACZuB,EAAS,CAAEL,KAAM,UAAWC,QAAS,CAAEP,KAAMwB,KArBrD,kBAsBeA,GAtBf,eAwBIb,EAAS,CAAEL,KAAM,QAASC,QAAS,CAAEL,MAAOsB,KAxBhD,uBAyBWvB,GAzBX,6CA9B0C,kEA0D1C,WAAsB0B,EAAMC,EAAUd,EAAOC,GAA7C,iBAAAC,EAAA,6DACIL,EAAS,CAAEL,KAAM,YADrB,SAG2BW,MAAM,aAAc,CACvCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBK,OACAC,WACAd,QACAC,eAZZ,cAGUQ,EAHV,gBAeuBA,EAASC,OAfhC,UAeUA,EAfV,QAgBQD,EAASE,GAhBjB,wBAiBQd,EAAS,CAAEL,KAAM,UAAWC,QAAS,CAAEP,KAAM,MAjBrD,2BAoBIW,EAAS,CAAEL,KAAM,QAASC,QAAS,CAAEL,MAAOsB,KApBhD,6CA1D0C,sBAG1CK,qBAAU,WAAM,4CACZ,8BAAAb,EAAA,yDACIL,EAAS,CAAEL,KAAM,YACHjB,IAAQC,IAAI,SAF9B,uBAIQqB,EAAS,CAAEL,KAAM,UAAWC,QAAS,CAAEP,UAAMC,KAJrD,mDAQ+BgB,MAAM,uBARrC,cAQcM,EARd,iBAS2BA,EAASC,OATpC,QAScA,EATd,OAUQb,EAAS,CAAEL,KAAM,UAAWC,QAAS,CAAEP,KAAMwB,KAVrD,kDAYQb,EAAS,CAAEL,KAAM,QAASC,QAAS,CAAEL,MAAK,QAZlD,2DADY,uBAAC,WAAD,wBAiBZ4B,KAED,IA2DH,IAAMC,EAAK,aACPC,OA1DJ,WACI3C,IAAQ4C,OAAO,SACftB,EAAS,CAAEL,KAAM,WACjBM,EAAQsB,KAAK,MAwDbC,MAnFsC,8CAoFtCC,OApFsC,mDAqFnC1C,GAGP,OACI,cAACG,EAAYwC,SAAb,CAAsBN,MAAOA,EAA7B,SACKtB,KAKN,SAAS6B,IACZ,OAAOC,qBAAW1C,G,8MClIhB2C,EAAY,CACdC,GAAI,aACJC,GAAI,YACJC,GAAI,aACJC,GAAI,OACJC,GAAI,YACJC,GAAI,aACJC,GAAI,SAGR,SAASC,EAAT,GAAoF,IAA3DC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,MAAYC,EAAwC,EAA7CC,IAAoBC,GAAyB,EAApCC,UAAoC,EAAzBD,aAAaE,EAAY,EAAZA,SACnE,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAU,kBAAMD,GAAe,IAC/BE,EAAYC,mBAClB,OACI,eAAC,WAAD,WAEI,eAAC,IAAD,CAAMC,UAAU,OAAOC,WAAW,QAAQC,OAAO,KAAKC,aAAa,KAAKC,MAAM,OAA9E,UACI,eAAC,IAAD,CAAMC,QAAQ,IAAIC,cAAc,SAAhC,UACI,cAAC,IAAD,CAAMlB,MAAiB,KAAVA,EAAe,gBAAeA,EAAOmB,UAAW,EAAGC,WAAW,aAAaC,SAAS,QAAQC,WAAW,WAApH,SAA0I,KAAVtB,EAAe,gBAAeA,IAC9J,cAAC,IAAD,IAECV,EAAUS,IAAS,eAAC,IAAD,WAChB,cAAC,IAAD,CAAMwB,GAAG,IAAIC,GAAIC,MAChBnC,EAAUS,MAGf,eAAC,IAAD,CAAMoB,UAAW,EAAGnB,MAAK,oBAAeK,EAAW,aAAY,WAA/D,UACI,cAAC,IAAD,CAAMkB,GAAG,IAAIC,GAAInB,EAAWqB,IAAWC,MAD3C,aAEetB,EAAW,aAAY,gBAK1C,cAAC,IAAD,IACA,cAAC,IAAD,CAAMuB,GAAG,IAAIC,GAAG,IAAhB,SACI,eAAC,IAAD,CAAaL,GAAIM,IAAMZ,cAAc,SAASa,WAAW,SAASC,eAAe,eAAeC,QAAQ,IAAIC,KAAK,KAAKC,YAAY,QAAQC,QAAQ,QAAlJ,UAEI,cAAC,IAAD,CAASC,UAAQ,EAACC,MAAM,qBAAxB,SACI,cAAC,IAAD,CAAYd,GAAG,IAAIe,KAAI,sBAAiBtC,EAAjB,aAAgCuC,KAAM,cAAC,IAAD,CAAMhB,GAAIiB,UAG3E,cAAC,IAAD,CAASJ,UAAQ,EAACC,MAAM,mBAAxB,SACI,cAAC,IAAD,CAAYd,GAAG,IAAIe,KAAI,sBAAiBtC,EAAjB,SAA4BuC,KAAM,cAAC,IAAD,CAAMhB,GAAIkB,UAGvE,cAAC,IAAD,CAASL,UAAQ,EAACC,MAAM,qBAAxB,SACI,cAAC,IAAD,CAAYK,QAAS,SAAAC,GAAC,OAAIpC,GAAe,IAAOgC,KAAM,cAAC,IAAD,CAAMhB,GAAIqB,kBAMhF,cAAC,IAAD,CACIC,OAAQvC,EACRwC,oBAAqBrC,EACrBD,QAASA,EAHb,SAKI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAmBY,SAAS,KAAKC,WAAW,OAA5C,gCAIA,cAAC,IAAD,mGAIA,eAAC,IAAD,WACI,cAAC,IAAD,CAAQ0B,IAAKtC,EAAWiC,QAASlC,EAAjC,sBAGA,cAAC,IAAD,CAAQ0B,YAAY,MAAMQ,QAAS,SAAAC,GAAC,OAAIzC,EAAYF,IAAKgD,GAAI,EAA7D,mCAW5BnD,EAAcoD,aAAe,CACzBnD,KAAM,GACNM,UAAU,GAYCP,Q,0BCzGTqD,GAAoB,SAACC,GAGvBzE,qBAAU,WACN0E,SAASnF,KAAKoF,MAAMzC,WAAauC,IAClC,CAACA,KAMRD,GAAkBI,UAAY,CAC1BH,gBAAiBI,KAAUC,OAAOC,YAGvBP,IClBXQ,GAAIC,GDkBOT,M,8BChBf,SAASU,KAA2Q,OAA9PA,GAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,GAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASoB,GAAQC,EAAMC,GACrB,IAAItF,EAAQqF,EAAKrF,MACbuF,EAAUF,EAAKE,QACfjJ,EAAQqI,GAAyBU,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAOxB,GAAS,CACtD7C,MAAO,GACPF,OAAQ,GACR0E,QAAS,YACTC,KAAM,OACNC,MAAO,6BACP1C,IAAKsC,EACL,kBAAmBC,GAClBjJ,GAAQ0D,EAAqB,gBAAoB,QAAS,CAC3DC,GAAIsF,GACHvF,GAAS,KAAM2D,KAAOA,GAAkB,gBAAoB,IAAK,CAClEgC,SAAU,eACI,gBAAoB,OAAQ,CAC1CC,EAAG,qQACHH,KAAM,YACS,gBAAoB,OAAQ,CAC3CG,EAAG,kEACHH,KAAM,YACS,gBAAoB,OAAQ,CAC3CG,EAAG,mFACHH,KAAM,UACS,gBAAoB,OAAQ,CAC3CG,EAAG,gFACHH,KAAM,UACS,gBAAoB,OAAQ,CAC3CG,EAAG,gFACHH,KAAM,UACS,gBAAoB,OAAQ,CAC3CG,EAAG,wOACHH,KAAM,YACS,gBAAoB,OAAQ,CAC3CG,EAAG,kDACHH,KAAM,YACS,gBAAoB,OAAQ,CAC3CG,EAAG,oDACHH,KAAM,UACS,gBAAoB,OAAQ,CAC3CG,EAAG,oDACHH,KAAM,UACS,gBAAoB,OAAQ,CAC3CG,EAAG,oDACHH,KAAM,YACF7B,KAAUA,GAAqB,gBAAoB,OAAQ,KAAmB,gBAAoB,WAAY,CAClH3D,GAAI,SACU,gBAAoB,OAAQ,CAC1Ce,MAAO,GACPF,OAAQ,QACR2E,KAAM,cAIV,IClEII,GAAOC,GAAQC,GAAQC,GDkEvBC,GAA0B,aAAiBb,IAChC,ICjEf,SAAS,KAA2Q,OAA9P,GAAWtB,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxM,CAA8BI,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASkC,GAAeb,EAAMC,GAC5B,IAAItF,EAAQqF,EAAKrF,MACbuF,EAAUF,EAAKE,QACfjJ,EAAQ,GAAyB+I,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDpF,GAAI,SACJ,YAAa,SACbyF,MAAO,6BACPF,QAAS,YACTW,OAAQ,eACRV,KAAM,eACNzC,IAAKsC,EACL,kBAAmBC,GAClBjJ,GAAQ0D,EAAqB,gBAAoB,QAAS,CAC3DC,GAAIsF,GACHvF,GAAS,KAAM6F,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3ED,EAAG,uaACAE,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEM,UAAW,QACXR,EAAG,srBACAG,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEK,UAAW,QACXR,EAAG,ikBACAI,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEJ,EAAG,0NAIP,ICvCIS,GAAOC,GAAQC,GAAQ,GAAO,GDuC9B,GAA0B,aAAiBL,IAChC,ICtCf,SAAS,KAA2Q,OAA9P,GAAWpC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAAS,GAAyBE,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxM,CAA8BI,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,SAASwC,GAAanB,EAAMC,GAC1B,IAAItF,EAAQqF,EAAKrF,MACbuF,EAAUF,EAAKE,QACfjJ,EAAQ,GAAyB+I,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO,GAAS,CACtDrE,MAAO,GACPF,OAAQ,GACR0E,QAAS,YACTC,KAAM,OACNC,MAAO,6BACP1C,IAAKsC,EACL,kBAAmBC,GAClBjJ,GAAQ0D,EAAqB,gBAAoB,QAAS,CAC3DC,GAAIsF,GACHvF,GAAS,KAAMqG,KAAUA,GAAqB,gBAAoB,OAAQ,CAC3EI,EAAG,GACHC,EAAG,EACH1F,MAAO,EACPF,OAAQ,EACR6F,GAAI,GACJlB,KAAM,aACHa,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEG,EAAG,EACHC,EAAG,EACH1F,MAAO,EACPF,OAAQ,EACR6F,GAAI,GACJlB,KAAM,aACHc,KAAWA,GAAsB,gBAAoB,OAAQ,CAChEG,EAAG,EACH1F,MAAO,EACPF,OAAQ,EACR6F,GAAI,GACJlB,KAAM,aACH,KAAU,GAAqB,gBAAoB,OAAQ,CAC9DG,EAAG,oJACHO,OAAQ,UACRS,cAAe,QACfC,eAAgB,WACb,KAAW,GAAsB,gBAAoB,OAAQ,CAChEjB,EAAG,+OACHO,OAAQ,UACRS,cAAe,QACfC,eAAgB,YAIpB,IAAI,GAA0B,aAAiBL,IAChC,ICjDf,SAASM,GAAT,GAA8D,IAA5CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,aAAwBC,GAAM,EAAhBC,SAAgB,EAAND,IACnD,EAA0BE,aAAc,CAAC,sBAAlCC,EAAP,oBACA,EAAkChI,IAA1BN,EAAR,EAAQA,OAAQhC,EAAhB,EAAgBA,KAAMG,EAAtB,EAAsBA,QAEtB,OACI,eAAC,IAAD,CAAMoK,GAAG,KAAKxG,WAAW,QAAQgB,GAAG,IAAIyF,OAAO,KAAKvF,WAAW,SAC3DwF,GAAI,CACA,eAAgB,CACZC,QAAS,SAHrB,UAOI,cAAC,IAAD,CAAQhG,GAAG,IAAIe,KAAK,IAAIH,QAAQ,WAAhC,SACI,cAAC,IAAD,CAAMqF,EAAG,GAAIC,EAAG,GAAIlG,GAAImG,OAIxBP,EAEQ,eAAC,WAAD,WACI,cAAC,IAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAYjF,YAAY,QAAQC,QAAQ,QAAQZ,GAAIoG,IAAQrK,SAAU,cAAC,IAAD,CAAMiE,GAAIqG,QAChF,eAAC,IAAD,CAAUC,OAAO,WAAjB,WAES7K,GACG,eAAC,WAAD,WACI,cAAC,IAAD,CAAM8K,EAAE,IAAI1G,SAAS,UAAUC,WAAW,SAA1C,mBACQxE,EAAK2B,KADb,YACqB3B,EAAK4B,YAE1B,cAAC,IAAD,CAAUiE,QAAS7D,EAAQ0D,KAAM,cAAC,IAAD,CAAMhB,GAAIwG,OAA3C,mCAOTf,GAAM,cAAC,IAAD,IACRA,WAMb,eAAC,WAAD,WACKF,EACD,cAAC,IAAD,IACCC,EAEAlK,GAAQ,cAAC,KAAD,UACL,eAAC,IAAD,WACI,cAAC,IAAD,CAAYsF,QAAQ,QAAQD,YAAY,QAAQX,GAAIyG,IAAYzF,KAAM,cAAC,IAAD,CAAMiF,EAAG,EAAGC,EAAG,EAAGlG,GAAI0G,QAE5F,eAAC,IAAD,WACI,cAAC,KAAD,CAAKH,EAAE,IAAP,SACI,cAAC,IAAD,CAAM1G,SAAS,UAAUC,WAAW,SAApC,mBACQxE,EAAK2B,KADb,YACqB3B,EAAK4B,cAG9B,cAAC,IAAD,CAAUiE,QAAS7D,EAAQ0D,KAAM,cAAC,IAAD,CAAMhB,GAAIwG,OAA3C,4CAkBxClB,GAAO5D,aAAe,CAClBgE,UAAU,GAUCJ,UC/FTqB,GAAmB,SAAAnI,GACrBrB,qBAAU,WACN0E,SAASrD,MAAQA,IAClB,CAACA,KAGRmI,GAAiB5E,UAAY,CACzBvD,MAAOwD,KAAUC,OAAOC,YAGbyE,UCbR,SAASC,KACZ,OACI/E,SAASgF,YACThF,SAASiF,eACTjF,SAASkF,oBACTlF,SAASmF,oBAGV,SAASC,GAAgBC,GAC5B,OAAOA,EAAWC,IAAIC,IASnB,SAASA,GAAeC,GAC3B,IAAMC,EAAgB,eAAQD,GAE9B,OADAC,EAAiBC,QAAU5K,KAAK6K,MAAMH,EAAUE,SACzCD,EAGJ,SAASG,GAAkBC,GAC9B,OAAmC,IAA/BpF,OAAOgB,KAAKoE,GAAQ/E,OAAqB,GACtCL,OAAOgB,KAAKoE,GACdP,KAAI,SAAAtE,GAED,OADc6E,EAAO7E,GAEX,GAAN,OAAUA,EAAV,YAAiB6E,EAAO7E,IAErB,MAEV8E,KAAK,KCQd,IAAMC,GAAe,CACjBpM,WAAOD,EACPE,SAAS,EACTyL,gBAAY3L,GAGhB,SAASG,GAAQV,EAAOW,GACpB,OAAQA,EAAOC,MACX,IAAK,WACD,OAAO,2BACAZ,GADP,IAEIS,SAAS,IAEjB,IAAK,iBACD,OAAO,2BACAT,GADP,IAEIS,SAAS,IAEjB,IAAK,oBACD,OAAO,2BACAT,GADP,IAEIS,SAAS,EACTyL,WAAYvL,EAAOE,QAAQqL,aAGnC,IAAK,YACD,OAAO,2BACAlM,GADP,IAEIS,SAAS,EACTD,MAAOG,EAAOE,QAAQL,QAE9B,QAEI,OADAqM,QAAQC,KAAK,yDAA0DnM,GAChEX,GAInB,IAwKe+M,GAxKG,WACd,IAAM7L,EAAUC,cACV6L,EAAQC,cAEN3M,EAASsC,IAATtC,KACR,EAA0BU,qBAAWN,GAASkM,IAA9C,mBAAO5M,EAAP,KAAciB,EAAd,KACQT,EAA+BR,EAA/BQ,MAAOC,EAAwBT,EAAxBS,QAASyL,EAAelM,EAAfkM,WANJ,4CA4BpB,gCAAA5K,EAAA,6DAEIL,EAAS,CAAEL,KAAM,aAEXsM,EAAe,CACjB1J,MAAO,0BACPD,KAAM,KACN4J,SAAS,EACTC,WAAW,EACXb,QAAS5K,KAAKC,UAAU,CAAC,CACrBhB,KAAM,YACNG,SAAU,CAAC,CAAEsM,KAAM,QAEvBzJ,UAAW,IAAI0J,KACfC,OAAQ,CACJtL,KAAM3B,EAAK2B,KACXC,SAAU5B,EAAK4B,SACfuB,GAAInD,EAAKmD,KAjBrB,SAqB2BlC,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUsL,KA1B7B,cAqBUrL,EArBV,gBA6BuBA,EAASC,OA7BhC,UA6BUA,EA7BV,OA+BIb,EAAS,CAAEL,KAAM,oBAEbiB,EAASE,GAjCjB,wBAoCQb,EAAQsB,KAAR,sBAA4BV,EAAK4B,IAAjC,UApCR,2BAwCIzC,EAAS,CAAEL,KAAM,YAAaC,QAAS,CAAEL,MAAOsB,KAxCpD,6CA5BoB,kEAuEpB,WAAqC2B,GAArC,mBAAAnC,EAAA,6DACIL,EAAS,CAAEL,KAAM,aADrB,SAG2BW,MAAM,mBAAD,OAAoBkC,GAAM,CAClDjC,OAAQ,WAJhB,UAGUK,EAHV,OAOUC,EAAOD,EAASC,QAElBD,EAASE,GATjB,wBAWcyL,EAAoB,YAAItB,GAAYuB,QAAO,SAAApB,GAAS,OAAIA,EAAU3I,MAAQD,KAEhFxC,EAAS,CAAEL,KAAM,oBAAqBC,QAAS,CAAEqL,WAAYsB,KAE7DR,EAAM,CACFxJ,MAAO,sBACPkK,YAAa,6CACbC,OAAQ,OACRC,SAAU,IACVC,YAAY,IApBxB,2BAyBI5M,EAAS,CAAEL,KAAM,YAAaC,QAAS,CAAEL,MAAOsB,KAzBpD,6CAvEoB,sBAQpBK,qBAAU,WAAM,4CAEZ,8BAAAb,EAAA,6DACIL,EAAS,CAAEL,KAAM,aADrB,SAG2BW,MAAM,mBAHjC,cAGUM,EAHV,gBAIuBA,EAASC,OAJhC,UAIUA,EAJV,QAMQD,EAASE,GANjB,wBAOQd,EAAS,CAAEL,KAAM,oBAAqBC,QAAS,CAAEqL,WAAYD,GAAgBnK,MAPrF,2BAUIb,EAAS,CAAEL,KAAM,YAAaC,QAAS,CAAEL,MAAOsB,KAVpD,6CAFY,uBAAC,WAAD,wBAgBZgM,KAED,IAyEH,IAAMC,EAAoB,CACtBC,YApGgB,2CAqGhBrK,YArGgB,6CA0GpB,OAFAgD,GAAkB,iCAClBgF,GAAiB,gCAEb,eAAC,WAAD,WAEI,cAAC,GAAD,CACIlB,GACI,cAAC,IAAD,CAAUzE,KAAM,cAAC,IAAD,CAAMhB,GAAIiJ,MAAclI,KAAK,cAAcf,GAAG,IAA9D,wCAEJwF,aACI,cAAC,IAAD,CAAQ0D,SAAU,cAAC,IAAD,CAAMlJ,GAAIiJ,MAAcvI,KAAK,KAAKX,GAAG,IAAIC,GAAG,IAAIe,KAAK,cAAcH,QAAQ,UAAUD,YAAY,QAAnH,0CAGPlF,GACG,cAAC,IAAD,CAAUiF,KAAK,KAAKyI,iBAAe,EAC/BpD,GAAI,CACA,UAAW,CACP1G,WAAY,qCAK3B7D,GACG,eAAC,IAAD,CAAOmN,OAAO,QAAd,UACI,cAAC,IAAD,IACA,cAAC,IAAD,UAAmBnN,EAAM4N,aAIjC,eAAC,IAAD,CAAWC,KAAK,eAAhB,UACI,cAAC,IAAD,CAAMxJ,SAAS,WAAWC,WAAW,WAAWwJ,GAAG,IAAIC,UAAW,CAAC,SAAU,QAA7E,8BAGA,eAAC,IAAD,CACIC,GAAI,CAAEC,GAAI,IAAKC,GAAI,KACnBC,IAAI,IACJnJ,eAAe,SACfoJ,WAAW,SACXC,gBAAiB,CACbC,KAAM,GACNL,GAAI,oCACJC,GAAI,qCARZ,YAWOxC,GAAcA,EAAWC,KAAI,SAAAE,GAAS,OACrC,cAAC,IAAD,CAAU7H,MAAM,OAA2BuK,UAAWtO,EAAtD,SACI,cAAC,EAAD,0CACa4L,GAAc0B,MAFH1B,EAAU3I,QAO1C,cAAC,IAAD,CAAMc,MAAM,OAAOQ,GAAIoG,IAAQzF,YAAY,QAAQC,QAAQ,QAAQvB,WAAW,QAAQ8B,QAAS4H,EAAkBC,YAAaE,SAAU,cAAC,IAAD,CAAMlJ,GAAIgK,MAAmBtJ,KAAK,KAAKtB,UAAU,OAAOE,OAAO,KAAKC,aAAa,KAAzN,6C,SCxKL+F,GA3DA,SAACxK,GACZ,OACI,cAAC,WAAD,UACI,eAAC,IAAD,CAAM4E,cAAc,SAASa,WAAW,SAAxC,UAEI,cAAC,KAAD,CAAKsF,GAAG,IAAIjF,QAAQ,WAAWqJ,OAAQ,CAAEC,QAAS,QAAUlK,GAAG,IAAIe,KAAK,IAAxE,SACI,cAAC,GAAD,CAAMvB,MAAM,WAGhB,eAAC,IAAD,CAAM2K,GAAG,KAAKzK,cAAc,SAAS0K,SAAS,IAAI5K,MAAM,OAAxD,UAEI,cAAC,IAAD,CAASqB,UAAQ,EAACwJ,UAAU,IAAIC,UAAU,aAAaxJ,MAAM,0BAA7D,SACI,cAAC,KAAD,CACId,GAAG,IAAIwC,OAAO,SAAS+H,eAAe,cAAcxJ,KAAI,sBAAiBjG,EAAM2D,GAAvB,aACxDsH,GAAI,CACA,IAAK,CACDyE,WAAY,iBACZC,MAAO,QACPC,OAAQ,UACRnB,UAAW,SACXhK,aAAc,QAElB,oBAAqB,CACjBF,WAAY,YAXxB,SAeI,cAAC,IAAD,CAAMsL,EAAE,IAAI1E,EAAG,EAAGC,EAAG,EAAGlG,GAAIiB,UAIpC,cAAC,IAAD,CAASJ,UAAQ,EAACwJ,UAAU,IAAIC,UAAU,aAAaxJ,MAAM,qBAA7D,SACI,cAAC,KAAD,CACIK,QAASrG,EAAM8P,YACf7E,GAAI,CACA,IAAK,CACDyE,WAAY,iBACZC,MAAO,QACPC,OAAQ,UACRnB,UAAW,SACXhK,aAAc,QAElB,oBAAqB,CACjBF,WAAY,YAXxB,SAeI,cAAC,IAAD,CAAMsL,EAAE,IAAI1E,EAAG,EAAGC,EAAG,EAAGlG,GAAI6K,mB,UChBzCC,OAjCf,YAAmE,IAAzCtM,EAAwC,EAAxCA,MAAOuM,EAAiC,EAAjCA,oBAAqB9O,EAAY,EAAZA,SAC5C+O,EAAU7L,mBAChB,OACI,cAAC,KAAD,CACIgC,QAAS,kBAAM6J,EAAQC,QAAQC,SAC/BnF,GAAI,CACA,eAAgB,CACZwD,UAAW,WAJvB,SAQI,eAAC,KAAD,CACI1J,SAAS,UACTsL,UAAQ,EACR1M,GAAG,QACHpB,MAAOmB,EACP4M,OAAQ,kBAAML,EAAoB,CAAEM,SAAU,WAC9CC,SAAU,SAAAC,GAAQ,OAAItP,EAAS,CAAEL,KAAM,wBAAyBC,QAAS,CAAEwP,SAAU,QAAShO,MAAOkO,MACrG3P,KAAK,OACL4P,YAAY,kCARhB,UAUI,cAAC,KAAD,CAAiBhK,IAAKwJ,IACtB,cAAC,KAAD,U,kDCTDS,GAfQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAeC,EAA5B,EAA4BA,WAAYC,EAAxC,EAAwCA,SAAUL,EAAlD,EAAkDA,YAAlD,OACnB,cAAC,KAAD,CACInM,WAAW,QACXkH,EAAE,IACFvG,GAAI8L,KAEAJ,WACAC,gBACAC,aACAC,WACAL,iB,UCVNO,GAAiB,SAAC,GAA6C,IAA3ChB,EAA0C,EAA1CA,oBAAqB9O,EAAqB,EAArBA,SAAUsC,EAAW,EAAXA,KACrD,OACI,eAAC,KAAD,CAAK+K,GAAG,IAAR,UACI,cAAC,IAAD,CAAMA,GAAG,IAAT,oBACA,eAAC,KAAD,CACIjK,WAAW,QACX8L,UAAQ,EACR9N,MAAOkB,EACP6M,OAAQ,kBAAML,EAAoB,CAAEM,SAAU,UAC9CC,SAAU,SAAAlK,GAAC,OAAInF,EAAS,CAAEL,KAAM,wBAAyBC,QAAS,CAAEwP,SAAU,OAAQhO,MAAO+D,EAAEoB,OAAOnF,UAL1G,UAOI,wBAAQA,MAAM,KACd,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,kBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,+BAMhB0O,GAAerK,aAAe,CAC1BnD,KAAM,IASKwN,UCjCTC,GAAgB,SAAC,GAAkD,IAAhD/P,EAA+C,EAA/CA,SAAU8O,EAAqC,EAArCA,oBAAqBkB,EAAgB,EAAhBA,UACpD,OACI,cAAC,KAAD,CAAK3C,GAAG,IAAR,SACI,cAAC,IAAD,CAASxI,MAAM,sIAAf,SACI,eAAC,IAAD,CAAMwI,GAAG,IAAT,+BAAgC,cAAC,KAAD,CAAQ3I,YAAY,QAAQc,GAAG,IAAI2J,OAAQ,kBAAML,EAAoB,CAAEM,SAAU,aAAcC,SAAU,SAAClK,GAAD,OAAOnF,EAAS,CAAEL,KAAM,wBAAyBC,QAAS,CAAEwP,SAAU,UAAWhO,OAAQ4O,MAAgBC,UAAWD,IAA7P,YAMhBD,GAActK,aAAe,CACzBuK,WAAW,GASAD,UCXA7F,GAVF,WACT,OACI,eAAC,IAAD,CAAMnG,GAAG,IAAIe,KAAK,IAAIR,WAAW,SAAjC,UACI,cAAC,IAAD,CAAM0F,EAAG,GAAIC,EAAG,GAAIlG,GAAImM,KACxB,cAAC,IAAD,CAAMtM,SAAS,UAAUC,WAAW,OAAO2K,MAAM,YAAjD,4B,2BCUG2B,GAhBW,SAACC,GAC1B,IAAQC,EAAkBD,EAAlBC,cAaR,OAXAD,EAAOC,cAAgB,SAACC,GACvB,kBAAqBA,EAArB,GAAOC,EAAP,KAAaC,EAAb,MAEIC,KAAOC,QAAQH,IAAUA,EAAKI,UAMlCN,EAAcC,GALbM,KAAWC,SAAST,EAAQ,CAAE9C,UAAW,QAAU,CAAEwD,GAAIN,KAOpDJ,GCWOW,GAzBW,SAACX,GACvB,IAAQC,EAAkBD,EAAlBC,cAoBR,OAlBAD,EAAOC,cAAgB,SAAAC,GACnB,kBAAqBA,EAArB,GAAOC,EAAP,KAAaC,EAAb,KACA,GAAkB,mBAAdD,EAAK5Q,KAA2B,CAGhC,IAAKqR,KAAKC,IAAIb,EAAQc,KAAKC,KAAKX,IAC5B,OAAOI,KAAWQ,YAAYhB,EAAQ,CAAEzQ,KAAM,YAAaG,SAAU,CAAC,CAAEsM,KAAM,MAAS,CAAE0E,GAAII,KAAKC,KAAKX,KAI3G,IAAKQ,KAAKC,IAAIb,EAAQc,KAAKG,SAASb,IAEhC,OADA5E,QAAQ0F,IAAI,sBACLV,KAAWQ,YAAYhB,EAAQ,CAAEzQ,KAAM,YAAaG,SAAU,CAAC,CAAEsM,KAAM,MAAS,CAAE0E,GAAII,KAAKG,SAASb,KAInHH,EAAcC,IAEXF,G,SC2DImB,GAhFiB,SAACnB,GAE7B,IAAQC,EAAkBD,EAAlBC,cA2ER,OAzEAD,EAAOC,cAAgB,SAAAC,GACnB,kBAAqBA,EAArB,GAAOC,EAAP,KAAaC,EAAb,KAGA,GAAIC,KAAOC,QAAQN,EAAQG,IAAS,CAAC,YAAa,+BAA+BiB,SAASjB,EAAK5Q,MAAO,CAElG,IAFkG,EAE9F8R,GAAkB,EAF4E,eAK5ET,KAAKU,YAAYnB,IAL2D,IAKlG,2BAA8C,2BAChCoB,cACNF,GAAkB,IAPwE,8BAclG,GAAIA,GACA,GAAkB,gCAAdlB,EAAK5Q,KACL,OAAOiR,KAAWC,SAAST,EAAQ,CAAEzQ,KAAM,+BAAiC,CAAEmR,GAAIN,SAGtF,GAAkB,gCAAdD,EAAK5Q,KACL,OAAOiR,KAAWC,SAAST,EAAQ,CAAEzQ,KAAM,aAAe,CAAEmR,GAAIN,IAM5E,GAAIQ,KAAKY,OAAOrB,IAASsB,KAAQC,UAAUvB,GAAO,CAC9C,IAD8C,EACxCwB,EAAgBf,KAAKgB,MAAM5B,EAAQI,GAAM,GACzCyB,EAAejB,KAAKkB,KAAK9B,EAAQI,GAAM,GAFC,eAIbQ,KAAKlR,SAASsQ,EAAQI,IAJT,IAI9C,2BAA8D,CAAC,IAAD,yBAAlD2B,EAAkD,KAA3CC,EAA2C,KAE1D,IAA0B,IAAtBD,EAAMR,YAAsB,CAG5B,GAAIT,KAAKmB,OAAOD,EAAWH,GACvB,OAAOrB,KAAWQ,YAAYhB,EAAQ,CAAEhE,KAAM,KAAO,CACjD0E,GAAII,KAAKC,KAAKiB,GACdE,QAAQ,EACRC,SAAS,IAKjB,GAAIrB,KAAKmB,OAAOD,EAAWL,GACvB,OAAOnB,KAAWQ,YAAYhB,EAAQ,CAAEhE,KAAM,KAC1C,CACI0E,GAAIsB,EACJE,QAAQ,EACRC,SAAS,IAMrB,GAAIvB,KAAKC,IAAIb,EAAQc,KAAKC,KAAKiB,IAE3B,GAAgB,MADDpB,KAAKrS,IAAIyR,EAAQc,KAAKC,KAAKiB,IAApChG,KACG,GACL,OAAOwE,KAAW4B,WAAWpC,EAAQ,IAAK,CACtCU,GAAI,CAAEN,KAAMU,KAAKC,KAAKiB,GAAYK,OAAQ,OAjChB,+BAyClDpC,EAAcC,IAEXF,GC9BIsC,GA/Ce,SAACtC,GAE3B,IAAQC,EAAkBD,EAAlBC,cA0CR,OAxCAD,EAAOC,cAAgB,SAAAC,GACnB,IAD4B,EAC5B,cAAqBA,EAArB,GAAOC,EAAP,KAAaC,EAAb,KAEImC,GAAwB,EAHA,eAKE3B,KAAK4B,UAAUxC,EAAQI,IALzB,IAK5B,2BAA4D,CAC7B,mBAD6B,0BACtC7Q,OACdgT,GAAwB,IAPJ,8BAY5B,GAAIlC,KAAOC,QAAQN,EAAQG,IAAS,CAAC,YAAa,iCAAiCiB,SAASjB,EAAK5Q,OAASgT,EAAuB,CAE7H,IAAIE,GAAe,EAYnB,GAVmB7B,KAAKhL,OAAOuK,GACFuC,MAAM,KAErBpM,OAAS,IACnBmM,GAAe,GAMfA,GACA,GAAkB,kCAAdtC,EAAK5Q,KACL,OAAOiR,KAAWC,SAAST,EAAQ,CAAEzQ,KAAM,iCAAmC,CAAEmR,GAAIN,SAGxF,GAAkB,kCAAdD,EAAK5Q,KACL,OAAOiR,KAAWC,SAAST,EAAQ,CAAEzQ,KAAM,aAAe,CAAEmR,GAAIN,IAM5EH,EAAcC,IAEXF,GCpBI2C,OAlBf,SAAwBC,GAepB,OAdeC,mBAAQ,kBAAO,OAACD,QAAD,IAACA,OAAD,EAACA,EAAQE,SAYjCC,aAAUC,gBAXVjD,GACEuC,GACI3B,GACIQ,GACI8B,aACIF,aAAUC,uBAO5B,K,UCnBGE,GAASC,cAAG,CAAEC,aAAa,IAG3BC,GAAgBtU,wBAAcmU,I,UCNpC,SAASI,GAAaC,GACzB,IAAKA,EAAMjN,SAAWiN,EAAO,MAAM,IAAIC,MAAM,sCAAuClT,KAAKC,UAAUgT,IAMnG,IAJA,IACkCE,EAAgBC,EAD9CC,EAAM,YAAOJ,GACbK,EAAeD,EAAOrN,OAGnB,IAAMsN,GAGTF,EAAcG,KAAKC,MAAMD,KAAKE,SAAWH,GAIzCH,EAAiBE,EAHjBC,GAAgB,GAIhBD,EAAOC,GAAgBD,EAAOD,GAC9BC,EAAOD,GAAeD,EAG1B,OAAIF,EAAM,KAAOI,EAAO,GACbL,GAAaK,GAGjBA,EClBJ,SAASK,GAAsBhE,EAAQI,GAC1C,IAAKJ,IAAWI,EAAM,MAAM,IAAIoD,MAAM,sCACtC,IAAIS,EACAC,EAH4C,iBAI3BtD,KAAK4B,UAAUxC,EAAQI,IAJI,IAIhD,2BAAmD,CAAC,IAAxCD,EAAuC,0BAC7B,mBAAdA,EAAK5Q,OACL0U,EAAc9D,EAAK8D,YACnBC,EAAgB/D,EAAK+D,gBAPmB,8BAWhD,MAAO,CACHD,cACAC,iBAQD,SAASC,GAAavO,EAAQgN,GACjC,IAEIwB,EAFQxO,EAAO8M,MAAM,KAEL5H,KAAI,SAAAuJ,GAAI,MAAK,CAAEA,OAAMjS,GAAIkS,eAAUC,WAAW,MAElE,OAAO3B,EAAO4B,QAAUlB,GAAac,GAAWA,E,wBChB9CK,GAAe,SAAAhW,GAAK,OACtB,eAAC,IAAD,CAAMkF,GAAG,OAAOvB,GAAG,OAAOsS,SAAS,WAAnC,UACI,cAAC,IAAD,CAAM/Q,GAAG,OAAO4E,UAAU,QAC1B,cAAC,IAAD,CAAM5E,GAAG,OAAO4E,UAAU,QAC1B,cAAC,IAAD,CAAM5E,GAAG,OAAO4E,UAAU,YAInBoM,GApBG,SAAAlW,GACd,OACI,eAAC,IAAD,CAAMkF,GAAG,OAAT,UACKlF,EAAMsO,QADX,IACoB,cAAC,GAAD,Q,UCOb6H,GATF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMtV,EAAW,EAAXA,KAClB,OAAKsV,EAEW,YAATtV,EACD,cAAC,KAAD,CAAmBoE,GAAG,OAAOjE,SAAU,cAAC,IAAD,CAAMiE,GAAImR,IAAS1G,MAAM,gBAChE,cAAC,KAAD,CAAmBzK,GAAG,OAAOjE,SAAU,cAAC,IAAD,CAAMiE,GAAIoR,IAAS3G,MAAM,cAJpD,MCUtB,SAAS4G,GAAgBC,EAAYC,GAEjC,OAAOD,EAAWE,cAAcC,SAAWF,EAAcC,cAAcC,OAG3E,IAoEeC,GApEU,SAAC5W,GAEtB,IAAMyU,EAAS1R,qBAAW6R,IAC1B,EAAyF5U,EAAM6W,KAAjFJ,EAAd,EAAQlJ,KAAR,IAA6BiJ,kBAA7B,MAA0C,GAA1C,MAA8CV,iBAA9C,aAAiEgB,eAAjE,WAA2ErW,EAA3E,EACM8Q,EAASwF,eACTpF,EAAOqF,KAAYC,SAAS1F,EAAQvR,EAAMuN,MAChD,EAAuCgI,GAAsBhE,EAAQI,GAA7D6D,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,cAEfyB,EAAa1B,EAAciB,EAAgBD,EAEjD,SAASW,EAAcC,GACnB,GAAIN,EAGA,OAFAM,EAAMC,sBACND,EAAM1P,OAAO4P,OAGjBvF,KAAWC,SAAST,EAAQ,CACxBuF,QAAS,CACLS,SAAU9C,EAAO+C,KAAKD,SACtBE,OAAQhD,EAAO9Q,KAEpB,CACCsO,GAAIN,IAGZ,SAAS+F,EAAepR,GACpB,IAAM/D,EAAQ+D,EAAEoB,OAAOnF,MAEvBwP,KAAWC,SAAST,EAAQ,CACxBoG,WAAYpV,EAAMoU,OAAO9O,OAAS,EAClCiO,UAAWS,GAAgBhU,EAAOkU,GAClCD,WAAYjU,GACb,CACC0P,GAAIN,IAcZ,OAEI,eAAC,KAAD,CAAYxG,EAAE,KAAKjG,GAAG,OAAOgG,QAAQ,eAAe+K,SAAS,WAA7D,UACKa,GAAWrC,EAAO9Q,KAAOmT,EAAQW,OAE1B,eAAC,WAAD,WACI,cAAC,IAAD,CAAMvS,GAAG,OAAOiG,EAAE,IAAIC,EAAE,IAAIwM,GAAG,YAAY3B,SAAS,WAAW4B,UAAU,mCAAmCC,UAAU,oBAAoBxT,UAAU,kBAAkByT,MAAM,IAAItT,aAAa,MAAM+G,OAAO,YAC1M,cAAC,IAAD,CAASxF,MAAO,cAAC,GAAD,CAAWsI,QAAO,UAAKwI,EAAQS,SAAb,uBAAlC,SACI,cAAC,KAAD,CAAO3H,OAAO,cAAc9J,QAAQ,SAAS4J,WAAW,iBAAiBqB,SAAU0E,EAAelT,MAAO2U,EAAYc,QAASb,EAAe3G,SAAUkH,SAK/J,cAAC,KAAD,CAAO5R,QAAQ,SAASiL,SAAU0E,EAAelT,MAAO2U,EAAYc,QAASb,EAAe7G,OAvB5G,WACQwG,GACA/E,KAAWC,SAAST,EAAQ,CACxBuF,aAASrW,GACV,CACCwR,GAAIN,KAkBkHnB,SAAUkH,IAEpI,cAAC,GAAD,CAAY5W,KAAMgV,EAAY,UAAY,QAASM,MAAMZ,GAAsBC,QC/C5EwC,GA/Ba,SAAAjY,GAExB,MAAqB6K,aAAc,CAAC,UAA7BqN,EAAP,oBAKMjX,EAAWiX,EACXlY,EAAM6W,KAAKtJ,KAAOvN,EAAM6W,KAAKtJ,KAC7BvN,EAAMiB,SAEZ,OACI,cAAC,KAAD,yBAAKiE,GAAG,OACJyK,MAAOuI,EAAa,cAAgB,GACpCzT,aAAa,KACbsG,GAAG,IACHxG,WAAW,aACPvE,EAAMmY,YALd,IAMIlN,GAAI,CACA,eAAgB,CACZ1G,WAAY,OACZ6T,aAAc,kBACdzI,MAAO,gBAVnB,SAcK1O,MCcEoX,GAtCF,SAACrY,GACV,IAAM6W,EAA+B7W,EAA/B6W,KAAM5V,EAAyBjB,EAAzBiB,SAAUkX,EAAenY,EAAfmY,WAChBG,EAAaC,eAGnB,OAF2C,IAArB1B,EAAK/D,YAInBwF,EACO,cAAC,GAAD,eAAsBtY,IAE1B,cAAC,GAAD,eAAyBA,KAGhC6W,EAAK2B,WACLvX,EAAW,cAAC,IAAD,CAAMiE,GAAG,OAAOF,WAAW,QAAQ2K,MAAM,YAAzC,SAAsD1O,KAGjE4V,EAAK4B,OACLxX,EAAW,iCAASA,KAEpB4V,EAAK6B,SACLzX,EAAW,6BAAKA,KAGhB4V,EAAK8B,YACL1X,EAAW,4BAAIA,KAGf4V,EAAK+B,SACL3X,EAAW,4BAAIA,KAKf,gDAAUkX,GAAV,aAAuBlX,OC3BhB4X,GAXQ,SAAC7Y,GACpB,IAAQiB,EAAkCjB,EAAlCiB,SAAU6X,EAAwB9Y,EAAxB8Y,QAASX,EAAenY,EAAfmY,WACnB1J,EAAcqK,EAAdrK,UACR,OACI,cAAC,IAAD,yBAAMA,UAAWA,GAAe0J,GAAhC,aACKlX,MCEE8X,GAPsB,SAAC/Y,GAClC,IAAQmY,EAAyBnY,EAAzBmY,WAAYlX,EAAajB,EAAbiB,SACpB,OACI,+CAASkX,GAAT,aAAsBlX,M,UCgBxB+X,GAAoB,SAAAhZ,GAEtB,IAAMyU,EAAS1R,qBAAW6R,IAEpBrD,EAASwF,eACfhK,QAAQ0F,IAAIzS,GACZ,IAAQ8Y,EAAY9Y,EAAZ8Y,QACR,EAAgCA,EAAxBhC,eAAR,WAAkBrW,EAAlB,EAEMkR,EAAOqF,KAAYC,SAAS1F,EAAQuH,GAE1C,EAAuCvD,GAAsBhE,EAAQI,GAA7D6D,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,cAEfwD,EAAc9G,KAAKhL,OAAO2R,GAE1BI,EAAiB7U,iBAAOqR,GAAauD,EAAa,CAAElD,SAAS,KACnE,EAAiD+C,EAAzCK,mBAAR,MAAsBD,EAAe/I,QAArC,EAEMiJ,EAAiB1D,GAAauD,EAAa,CAAElD,SAAS,IAuB5D,OAAIP,EAEI,cAAC,IAAD,CAAM6D,SAAS,OAAO5T,WAAW,SAAS+I,GAAG,IAAI/C,EAAE,IAAIhH,aAAa,OAAO6U,OAAO,2CAAlF,SAEQF,EAAe/M,KAAI,SAACuJ,GAAD,OACf,cAAC,GAAD,0CAAsCA,GAAtC,IAA4CE,WAAW,KAAnCF,EAAKjS,SAQzC,cAAC,KAAD,CAAiB4V,UAlCrB,SAAyBrE,GAQrB,GANI4B,GACA/E,KAAWC,SAAST,EAAQ,CAAEuF,aAASrW,GAAa,CAAEwR,GAAIN,IAKzDuD,EAAOsE,YAAZ,CAIA,IAAMC,EAiKd,SAAiBC,EAAMC,EAAYC,GAC/B,IAAM1E,EAAS2E,MAAM1Z,KAAKuZ,GAC1B,EAAkBxE,EAAO4E,OAAOH,EAAY,GAArCI,EAAP,oBAGA,OAFA7E,EAAO4E,OAAOF,EAAU,EAAGG,GAEpB7E,EAtKW8E,CACVb,EACAjE,EAAOpN,OAAOmS,MACd/E,EAAOsE,YAAYS,OAGvBlI,KAAWC,SAAST,EAAQ,CAAE4H,YAAae,GAAaT,EAAOL,IAAmB,CAAEnH,GAAIN,MAgBxF,SACI,cAAC,KAAD,CAAWwI,YAAY,YAAYC,UAAU,aAA7C,SACK,SAACC,EAAUC,GAWR,OAVIA,EAASC,iBAAmBzD,GAC5B/E,KAAWC,SAAST,EAAQ,CACxBuF,QAAS,CACLS,SAAU9C,EAAO+C,KAAKD,SACtBE,OAAQhD,EAAO9Q,KAEpB,CACCsO,GAAIN,IAIRmF,GAAWA,EAAQW,SAAWhD,EAAO9Q,GACjC,cAAC,IAAD,CAASqC,MAAO,cAAC,GAAD,CAAWsI,QAAO,UAAKwI,EAAQS,SAAb,sCAAlC,SACI,eAAC,IAAD,yBAAMtB,SAAS,WAAWoD,SAAS,OAAO5T,WAAW,SAASgG,EAAE,IAAI+C,GAAG,IAAI/J,aAAa,OAAO6U,OAAO,2CAClG5S,IAAK2T,EAASG,UACVH,EAASI,gBAFjB,IAGI3Q,UAAS,UAAKwQ,EAASC,gBAAkB,gBAH7C,UAKI,cAAC,IAAD,CAAMrV,GAAG,OAAOiG,EAAE,IAAIC,EAAE,IAAIwM,GAAG,YAAY3B,SAAS,WAAW4B,UAAU,mCAAmCC,UAAU,oBAAoBxT,UAAU,kBAAkBoW,IAAI,IAAI3C,MAAM,IAAItT,aAAa,MAAM+G,OAAO,YACjN2N,EAAY9M,KAAI,SAACuJ,EAAMqE,GAAP,OACb,cAAC,GAAD,0CAA+CrE,GAA/C,IAAqDqE,QAAOnD,UAASrB,mBAAxCG,EAAKjS,OAErC0W,EAAS3J,kBAIlB,eAAC,IAAD,yBAAMuF,SAAS,WAAWoD,SAAS,OAAO5T,WAAW,SAAS+I,GAAG,IAAI/C,EAAE,IAAIhH,aAAa,OAAO6U,OAAO,2CAClG5S,IAAK2T,EAASG,UACVH,EAASI,gBAFjB,IAGI3Q,UAAS,UAAKwQ,EAASC,gBAAkB,gBAH7C,UAKKpB,EAAY9M,KAAI,SAACuJ,EAAMqE,GAAP,OACb,cAAC,GAAD,0CAA+CrE,GAA/C,IAAqDqE,QAAOxE,mBAA/BG,EAAKjS,OAErC0W,EAAS3J,sBAUpCiK,GAAgB,SAAC3a,GACnB,OACI,cAAC,IAAD,CACI6P,EAAE,IAAI9E,GAAG,IACTxF,GAAG,IACHqS,GAAI5X,EAAM8V,UAAY,YAAc,aACpCnG,MAAO3P,EAAM8V,UAAY,QAAU,QACnCrR,aAAa,OACbS,GAAG,OACHF,WAAW,SACX0K,WAAW,eACXE,OAAO,UATX,SAWK5P,EAAM4V,QAKbgF,GAAyB,SAAC,GAA4D,IAA1DjX,EAAyD,EAAzDA,GAAIiS,EAAqD,EAArDA,KAAMqE,EAA+C,EAA/CA,MAAOxE,EAAwC,EAAxCA,cAAeqB,EAAyB,EAAzBA,QAAShB,EAAgB,EAAhBA,UAEvE,SAAS+E,EAAMP,GAEX,OAAIA,EAASQ,WACF,YAGPrF,EACIK,EACO,YAEJ,aAGJ,YAUX,OACI,cAAC,KAAD,CAAWiF,iBAAkBjE,EAAkBkE,YAAarX,EAAIsW,MAAOA,EAAvE,SACK,SAACI,EAAUC,GAAX,OACG,cAAC,IAAD,qCACIW,WAAW,OACXpL,EAAE,IACF9E,GAAG,IACHxF,GAAG,IACHd,aAAa,OACbS,GAAG,OACH0K,OAAUkH,EAAU,cAAgB,OACpC9R,WAAW,SACX2K,MAlBR8F,IAAkBK,EACX,QAEJ,QAgBKpG,WAAW,eACXkI,GAAIiD,EAAMP,GACVtT,MAAOqT,EAASa,eAAelU,MAC/BN,IAAK2T,EAASG,UACVH,EAASa,gBACTb,EAASc,iBAfjB,aAiBKvF,OAnB8BjS,IA0B7CqN,GAAW,SAAChR,GACd,IAAQmY,EAAyBnY,EAAzBmY,WAAYlX,EAAajB,EAAbiB,SACpB,OACI,+CAASkX,GAAT,aACKlX,MAKb,SAASiZ,GAAaf,EAAaC,GAE/B,OAAOD,EAAY9M,KAAI,SAAC+O,EAAQnB,GAC5B,OAAO,2BACAmB,GADP,IAEItF,UAAWsF,EAAOxF,OAASwD,EAAea,GAAOrE,UAmB9CyF,OArNoB,SAACrb,GAGhC,OAFmBuY,eAGR,cAAC,GAAD,eAAuBvY,IAE3B,cAAC,GAAD,eAAcA,KCPVsb,OARf,YAAqD,IAAlCxC,EAAiC,EAAjCA,QAAS7X,EAAwB,EAAxBA,SAAUkX,EAAc,EAAdA,WAC1B1J,EAAcqK,EAAdrK,UACF1J,EAAW+T,EAAQhY,KAAKmT,MAAM,KAAK,GACzC,OACI,cAAC,IAAD,yBAAMxF,UAAWA,EAAW1J,SAAUA,GAAcoT,GAApD,aAAiElX,M,mBCLzE,SAASsa,GAAcxT,EAAKyT,EAAQjK,GAChC,IAAKA,EAAQ,OAAO,EAEpB,MAAgBK,KAAO6J,MAAMlK,EAAQ,CACjCmK,MAAO,SAAAC,GAAC,OAAIA,EAAE5T,KAASyT,KAE3B,QAHA,oBAeJ,SAASI,GAAaJ,EAAQjK,GAC1B,IAAKA,EAAQ,OAAO,EAEpB,IAAMsK,EAAQjK,KAAOiK,MAAMtK,GAC3B,QAAKsK,IACoB,IAAlBA,EAAML,GAGjB,SAASM,GAAWN,EAAQjK,GACxB,GAAKA,EAGL,OAFiBqK,GAAaJ,EAAQjK,GAG3BK,KAAOmK,WAAWxK,EAAQiK,GAG9B5J,KAAOoK,QAAQzK,EAAQiK,GAAQ,GC1B1C,IAAMS,GAAgB,SAAC,GAA+E,IAA7ET,EAA4E,EAA5EA,OAAQxV,EAAoE,EAApEA,MAAOlF,EAA6D,EAA7DA,KAAMob,EAAuD,EAAvDA,cAAepW,EAAwC,EAAxCA,QAASI,EAA+B,EAA/BA,KAAMiW,EAAyB,EAAzBA,UAAc5c,EAAW,sFAE3FgS,EAASwF,eAEf,SAASqF,IACL,MAA6B,oBAAlBF,EAEAA,EAAchU,OAEZ,SAATpH,EACOgb,GAAWN,EAAQjK,GDTtC,SAAqBxJ,EAAKyT,EAAQjK,GAC9B,IAAM8K,EAAWd,GAAcxT,EAAKyT,EAAQjK,GAC5CQ,KAAWC,SACPT,EADJ,gBAEOxJ,EAAMsU,EAAW,KAAOb,GAC3B,CAAEE,MAAO,SAAAC,GAAC,OAAI/J,KAAOC,QAAQN,EAAQoK,MCM9BW,CAAYH,EAAWX,EAAQjK,GAG1C,SAAS8K,IACL,MAAa,SAATvb,EACO8a,GAAaJ,EAAQjK,GAEzBgK,GAAcY,EAAWX,EAAQjK,GAG5C,MAAgB,WAAZzL,EAEI,cAAC,IAAD,CAASC,UAAQ,EAACC,MAAOA,EAAOjB,SAAS,KAAzC,SACI,cAAC,IAAD,yBAAQa,KAAK,MAASrG,GAAtB,IAA4BoQ,MAAO0M,IAAa,YAAc,UAAW9X,WAAY8X,IAAa,YAAc,GAAIvW,QAAQ,QAAQO,QAAS+V,EAA7I,SACKlW,OAOb,cAAC,IAAD,CAAUyJ,MAAO0M,IAAa,YAAc,GAAI9X,WAAY8X,IAAa,YAAc,GAAIhW,QAAS+V,EAAalW,KAAMA,EAAvH,SACKF,KAMbiW,GAAcrV,aAAe,CACzBsV,mBAAezb,EACfqF,QAAS,SACTqW,UAAW,QAeAF,UCrDTM,GAAiB,SAACvc,GACpB,IAAMuR,EAASwF,eAETyF,EAAoBxF,KAAYC,SAAS1F,EAAQvR,EAAM8Y,SAU7D,OACI,eAAC,IAAD,CAAa5N,QAAQ,OAAOmO,SAAS,OAAO1T,QAAS,CAAC,IAAK,KAAMD,eAAe,SAASG,YAAY,QAAQD,KAAK,KAAlH,UACI,cAAC,IAAD,CAAQ4I,GAAG,IAAI1I,QAAQ,QACnBO,QAXZ,WACI0L,KAAWC,SAAST,EAAQ,CAAEkE,eAAe,GAAQ,CAAExD,GAAIuK,KASvD,kCAKA,cAAC,IAAD,CAAQhO,GAAG,IAAI1I,QAAQ,UACnBO,QAZZ,WACI0L,KAAWC,SAAST,EAAQ,CAAEiE,aAAa,GAAQ,CAAEvD,GAAIuK,KAUrD,gCASGC,GAvCQ,SAACzc,GAEpB,OACI,cAAC,WAAD,UACI,cAAC,GAAD,eAAoBA,O,UCI1B0c,GAAkB,CACpB,eAAgB,qBAChB,aAAc,qBAGZC,GAAsB,CACxB,eAAgB,eAAC,WAAD,WACZ,cAAC,IAAD,CAAMnO,GAAG,IAAT,kFAGA,eAAC,IAAD,CAAMA,GAAG,IAAT,6HAC8G,cAAC,IAAD,CAAMmB,MAAM,YAAYxE,EAAE,QAAQjG,GAAI0X,QAGpJ,cAAC,IAAD,CAAMpO,GAAG,IAAT,+EAIA,cAAC,IAAD,CAAMA,GAAG,IAAImB,MAAM,YAAY3K,WAAW,WAA1C,sBAGA,cAAC,IAAD,CAAMwJ,GAAG,IAAT,SACI,uEAIJ,eAAC,IAAD,CAAMA,GAAG,IAAItJ,GAAG,OAAhB,mCAC0B,cAAC,IAAD,CAAM6F,GAAG,IAAI7F,GAAG,OAAO0S,GAAG,YAAYnT,aAAa,OAAnD,mBAD1B,+BAGA,cAAC,IAAD,CAAM+J,GAAG,IAAT,SACI,sEAIJ,eAAC,IAAD,CAAM/I,WAAW,SAAS4T,SAAS,OAAnC,mCAC0B,cAAC,KAAD,CAAOlO,EAAE,KAAKyM,GAAG,aAD3C,kCAKJ,aAAc,eAAC,WAAD,WACV,eAAC,IAAD,CAAMpJ,GAAG,IAAT,sEAC0D,cAAC,IAAD,CAAMtJ,GAAG,MAAM0S,GAAG,YAAlB,kBAE1D,cAAC,IAAD,CAAMpJ,GAAG,IAAImB,MAAM,YAAY3K,WAAW,WAA1C,sBAGA,cAAC,IAAD,CAAMwJ,GAAG,IAAT,SACI,uEAIJ,eAAC,IAAD,CAAMA,GAAG,IAAItJ,GAAG,OAAhB,wBACe,cAAC,IAAD,CAAMA,GAAG,OAAOyK,MAAM,YAAY5K,SAAS,UAA3C,eADf,YACqF,cAAC,IAAD,CAAMG,GAAG,OAAOyK,MAAM,YAAY5K,SAAS,UAA3C,eADrF,wBACoK,cAAC,IAAD,CAAMG,GAAG,OAAOyK,MAAM,YAAY5K,SAAS,UAA3C,eADpK,kBAGA,cAAC,IAAD,CAAMyJ,GAAG,IAAT,SACI,sEAIJ,cAAC,IAAD,CAAM6K,SAAS,OAAf,SAEQxE,GAAa,CAAC,aAAc,UAAW,wBAAsB,gBAAgBxI,KAAI,SAACuJ,EAAMqE,GAAP,OAC7E,cAAC,IAAD,CAA+B/U,GAAG,OAAOT,aAAa,OAAOoL,EAAE,IAAI9E,GAAG,IAAIxF,GAAG,IAAIoK,MAAM,QAAQiI,GAAG,YAAlG,SAA+GhC,GAA/G,UAAcA,EAAd,YAAsBqE,aAkB1C,IAAM4C,GAAQ,SAAC7c,GACX,IAAMuR,EAASwF,eACf,OAAQ/W,EAAM8c,cACV,IAAK,eACD,OACI,eAAC,KAAD,CAAK3R,EAAE,OAAP,UACI,cAAC,GAAD,CAAe0E,EAAE,IAAIhK,YAAY,QAAQ/E,KAAK,OAAOob,cAAe,kBAjBxF,SAAiC3K,EAAQG,GAEjCqL,KAAMC,YAAYzL,EAAO0L,WACzBC,MAAM,kEAKVpB,GAAW,cAAevK,GASgE4L,CAAwB5L,IAASiK,OAAO,cAAcxV,MAAM,6BAA0BE,KAAM,cAAC,IAAD,CAAMxB,MAAM,QAAQQ,GAAI0X,OAC9L,cAAC,KAAD,CAASQ,kBAAkB,MAAMC,QAAQ,SAGrD,IAAK,aAEL,QACI,OAAO,OAKNC,GAAgB,SAACtd,GAC1B,IAAMuR,EAASwF,eACTuB,EAAaC,eAEbgF,EAAYC,eACZC,EAAaC,eAEnB,SAASrB,IACL,GAAIkB,GAAaE,EAAY,CACzB,GAAIlM,EAAO0L,UAAW,CAClB,GAAIF,KAAMY,WAAWpM,EAAO0L,WAAY,CACpC,MAAkBrL,KAAOgM,SAASrM,EAAQA,EAAO0L,WACjD,MAA6B,iBAD7B,oBACYH,aAKZ,OAAO,EAGf,OAAO,EAEX,OAAO,EAGX,OAAIxE,EAEI,eAAC,WAAD,WACI,cAAC,KAAD,2BAAStY,EAAMmY,YAAf,IAA2B0F,mBAAmB,OAAOtY,GAAG,IAAxD,SACKvF,EAAMiB,YAEX,cAAC,GAAD,eAAoBjB,OAK5B,eAAC,KAAD,yBAAKyE,aAAa,MAAM6U,OAAM,UAAK+C,IAAa,iCAAmC,cAArD,eAAoFrc,EAAMmY,YAAxH,IAAoIzI,WAAW,iBAAiBuG,SAAS,WAAzK,UAEI,eAAC,KAAD,CAAU6H,GAAIzB,IAAY0B,gBAAc,EAACC,iBAAiB,EAA1D,WACM1F,GACG,eAAC,KAAD,CAAK2F,gBAAgB,OAAO9S,EAAG,CAAC,OAAQ,OAAQ,QAASyM,GAAG,YAAY7M,GAAG,IAAIxF,GAAG,IAAIoK,MAAM,QAA5F,wBACc,kCAAK+M,GAAgB1c,EAAM8Y,QAAQgE,cAAnC,SAGLH,GAAoB3c,EAAM8Y,QAAQgE,eACpC,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAYhX,QAAQ,QAAQD,YAAY,QAAQK,KAAM,cAAC,IAAD,CAAMhB,GAAIgZ,WAEpE,eAAC,KAAD,WACI,cAAC,KAAD,IACA,cAAC,KAAD,CAAevO,MAAM,QAArB,mBACA,cAAC,KAAD,CAAaA,MAAM,QAAnB,SACKgN,GAAoB3c,EAAM8Y,QAAQgE,yBAS3D,cAAC,GAAD,CAAOT,SAAUA,IAAYS,aAAc9c,EAAM8Y,QAAQgE,kBAE7D,cAAC,KAAD,CAAKe,mBAAmB,OAAOtY,GAAG,IAAIwF,GAAIsR,KAAc,IAAxD,SACKrc,EAAMiB,gBAMVkd,GAAe,SAACne,GACzB,OACI,cAAC,KAAD,2BAASA,EAAMmY,YAAf,aACKnY,EAAMiB,aCjJJmd,GA9BQ,WA2BnB,MAAO,CAzBYC,uBAAY,SAAAre,GAC3B,OAAO,cAAC,GAAD,eAAUA,MAClB,IAEmBqe,uBAAY,SAAAre,GAC9B,IAAMc,EAAOd,EAAM8Y,QAAQhY,KAE3B,GAA4B,aAApB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMmT,MAAM,KAAK,IACjB,OAAO,cAAC,GAAD,eAAajU,IAExB,OAAQc,GACJ,IAAK,iBACD,OAAO,cAAC,GAAD,eAAmBd,IAC9B,IAAK,sBACD,OAAO,cAAC,GAAD,eAAkBA,IAC7B,IAAK,kCACD,OAAO,cAAC,GAAD,eAAkCA,IAE7C,IAAK,gCACD,OAAO,cAAC,GAAD,eAAgCA,IAE3C,QACI,OAAO,cAAC,GAAD,eAAoBA,OAEpC,MCjCQ,SAASse,KAEpB,IAAM/d,EAAeuL,KAErB,EAA0B9H,mBAASzD,GAAnC,mBAAOgC,EAAP,KAAcgc,EAAd,KAEA,SAASC,IACLD,EAASzS,MAYb,OATAzJ,qBAAU,WAGN,OAFA0E,SAAS0X,iBAAiB,mBAAoBD,GAEvC,WACHzX,SAAS2X,oBAAoB,mBAAoBF,MAEtD,IAGIjc,ECnBX,SAASoc,GAAepN,EAAxB,GAA2C,IAEjCqN,EAAU,CACZ9d,KAAM,iBACNgc,aAJkC,EAARhc,KAK1BG,SAAU,CAAC,CACPH,KAAM,YACNG,SAAU,CAAC,CACPsM,KAAM,QAKlB,GAAIgE,EAAO0L,UAAW,CAClB,MAAe9K,KAAKyL,SAASrM,EAAQA,EAAO0L,WAE5C,GAAkB,mBAFlB,oBAESnc,KAEL,YADAoc,MAAM,mIAKdnL,KAAWQ,YAAYhB,EAAQqN,EAAS,CAAEnL,QAAQ,IAClDuD,KAAY5G,MAAMmB,GC+BtB,SAASzB,GAAYxJ,GAEjBS,SAASnF,KAAKoF,MAAM6X,KAAO,OAG3BvY,EAAEoB,OAAO4P,OAITwH,YAAW,WACPC,OAAOC,UACR,KAGP,SAASC,KAEL,IAAInT,KAAJ,CAEA,IAAIoT,EAASnY,SAASoY,gBAElBD,EAAOE,kBACPF,EAAOE,oBACAF,EAAOG,qBACdH,EAAOG,uBACAH,EAAOI,wBACdJ,EAAOI,0BACAJ,EAAOK,qBACdL,EAAOK,uBAIf,SAASC,KAEA1T,OAED/E,SAAS0Y,eACT1Y,SAAS0Y,iBACF1Y,SAAS2Y,oBAChB3Y,SAAS2Y,sBACF3Y,SAAS4Y,qBAChB5Y,SAAS4Y,uBACF5Y,SAAS6Y,kBAChB7Y,SAAS6Y,oBAMFC,OA1FK,SAAC7f,GACjB,IAAQ8f,EAAqC9f,EAArC8f,sBAAuBvT,EAAcvM,EAAduM,UACzBgF,EAASwF,eACTjL,EAAewS,KAErB,OACI,eAAC,WAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,wBACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAUjY,QAASyZ,EAAuB5Z,KAAM,cAAC,IAAD,CAAMhB,GAAI6a,MAA1D,UACc,OAATxT,QAAS,IAATA,OAAA,EAAAA,EAAWe,WACN,wBACA,uBAGV,cAAC,IAAD,CAAUpH,KAAM,cAAC,IAAD,CAAMhB,GAAI6K,MAAa1J,QAASyJ,GAAhD,sCAGR,eAAC,IAAD,WACI,cAAC,IAAD,CAAYpB,GAAG,IAAf,sBACA,cAAC,IAAD,UACI,eAAC,IAAD,CAAWhL,MAAM,aAAjB,UACI,cAAC,IAAD,CAAUwC,KAAM,cAAC,IAAD,CAAMiF,EAAG,EAAGC,EAAG,EAAGlG,GAAI0X,KAAqBvW,QAAS,SAAAC,GAAC,OAAIqY,GAAepN,EAAQ,CAAEzQ,KAAM,kBAAxG,gCACA,cAAC,IAAD,CAAUoF,KAAM,cAAC,IAAD,CAAMiF,EAAG,EAAGC,EAAG,EAAGlG,GAAI8a,KAAmB3Z,QAAS,SAAAC,GAAC,OAAIqY,GAAepN,EAAQ,CAAEzQ,KAAM,gBAAtG,uCAIZ,eAAC,IAAD,WACI,cAAC,IAAD,CAAY4N,GAAG,IAAf,iBACA,cAAC,IAAD,UAEQ5C,EACM,cAAC,IAAD,CAAU5F,KAAM,cAAC,IAAD,CAAMhB,GAAI+a,OAAsB5Z,QAASmZ,GAAzD,0BACA,cAAC,IAAD,CAAUtZ,KAAM,cAAC,IAAD,CAAMhB,GAAIgb,OAAkB7Z,QAAS4Y,GAArD,wCCsBfkB,GAzDQ,WAEnB,IAAM5O,EAASwF,eACf,EAAoBlM,aAAc,uBAA3BuV,EAAP,oBACA,OACI,eAAC,WAAD,WAEI,eAAC,IAAD,WACI,eAAC,IAAD,2BAAiBA,EAAY,GAAH,eAAa,CAAE3b,aAAc,OAAQD,OAAQ,UAAvE,IAAmF6b,KAAK,WAAWnV,QAAQ,OAAOhG,GAAIoG,IAAQ1F,KAAK,KAAKC,YAAY,QAAQC,QAAQ,QAApK,UACI,cAAC,IAAD,CAAMqF,EAAG,EAAGC,EAAG,EAAGnG,GAAG,IAAIC,GAAIob,MADjC,0BAGA,eAAC,IAAD,WACI,cAAC,IAAD,CAAUpa,KAAM,cAAC,IAAD,CAAMiF,EAAG,EAAGC,EAAG,EAAGlG,GAAI0X,KAClCvW,QAAS,SAAAC,GAAC,OAAIqY,GAAepN,EAAQ,CAAEzQ,KAAM,kBADjD,gCAGA,cAAC,IAAD,CAAUoF,KAAM,cAAC,IAAD,CAAMiF,EAAG,EAAGC,EAAG,EAAGlG,GAAI8a,KAClC3Z,QAAS,SAAAC,GAAC,OAAIqY,GAAepN,EAAQ,CAAEzQ,KAAM,gBADjD,sCAMR,eAAC,IAAD,WACI,cAAC,IAAD,CAASiF,UAAQ,EAACC,MAAM,2BAAwBjB,SAAS,KAAzD,SACI,cAAC,IAAD,CACIG,GAAIoG,IACJiV,aAAW,2BACXza,QAAQ,QACR6J,MAAM,UACN/J,KAAK,KALT,SAOI,cAAC,IAAD,CAAMV,GAAIsb,UAIlB,eAAC,IAAD,WACI,cAAC,GAAD,CAAe1a,QAAQ,eAAehF,KAAK,QAAQ0a,OAAO,cAAcxV,MAAO,cAAC,IAAD,CAAMjB,SAAS,MAAf,2BAC/E,cAAC,GAAD,CAAee,QAAQ,eAAehF,KAAK,QAAQ0a,OAAO,cAAcxV,MAAO,cAAC,IAAD,CAAMjB,SAAS,MAAf,2BAC/E,cAAC,GAAD,CAAee,QAAQ,eAAehF,KAAK,QAAQ0a,OAAO,cAAcxV,MAAO,cAAC,IAAD,CAAMjB,SAAS,KAAf,8BAC/E,cAAC,GAAD,CAAee,QAAQ,eAAehF,KAAK,QAAQ0a,OAAO,aAAaxV,MAAO,cAAC,IAAD,CAAMjB,SAAS,KAAf,8BAC9E,cAAC,GAAD,CAAee,QAAQ,eAAehF,KAAK,QAAQ0a,OAAO,GAAGxV,MAAO,cAAC,IAAD,CAAMjB,SAAS,KAAf,kCAI5E,cAAC,GAAD,CAAejE,KAAK,OAAO0a,OAAO,OAAOxV,MAAM,UAAUE,KAAM,cAAC,IAAD,CAAMhB,GAAIub,QACzE,cAAC,GAAD,CAAe3f,KAAK,OAAO0a,OAAO,SAASxV,MAAM,UAAUE,KAAM,cAAC,IAAD,CAAMhB,GAAIwb,QAC3E,cAAC,GAAD,CAAe5f,KAAK,OAAO0a,OAAO,YAAYxV,MAAM,YAAYE,KAAM,cAAC,IAAD,CAAMhB,GAAIyb,QAChF,cAAC,GAAD,CAAe7f,KAAK,OAAO0a,OAAO,SAASxV,MAAM,UAAUE,KAAM,cAAC,IAAD,CAAMhB,GAAI0b,QAE3E,cAAC,GAAD,CAAe9f,KAAK,QAAQqb,UAAU,YAAYX,OAAO,OAAOxV,MAAM,yBAAyBE,KAAM,cAAC,IAAD,CAAMhB,GAAI2b,QAC/G,cAAC,GAAD,CAAe/f,KAAK,QAAQqb,UAAU,YAAYX,OAAO,SAASxV,MAAM,oBAAoBE,KAAM,cAAC,IAAD,CAAMhB,GAAI4b,QAC5G,cAAC,GAAD,CAAehgB,KAAK,QAAQqb,UAAU,YAAYX,OAAO,QAAQxV,MAAM,uBAAuBE,KAAM,cAAC,IAAD,CAAMhB,GAAI6b,QAC9G,cAAC,GAAD,CAAejgB,KAAK,QAAQqb,UAAU,YAAYX,OAAO,UAAUxV,MAAM,aAAaE,KAAM,cAAC,IAAD,CAAMhB,GAAI8b,YCjC5GC,GACgB,mBADhBA,GAEwB,2BAFxBA,GAGoB,uBAHpBA,GAIqB,wBAJrBA,GAKa,gBALbA,GAOK,QAIX,SAASrgB,GAAQV,EAAOW,GAEpB,OAAQA,EAAOC,MACX,KAAKmgB,GACD,OAAO,2BACA/gB,GADP,IAEIghB,eAAgBhhB,EAAMghB,gBAE9B,KAAKD,GACD,IAAKpgB,EAAOE,QAAQwP,SAAU,MAAM,IAAIwE,MAAM,4CAG9C,GAAgC,YAA5BlU,EAAOE,QAAQwP,WAA2BrQ,EAAMghB,cAEhD,OADAnU,QAAQ0F,IAAI,gDACLvS,EAGX,IAAMsM,EAAgB,eAAQtM,EAAMqM,WAGpC,OAFAC,EAAiB3L,EAAOE,QAAQwP,UAAY1P,EAAOE,QAAQwB,MAEpD,2BACArC,GADP,IAEIqM,UAAWC,IAGnB,KAAKyU,GACD,OAAO,2BACA/gB,GADP,IAEIihB,iBAAiB,IAEzB,KAAKF,GACD,OAAO,2BACA/gB,GADP,IAEIihB,iBAAiB,IAEzB,KAAKF,GACD,OAAO,2BACA/gB,GADP,IAEIihB,iBAAiB,EACjBxgB,SAAS,EACT4L,UAAW1L,EAAOE,QAAQwL,UAC1B7L,WAAOD,IAEf,KAAKwgB,GACD,OAAO,2BACA/gB,GADP,IAEIS,SAAS,EACTD,MAAOG,EAAOE,QAAQL,QAE9B,QAEI,OADAqM,QAAQC,KAAK,kCAAmCnM,GACzCX,GAInB,IAAMK,GAAe,CACjB2gB,eAAe,EACfvgB,SAAS,EACTD,MAAO,GACP6L,eAAW9L,EACX0gB,iBAAiB,GAGrB,SAASlC,KAEL,IAAInT,KAAJ,CAEA,IAAIoT,EAASnY,SAASoY,gBAElBD,EAAOE,kBACPF,EAAOE,oBACAF,EAAOG,qBACdH,EAAOG,uBACAH,EAAOI,wBACdJ,EAAOI,0BACAJ,EAAOK,qBACdL,EAAOK,uBAIf,SAASC,KAEA1T,OAED/E,SAAS0Y,eACT1Y,SAAS0Y,iBACF1Y,SAAS2Y,oBAChB3Y,SAAS2Y,sBACF3Y,SAAS4Y,qBAChB5Y,SAAS4Y,uBACF5Y,SAAS6Y,kBAChB7Y,SAAS6Y,oBAIjB,IA4aewB,GA5aF,WAAO,IAAD,IACThgB,EAAUC,cACV6L,EAAQC,cAENxJ,EAAO0d,cAAP1d,GAEF4N,EAAS2C,KAGf,EAAoCkK,KAApC,mBAAOtN,EAAP,KAAmBD,EAAnB,KACMD,ECjJK,SAA0BW,GAErC,OAAO8M,uBAAY,YAAmB,IAAD,mBAAhB3M,EAAgB,KAAVC,EAAU,KAC3B2P,EAAS,GAEf,GAAIC,KAAKC,OAAO9P,IAGQ,kCAFLS,KAAKsP,OAAOlQ,EAAQI,GAExB7Q,KAA0C,CACjD,IACM4gB,EADWhQ,EAATnE,KACW0G,MAAM,KACrBL,EAAS,EAEb8N,EAAMC,SAAQ,SAACC,EAAM3H,GACH,IAAVA,GACAqH,EAAO5e,KAAK,CACRmf,OAAQ,CAAElQ,OAAMiC,OAAQA,EAAS,GACjCxD,MAAO,CAAEuB,OAAMiC,UACf4E,UAAU,IAIlB5E,EAASA,EAASgO,EAAK/Z,OAAS,KAI5C,OAAOyZ,IACR,CAAC/P,IDsHauQ,CAAiBvQ,GAElC,EAA0BrQ,qBAAWN,GAASL,IAA9C,mBAAOL,EAAP,KAAciB,EAAd,KACQoL,EAA8DrM,EAA9DqM,UAAW5L,EAAmDT,EAAnDS,QAASD,EAA0CR,EAA1CQ,MAAOwgB,EAAmChhB,EAAnCghB,cAAeC,EAAoBjhB,EAApBihB,gBAE5CrV,EAAewS,KAfN,SA8CAwB,IA9CA,2EA8Cf,8BAAAte,EAAA,6DACIL,EAAS,CAAEL,KAAMmgB,KADrB,kBAI+Bxf,MAAM,mBAAD,OAAoBkC,GAAM,CAClDjC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjByO,SAAU,YACVhO,OAAQrC,EAAMqM,UAAUe,cAXxC,cAIcvL,EAJd,gBAc2BA,EAASC,OAdpC,OAccA,EAdd,OAeQb,EAAS,CAAEL,KAAMmgB,KAEjB9f,EAAS,CAAEL,KAAMmgB,GAA+BlgB,QAAS,CAAEwP,SAAU,YAAahO,MAAOP,EAAKsL,aAE9FJ,EAAM,CACF+I,SAAUmK,EAAY,YAAc,SACpC1c,MAAO1B,EAAKsL,UACN,6CACA,gEACNO,OAAQ,UACRkU,SAAU,IACVhU,YAAY,IA1BxB,kDA8BQb,EAAM,CACF+I,SAAUmK,EAAY,YAAc,SACpC1c,MAAO,+BACPmK,OAAQ,QACRkU,SAAU,IACVhU,YAAY,IAnCxB,2DA9Ce,+BAsFAkC,EAtFA,8EAsFf,mCAAAzO,EAAA,6DAAqC+O,EAArC,EAAqCA,SACjCpP,EAAS,CAAEL,KAAMmgB,KACbrf,EAAO,CAAE2O,WAAUhO,MAAOrC,EAAMqM,UAAUgE,GAAW9C,OAAQvN,EAAMqM,UAAUkB,QAEhE,YAAb8C,IACA3O,EAAI,MAAYC,KAAKC,UAAU5B,EAAMqM,UAAUgE,KALvD,kBAW+B9O,MAAM,mBAAD,OAAoBkC,GAAM,CAClDjC,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUF,KAhBjC,cAWcG,EAXd,iBAkB2BA,EAASC,OAlBpC,QAkBcA,EAlBd,OAoBQ+K,QAAQ0F,IAAIzQ,GACZb,EAAS,CAAEL,KAAMmgB,KArBzB,kDAyBQ/T,EAAM,CACF+I,SAAUmK,EAAY,YAAc,SACpC1c,MAAO,+BACPmK,OAAQ,QACRkU,SAAU,IACVhU,YAAY,IA9BxB,2DAtFe,sBAyHf,SAAS+B,EAAYxJ,GAEjBS,SAASnF,KAAKoF,MAAM6X,KAAO,OAG3BvY,EAAEoB,OAAO4P,OAITwH,YAAW,WACPC,OAAOC,UACR,KAnHP3c,qBAAU,WAAM,4CACZ,8BAAAb,EAAA,sEAC2BC,MAAM,mBAAD,OAAoBkC,IADpD,cACU5B,EADV,gBAEuBA,EAASC,OAFhC,UAEUA,EAFV,OAI4B,MAApBD,EAAS8L,OAJjB,uBAKQzM,EAAQsB,KAAR,mBALR,8BASQX,EAASE,GATjB,wBAUQd,EAAS,CAAEL,KAAMmgB,GAAuBlgB,QAAS,CAAEwL,UAAWD,GAAetK,MAVrF,2BAcIkL,EAAM,CACFU,YAAa5L,EAAKsM,QAClBT,OAAQ,QACRE,YAAY,IAjBpB,6CADY,uBAAC,WAAD,wBAyBZiU,KAED,CAACre,EAAIuJ,EAAO9L,IA2Ff,IAAMsC,GAAS,OAACxD,QAAD,IAACA,GAAD,UAACA,EAAOqM,iBAAR,aAAC,EAAkB7I,OAApB,8BACQxD,QADR,IACQA,GADR,UACQA,EAAOqM,iBADf,aACQ,EAAkB7I,OAClC,aACNmI,GAAiBnI,GAEjB,IAAMue,EAAOlD,OAAOrf,SAASuiB,KAE7B,EAAoBpX,aAAc,uBAA3BuV,EAAP,oBAMA,OACI,eAAC,KAAD,CAEQ7O,SACAhP,MAAO5B,EACD,CAAC,CAAEM,SAAU,CAAC,CAAEsM,KAAM,kBACtB7M,EACI,CAAC,CAAEO,SAAU,CAAC,CAAEsM,KAAM,OACtBhB,EAAUE,QACpB+D,SAAU,SAAA0R,GAAU,OAAI/gB,EAAS,CAAEL,KAAMmgB,GAA+BlgB,QAAS,CAAEwP,SAAU,UAAWhO,MAAO2f,MARvH,UAWK9B,EAGO,eAAC,IAAD,CAAMhV,EAAE,QAAQ2D,gBAAgB,kBAAkBoT,aAAa,WAA/D,UAEI,cAAC,IAAD,CAAUC,QAAS,EAAGC,QAAS,EAAGzK,GAAG,UAAUrS,GAAG,KAAK0Q,SAAS,SAASyE,IAAI,IAAIlP,OAAO,SAASP,GAAI,CACjG,eAAgB,CACZC,QAAS,SAFjB,SAKI,cAAC,GAAD,CAAc4E,cAAanM,SAI/B,eAAC,IAAD,CAAUye,QAAS,EAAGC,QAAS,GAAIpX,GAAI,CACnC,eAAgB,CACZC,QAAS,SAFjB,UAKKvK,GACG,cAAC,IAAD,CAAUiF,KAAK,KAAKyI,iBAAe,EAC/BpD,GAAI,CACA,UAAW,CACP1G,WAAY,qCAM5B,eAAC,IAAD,CAAM+d,iBAAiB,iBAAiBC,oBAAoB,gBAAgBnX,EAAE,OAAOwM,GAAG,QAAxF,UAEI,cAAC,IAAD,CAAUwK,QAAQ,IAAIC,QAAQ,IAAInX,QAAQ,OAAO4D,WAAW,SAA5D,SACI,cAAC,IAAD,CAAM5J,GAAG,IAAIe,KAAK,aAAayI,GAAG,IAAlC,SACI,cAAC,IAAD,CAAMxJ,GAAIsd,UAIlB,eAAC,IAAD,CAAUJ,QAAQ,IAAIlX,QAAQ,OAAOtG,cAAc,MAAMa,WAAW,SAASgd,GAAG,IAAhF,UACI,cAAC,IAAD,CAAUxT,UAAWtO,EAArB,SACI,cAAC,GAAD,CAAsBsP,sBAAqB9O,WAAUuC,MAAO6I,EAAYA,EAAU7I,MAAQ,QAGzF/C,GACD,cAAC,IAAD,CAAQgG,GAAG,IAAIb,QAAQ,QAAQF,KAAK,KAAK8c,UAAWvB,EAAkB,cAAC,KAAD,IAAc,cAAC,IAAD,CAAMxR,MAAM,YAAYzK,GAAIyd,MAAhH,SAAoIxB,EAAkB,sBAAwB,yBAItL,cAAC,IAAD,CAAUjW,QAAQ,OAAOzF,WAAW,SAASsF,GAAG,IAAI6X,SAAU,EAAGR,QAAS,EAA1E,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAS1e,MAAM,iFAAf,SACI,eAAC,IAAD,CAAQ2C,QAASyZ,EAAuBja,YAAY,QAApD,UACI,cAAC,IAAD,CAAMX,GAAI6a,IAAc9a,GAAG,OACjB,OAATsH,QAAS,IAATA,OAAA,EAAAA,EAAWe,WACN,wBACA,8BAOtB,cAAC,IAAD,CAAU/H,GAAG,IAAIqd,SAAU,EAAGR,QAAQ,IAAIlX,QAAQ,cAAczF,WAAW,SAA3E,SACI,cAAC,GAAD,CAAmBqa,wBAAuBvT,gBAE9C,cAAC,IAAD,CAAUhH,GAAG,IAAIwF,GAAG,IAAIsX,QAAS,EAAG3d,MAAM,OAAOme,UAAU,0CAA3D,SACI,cAAC,IAAD,CAAa3d,GAAIM,IAAMC,WAAW,SAAlC,SACI,cAACqd,GAAD,cAQhB,cAAC,IAAD,CAAUV,QAAS,EAAGC,QAAS,EAAG5W,EAAE,KAAKmM,GAAG,WACxC3M,GAAI,CACA,eAAgB,CACZ8X,WAAY,kBACZC,QAAS,kBAGjB1S,OAAQ,kBAAML,EAAoB,CAAEM,SAAU,aAPlD,SASI,cAAC,IAAD,CAAUtB,UAAWtO,EAArB,SACI,cAAC,GAAD,CAEQiQ,WACAC,gBACAC,aACAC,UAAWmQ,EACXxQ,YAAa,2BAM7B,eAAC,IAAD,CAAU0R,QAAS,EAAGC,QAAS,EAC3BpX,GAAI,CACA,eAAgB,CACZC,QAAS,SAHrB,UAMI,cAAC,KAAD,IACA,eAAC,KAAD,CAAKO,EAAE,IAAP,UACI,cAAC,IAAD,CAAMzG,WAAW,WAAWD,SAAS,KAArC,uCAEKpE,IAAYD,GACb,eAAC,WAAD,WACI,cAAC,GAAD,CAAsBuP,sBAAqB9O,WAAUsC,KAAM8I,EAAU9I,OACrE,cAAC,GAAD,CAAqBwM,sBAAqB9O,WAAUgQ,UAAW5E,EAAUc,gBAKrF,cAAC,KAAD,IACA,eAAC,KAAD,CAAK5B,EAAE,IAAP,UACI,cAAC,IAAD,CAAMzG,WAAW,WAAWD,SAAS,KAArC,qBACA,eAAC,IAAD,CAAMyJ,GAAG,IAAT,iCACqB,cAAC,KAAD,CAAQ3I,YAAY,QAAQc,GAAG,IAAIyK,UAAW8P,EAAe1Q,SAAU,kBAAMrP,EAAS,CAAEL,KAAM,wCAS/H,eAAC,IAAD,CAAMmiB,QAAQ,SAASC,KAAK,QAA5B,UACKviB,GACG,cAAC,IAAD,CAAUiF,KAAK,KAAKyI,iBAAe,EAC/BpD,GAAI,CACA,UAAW,CACP1G,WAAY,qCAK5B,eAAC,IAAD,CAAMgB,GAAG,IAAIwF,GAAG,IAAItF,WAAW,SAA/B,UAEI,eAAC,IAAD,CAAM6J,SAAS,IAAI7J,WAAW,SAA9B,UACI,cAAC,IAAD,CAAUwJ,UAAWtO,EAArB,SACI,cAAC,GAAD,CAAsBsP,sBAAqB9O,WAAUuC,MAAO6I,EAAYA,EAAU7I,MAAQ,QAGzF/C,GACD,eAAC,KAAD,WACI,cAAC,KAAD,UACI,cAAC,IAAD,CAAQgG,GAAG,IAAIb,QAAQ,QAAQF,KAAK,KAApC,SACKub,EACK,cAAC,KAAD,IACA,cAAC,IAAD,CAAMxR,MAAM,YAAYzK,GAAIyd,UAI1C,cAAC,KAAD,CAAgBlX,EAAE,IAAInH,UAAU,OAAhC,SAEQ6c,EACM,oBACA,4BAQ1B,eAAC,IAAD,WACI,cAAC,IAAD,CAAYrb,QAAQ,QAAQD,YAAY,QAAQK,KAAM,cAAC,IAAD,CAAMhB,GAAIie,MAAoBje,GAAIyG,MACxF,eAAC,IAAD,WACI,cAAC,IAAD,CAAWjI,MAAM,YAAjB,SACI,cAAC,IAAD,CAAU2C,QAASyZ,EAAuB5Z,KAAM,cAAC,IAAD,CAAMyJ,MAAM,YAAYzK,GAAI6a,MAA5E,UACc,OAATxT,QAAS,IAATA,OAAA,EAAAA,EAAWe,WACN,wBACA,yBAId,cAAC,IAAD,IACA,cAAC,IAAD,CAAW5J,MAAM,MAAjB,SAEQoI,EACM,cAAC,IAAD,CAAU5F,KAAM,cAAC,IAAD,CAAMhB,GAAI+a,OAAsB5Z,QAASmZ,GAAzD,0BACA,cAAC,IAAD,CAAUtZ,KAAM,cAAC,IAAD,CAAMhB,GAAIgb,OAAkB7Z,QAAS4Y,GAArD,0CAO1B,cAAC,KAAD,IACA,cAAC,KAAD,CAAK3P,SAAS,IAAIsI,GAAG,WAAWnM,EAAE,IAAInH,UAAU,OAAhD,SACI,cAAC,IAAD,CAAUE,OAAO,OAAOyK,UAAWtO,EAAnC,SACI,cAAC,GAAD,CAEQiQ,WACAC,gBACAC,aACAC,UAAWmQ,EACXxQ,YAAa,2BAM5Ba,EAAO0L,WACJ,cAAC,KAAD,CAAO7C,UAAU,SAAS0D,GAAIvM,EAAO0L,UAAWjW,MAAO,CAAEwE,OAAQ,GAAIlH,UAAW,iCAAhF,SAEI,eAAC,IAAD,CAAMgB,GAAG,OAAO6F,EAAE,QAAQwE,MAAM,UAAUiI,GAAG,QAAQnS,WAAW,SAASjB,OAAO,OAAhF,UACI,cAAC,IAAD,CAAME,MAAM,OAAOF,OAAO,OAAO4e,UAAU,OAAO3d,WAAW,SAA7D,SACI,cAACqd,GAAD,MAGJ,eAAC,IAAD,CAAMte,OAAO,OAAOyR,SAAS,QAAQoN,OAAO,IAAItL,MAAM,IAAItS,WAAW,SAArE,UACI,cAAC,KAAD,CAAS6d,YAAY,aACrB,cAAC,IAAD,CAAY1L,GAAG,QAAQnT,aAAa,OAAOD,OAAO,OAAO6B,QArO7F,WACI0L,KAAWwR,SAAShS,IAoOkGzL,QAAQ,QAAQD,YAAY,QAAQK,KAAM,cAAC,IAAD,CAAMhB,GAAIse,QAC1I,cAAC,KAAD,CAASF,YAAY,aACrB,cAAC,IAAD,CAAYxd,QAAQ,QAAQrB,aAAa,OAAOD,OAAO,OAAOqB,YAAY,QAAQK,KAAM,cAAC,IAAD,CAAMhB,GAAIue,iBAOhHlS,EAAO0L,WACL,cAAC,KAAD,CAAO7C,UAAU,SAAS0D,IAAKvM,EAAO0L,UAAWjW,MAAO,CAAEwE,OAAQ,KAAlE,SAEI,eAAC,KAAD,CAAKmE,MAAM,QAAQzE,QAAQ,OAAO0M,GAAG,UAAUnS,WAAW,SAASf,MAAM,OAAOgB,eAAe,eAA/F,UACI,eAAC,IAAD,CAAMW,QAASyJ,EAAamT,QAAQ,SAASxd,WAAW,SAASC,eAAe,SAASkK,OAAO,UAAU2Q,aAAW,SAAShb,GAAG,IAAIme,OAAQ,CAAE/T,MAAO,kCAAtJ,UACI,cAAC,IAAD,CAAMxE,EAAG,EAAGC,EAAG,EAAGlG,GAAI6K,MACtB,cAAC,IAAD,CAAMhL,SAAS,UAAf,yBAGJ,eAAC,IAAD,CAAMke,QAAQ,SAASxd,WAAW,SAASP,GAAG,IAAIe,KAAK,aAAaP,eAAe,SAASkK,OAAO,UAAU2Q,aAAW,SAAShb,GAAG,IAAIme,OAAQ,CAAE/T,MAAO,kCAAzJ,UACI,cAAC,IAAD,CAAMxE,EAAG,EAAGC,EAAG,EAAGlG,GAAIye,MACtB,cAAC,IAAD,CAAM5e,SAAS,UAAf,uBAGJ,eAAC,IAAD,CAAMke,QAAQ,SAASxd,WAAW,SAASC,eAAe,SAASkK,OAAO,UAAU2Q,aAAW,SAAShb,GAAG,IAAIme,OAAQ,CAAE/T,MAAO,kCAAhI,UACI,cAAC,IAAD,CAAMxE,EAAG,EAAGC,EAAG,EAAGlG,GAAIiB,MACtB,cAAC,IAAD,CAAMpB,SAAS,UAAf,sCAa5B,eAAC,IAAD,CAAMmG,QAAQ,OAAOtG,cAAc,SAASa,WAAW,aAAawQ,SAAS,QAAQzK,OAAO,SAAS6X,OAAO,MAAM3e,MAAM,OACpHuG,GAAI,CACA,eAAgB,CACZC,QAAS,SAHrB,UAOI,cAAC,IAAD,CAAMhG,GAAImG,KACV,eAAC,IAAD,CAAMtG,SAAS,UAAf,cAA2Bkd,EAA3B,eAA6Cte,EAA7C,uB,oBE1bDigB,GA7GF,WACT,IAAQpjB,EAASsC,IAATtC,KACR,OACI,eAAC,WAAD,WAEI,eAAC,KAAD,CAAKuK,GAAG,KAAR,UAEI,eAAC,IAAD,CAAM2D,GAAG,OAAOhJ,eAAe,gBAAgBD,WAAW,SAASF,GAAG,IAAtE,UACI,cAAC,GAAD,IACC/E,EAEO,cAAC,IAAD,CAAQ0E,GAAG,IAAIe,KAAK,aAAaJ,YAAY,QAAQC,QAAQ,QAA7D,6BAKA,eAAC,IAAD,CAAaH,QAAQ,IAArB,UACI,cAAC,IAAD,CAAQT,GAAG,IAAIe,KAAK,SAASJ,YAAY,QAAQC,QAAQ,UAAzD,+BAGA,cAAC,IAAD,CAAQZ,GAAG,IAAIe,KAAK,UAAUH,QAAQ,QAAQD,YAAY,QAA1D,gCAQhB,eAAC,IAAD,CAAMjB,cAAe,CAAC,SAAU,OAAQa,WAAW,SAAS+I,GAAG,IAA/D,UACI,eAAC,KAAD,CAAKrD,EAAG,MAAR,UACI,eAAC,IAAD,CAAM0Y,WAAW,IAAIpV,UAAW,CAAC,SAAU,QAA3C,UACI,cAAC,IAAD,CAAMvJ,GAAG,OAAOF,WAAW,OAAOD,SAAS,YAA3C,mCAAoF,IACpF,cAAC,IAAD,CAAMG,GAAG,OAAOyK,MAAM,YAAY3K,WAAW,OAAOD,SAAS,YAA7D,6BAEJ,cAAC,IAAD,CAAMA,SAAS,UAAf,qDAIIvE,EAEQ,cAAC,IAAD,CAAQgO,GAAG,IAAI5I,KAAK,KAAKV,GAAG,IAAIe,KAAK,aAAaJ,YAAY,QAAQC,QAAQ,QAA9E,6BAIA,cAAC,IAAD,CAAQ0I,GAAG,IAAI5I,KAAK,KAAKV,GAAG,IAAIe,KAAK,UAAUH,QAAQ,QAAQD,YAAY,QAA3E,mCAOhB,cAAC,KAAD,CAAOsF,EAAE,MAAM2Y,UAAU,QAAQC,IAAI,oBAI7C,cAAC,IAAD,CAAMvV,GAAG,IAAI/C,EAAE,KAAKN,EAAE,OAAO8K,SAAS,WAAWxQ,WAAW,SAA5D,SACI,eAAC,KAAD,CAAK4J,GAAG,KAAKX,GAAG,OAAOhK,MAAM,eAA7B,UACI,eAAC,KAAD,CAAKyG,EAAG,MAAR,UAEI,cAAC,IAAD,CAAMwE,MAAM,YAAY3K,WAAW,OAAOD,SAAS,WAAWyJ,GAAG,KAAjE,mCAIA,eAAC,KAAD,CAAO7I,QAAQ,IAAf,UAEI,eAAC,IAAD,WACI,cAAC,KAAD,CAAQZ,SAAS,UAAUC,WAAW,OAAOY,KAAK,OAAOgS,GAAG,YAAYjI,MAAM,QAA9E,eAGA,eAAC,KAAD,CAAKhJ,GAAG,IAAR,UACI,cAAC,IAAD,CAAM5B,SAAS,UAAUC,WAAW,OAApC,gCACA,cAAC,IAAD,2IAIR,eAAC,IAAD,WACI,cAAC,KAAD,CAAQD,SAAS,UAAUC,WAAW,OAAOY,KAAK,OAAOgS,GAAG,YAAYjI,MAAM,QAA9E,eAGA,eAAC,KAAD,CAAKhJ,GAAG,IAAR,UACI,cAAC,IAAD,CAAM5B,SAAS,UAAUC,WAAW,OAApC,kCACA,cAAC,IAAD,+FAIR,eAAC,IAAD,WACI,cAAC,KAAD,CAAQD,SAAS,UAAUC,WAAW,OAAOY,KAAK,OAAOgS,GAAG,YAAYjI,MAAM,QAA9E,eAGA,eAAC,KAAD,CAAKhJ,GAAG,IAAR,UACI,cAAC,IAAD,CAAM5B,SAAS,UAAUC,WAAW,OAApC,8CACA,cAAC,IAAD,2JAOhB,cAAC,KAAD,CAAOiR,SAAS,WAAWyE,IAAI,MAAM3C,MAAM,MAAMgM,IAAI,kBACrD,cAAC,KAAD,CAAO9N,SAAS,WAAW8B,MAAM,QAAQ2C,IAAI,QAAQhX,MAAM,qBAAqBqgB,IAAI,iBACpF,cAAC,KAAD,CAAO9N,SAAS,WAAW8B,MAAM,QAAQ2C,IAAI,QAAQhX,MAAM,yBAAyBqgB,IAAI,iBACxF,cAAC,KAAD,CAAO9N,SAAS,WAAW8B,MAAM,QAAQ2C,IAAI,QAAQhX,MAAM,wBAAwBqgB,IAAI,0B,oBCrFrGxjB,GAAe,CACjByjB,MAAO,GACPzM,cAAU9W,EACV8L,UAAW,CACP7I,MAAO,GACP+I,QAAS,CACL,CACI3L,KAAM,YACNG,SAAU,CACN,CACIsM,KAAM,SAQ9B,SAAS3M,GAAQV,EAAOW,GAEpB,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,2BACAZ,GADP,IAEIqX,SAAU1W,EAAOE,QAAQwW,WAEjC,IAAK,gBACD,OAAO,2BACArX,GADP,IAEIqM,UAAW1L,EAAOE,QAAQwL,YAElC,IAAK,wBACD,OAAO,2BACArM,GADP,IAEIqM,UAAU,2BACHrM,EAAMqM,WADJ,IAELE,QAAS5L,EAAOE,QAAQ0L,YAGpC,IAAK,WACD,OAAO,2BACAvM,GADP,IAEI8jB,MAAM,GAAD,mBACE9jB,EAAM8jB,OADR,CAEDnjB,EAAOE,QAAQP,SAG3B,IAAK,YACD,OAAO,2BACAN,GADP,IAEI8jB,MAAOnjB,EAAOE,QAAQijB,QAE9B,QAEI,OADAjX,QAAQC,KAAK,kCAAmCnM,GACzCX,GAKnB,IA+LM+jB,GAAe,SAACjkB,GAClB,IAAQmB,EAAanB,EAAbmB,SAEF+L,EAAQC,cACR+W,EAAW7f,mBAEjB,SAAS8f,IACL,IAAM5M,EAAW2M,EAAS/T,QAAQ5N,MAClC,GAAwB,KAApBgV,EAASZ,OAGT,OAFAyN,aAAaC,QAAQ,cAAe9M,QACpCpW,EAAS,CAAEL,KAAM,eAAgBC,QAAS,CAAEwW,cAIhDrK,EAAM,CACFU,YAAa,mCACbC,OAAQ,UACRkU,SAAU,IACV9L,SAAU,YACVlI,YAAY,IAKpB,OACI,cAAC,IAAD,CAAM6J,GAAG,WAAWxM,EAAE,QAAQ3F,WAAW,SAASC,eAAe,SAAjE,SACI,eAAC,IAAD,CAAMud,QAAQ,SAASrL,GAAG,QAAQ7M,GAAG,KAAKxF,GAAG,IAAIjB,UAAU,OAAOG,aAAa,OAAOgB,WAAW,SAASC,eAAe,SAAzH,UACI,cAAC,IAAD,CAAMX,SAAS,UAAUyJ,GAAG,IAA5B,+BACA,cAAC,KAAD,CAAO8V,SAAUH,EAAmBve,KAAK,KAAKc,IAAKwd,EAAUpe,QAAQ,SAAS0I,GAAG,IAAIkC,YAAY,sBACjG,cAAC,IAAD,CAAQ5K,QAAQ,QAAQD,YAAY,QAAQ2I,GAAG,IAAInI,QAAS8d,EAA5D,2BAMVI,GAAc,SAACvkB,GACjB,IAAQgkB,EAA4EhkB,EAA5EgkB,MAAOzX,EAAqEvM,EAArEuM,UAAqBiE,GAAgDxQ,EAA1DmB,SAA0DnB,EAAhDwQ,UAAUe,EAAsCvR,EAAtCuR,OAAQT,EAA8B9Q,EAA9B8Q,WAAYD,EAAkB7Q,EAAlB6Q,cAClE,OACI,eAAC,WAAD,WAEI,eAAC,IAAD,CAAMtL,GAAG,IAAT,UACI,cAAC,IAAD,CAAM+J,SAAS,IAAIK,MAAM,YAAY5E,GAAG,IAAIhG,SAAS,UAAUC,WAAW,OAA1E,SAAmFuH,EAAU7I,QAC7F,cAAC,IAAD,CAAMgC,eAAe,WAAWD,WAAW,SAASsF,GAAG,IAAvD,SACI,cAAC,GAAD,CAAWiZ,MAAOA,SAI1B,cAAC,KAAD,UACI,cAAC,IAAD,CAAWQ,SAAS,eAAehW,GAAG,IAAtC,SACI,cAACoG,GAAc/R,SAAf,CAAwBN,MAAOkS,GAA/B,SACI,cAAC,KAAD,CAEQlD,SACAhP,MAAOgK,EAAUE,QACjB+D,WAJR,SAOI,cAAC,KAAD,CAAKjM,WAAW,QAAQwG,GAAI,CAAC,IAAK,MAAOxF,GAAG,KAAKL,GAAI8L,KAAUhG,OAAO,KAC5D6F,gBAAeC,aAAYC,UAAU,gBAUrE0T,GAAc,SAACzkB,GACjB,IAAQuX,EAAsFvX,EAAtFuX,SAAUyM,EAA4EhkB,EAA5EgkB,MAAOzX,EAAqEvM,EAArEuM,UAAWpL,EAA0DnB,EAA1DmB,SAAUqP,EAAgDxQ,EAAhDwQ,SAAUe,EAAsCvR,EAAtCuR,OAAQT,EAA8B9Q,EAA9B8Q,WAAYD,EAAkB7Q,EAAlB6Q,cAC5E,OACI0G,EACI,eAAC,WAAD,WAEI,eAAC,IAAD,CAAMhS,GAAG,IAAT,UACI,cAAC,IAAD,CAAM+J,SAAS,IAAIK,MAAM,YAAY5E,GAAG,IAAIhG,SAAS,UAAUC,WAAW,OAA1E,SAAmFuH,EAAU7I,QAC7F,cAAC,IAAD,CAAMgC,eAAe,WAAWD,WAAW,SAASsF,GAAG,IAAvD,SACI,cAAC,GAAD,CAAWiZ,MAAOA,SAI1B,cAAC,KAAD,UACI,cAAC,IAAD,CAAWQ,SAAS,eAAehW,GAAG,IAAtC,SACI,cAACoG,GAAc/R,SAAf,CAAwBN,MAAOkS,GAA/B,SACI,cAAC,KAAD,CAEQlD,SACAhP,MAAOgK,EAAUE,QACjB+D,WAJR,SAOI,cAAC,KAAD,CAAKjM,WAAW,QAAQwG,GAAI,CAAC,IAAK,MAAOxF,GAAG,KAAKL,GAAI8L,KAAUhG,OAAO,KAC5D6F,gBAAeC,aAAYC,UAAU,eAQnE,cAAC,GAAD,CAAoB5P,cAM1BujB,GAAY,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAH,OACd,cAAC,KAAD,CAAape,KAAK,KAAK+e,IAAK,EAA5B,SACKX,EAAM3X,KAAI,gBAAGkL,EAAH,EAAGA,SAAUE,EAAb,EAAaA,OAAb,OACP,cAAC,KAAD,CAAqBG,GAAG,YAAYjI,MAAM,QAAQxN,KAAMoV,EAAUwM,IAAK,cAAC,IAAD,IAAergB,MAAO6T,GAAhFE,SAIVmN,GAhTE,WAEb,IAAQjhB,EAAO0d,cAAP1d,GACR,EAA0Bb,IAAlBtC,EAAR,EAAQA,KAAMG,EAAd,EAAcA,QAER4Q,EAAS2C,KACf,EAAoCkK,KAApC,mBAAOtN,EAAP,KAAmBD,EAAnB,KAEA,EAA0B3P,qBAAWN,GAASL,IAA9C,mBAAOL,EAAP,KAAciB,EAAd,KACQoW,EAA+BrX,EAA/BqX,SAAUyM,EAAqB9jB,EAArB8jB,MAAOzX,EAAcrM,EAAdqM,UAEnBsY,EAAexgB,kBAAO,GAEtB6I,EAAQC,cA4Hd,SAASqD,EAASC,GAEdtP,EAAS,CAAEL,KAAM,wBAAyBC,QAAS,CAAE0L,QAASgE,KAG9D,IAAMqU,EAAavT,EAAOuT,WACrBnX,QAAO,SAAAoX,GAAS,OAAK,CAAC,YAAa,iBAAiBpS,SAASoS,EAAUjkB,UAIvE+jB,EAAa1U,SAAW2U,EAAWjd,QAEpC4M,GAAOuQ,KAAK,iBAAkBF,GAGlCD,EAAa1U,SAAU,EAG3B,OA5IA9N,qBAAU,WAAM,4CACZ,gCAAAb,EAAA,sEAC2BC,MAAM,mBAAD,OAAoBkC,IADpD,cACU5B,EADV,gBAEuBA,EAASC,OAFhC,OAEUA,EAFV,OAIQD,EAASE,KACHsK,EAAYD,GAAetK,GACjCb,EAAS,CAAEL,KAAM,gBAAiBC,QAAS,CAAEwL,gBANrD,4CADY,uBAAC,WAAD,wBAWZyV,KACD,CAACre,IAEJtB,qBAAU,WAEN,IAAIkV,EAAW6M,aAAaa,QAAQ,gBAG/BtkB,GAAWH,IACZ+W,EAAQ,UAAM/W,EAAK2B,KAAX,YAAmB3B,EAAK4B,WAGpCjB,EAAS,CAAEL,KAAM,eAAgBC,QAAS,CAAEwW,gBAC7C,CAAC5W,IAEJ0B,qBAAU,WACFkV,IAEA9C,GAAO+C,KAAO,CAAED,YAChB9C,GAAOyQ,UACPzQ,GAAOuQ,KAAK,YAAarhB,MAG9B,CAACA,EAAI4T,IAERlV,qBAAU,WAsEN,OAhEAoS,GAAO0Q,GAAG,kBAAkB,SAACL,GAEzBD,EAAa1U,SAAU,EAEvByB,KAAOwT,mBAAmB7T,GAAQ,WAC9BuT,EAAWnD,SAAQ,SAAAoD,GACfxT,EAAOpJ,MAAM4c,YAMzBtQ,GAAO0Q,GAAG,SAAS,SAACE,GAChBlkB,EAAS,CAAEL,KAAM,YAAaC,QAAS,CAAEijB,MAAOqB,QAGpD5Q,GAAO0Q,GAAG,kBAAkB,SAACG,GACzBpY,EAAM,CACFU,YAAY,GAAD,OAAK0X,EAAQ/N,SAAb,iCACX1J,OAAQ,OACRkU,SAAU,IACV9L,SAAU,YACVlI,YAAY,IAEhB5M,EAAS,CAAEL,KAAM,WAAYC,QAAS,CAAEP,KAAM8kB,QAIlD7Q,GAAO0Q,GAAG,wBAAwB,SAAC1N,GAE/BhD,GAAOuQ,KAAK,uBAAwBvN,EAAQlL,EAAUE,YAG1DgI,GAAO0Q,GAAG,qBAAqB,YAA0B,IAAvB5N,EAAsB,EAAtBA,SAAUyM,EAAY,EAAZA,MACxC9W,EAAM,CACFU,YAAY,GAAD,OAAK2J,EAAL,+BACX1J,OAAQ,OACRkU,SAAU,IACV9L,SAAU,YACVlI,YAAY,IAEhB5M,EAAS,CAAEL,KAAM,YAAaC,QAAS,CAAEijB,cAG7CvP,GAAO0Q,GAAG,oBAAoB,SAACI,GAE3B,OAAQA,EAAIjX,SACR,IAAK,mBACDpB,EAAM,CACFU,YAAa,mCACbC,OAAQ,UACRkU,SAAU,IACV9L,SAAU,YACVlI,YAAY,IAEhB,MACJ,IAAK,eACD0G,GAAOuQ,KAAK,YAAarhB,OAO9B,WACH8Q,GAAO+Q,SACP/Q,GAAOgR,IAAI,kBACXhR,GAAOgR,IAAI,wBACXhR,GAAOgR,IAAI,SACXhR,GAAOgR,IAAI,kBACXhR,GAAOgR,IAAI,qBAEXhR,GAAOgR,IAAI,uBAEhB,CAAC9hB,EAAI4I,EAAWgF,EAAQrE,IAG3BrG,GAAkB,iCAClBgF,GAAiB,gBAAD,OAAiBU,EAAU7I,QAqBvC,cAACkR,GAAc/R,SAAf,CAAwBN,MAAOkS,GAA/B,UAES9T,GAAWH,EACN,cAAC,GAAD,CAEMwjB,QACAzX,YACApL,WACAqP,WACAe,SACAT,aACAD,gBACA6U,WAAY/hB,IAGlB,cAAC,GAAD,CAEM4T,WACAyM,QACAzX,YACAiE,WACArP,WACAoQ,SACAT,aACAD,gBACA6U,WAAY/hB,OCpPzBgiB,GAdI,WAEf,OADA9Z,GAAiB,2BAEb,eAAC,WAAD,WACI,cAAC,GAAD,IACA,eAAC,IAAD,CAAMpG,WAAW,SAASb,cAAc,SAASc,eAAe,SAAS+I,UAAU,SAASjK,OAAO,QAAnG,UAEI,cAAC,IAAD,CAAMO,SAAS,MAAf,iBACA,cAAC,IAAD,CAAMA,SAAS,MAAf,qC,mBCPVxE,GAAe,CACjB4B,KAAM,GACNC,SAAU,GACVd,MAAO,GACPC,SAAU,GACVqkB,UAAW,GACXllB,WAAOD,GA0GIolB,GAvGA,WACX,MAAmC/iB,IAA3BH,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OAAQjC,EAAvB,EAAuBA,QACjBS,EAAUC,cAChB,EAAwB2C,mBAASzD,IAAjC,mBAAOulB,EAAP,KAAaC,EAAb,KAEQ5jB,EAAsD2jB,EAAtD3jB,KAAMC,EAAgD0jB,EAAhD1jB,SAAUd,EAAsCwkB,EAAtCxkB,MAAOC,EAA+BukB,EAA/BvkB,SAAUqkB,EAAqBE,EAArBF,UAAWllB,EAAUolB,EAAVplB,MAEpD,SAASslB,EAAeC,EAAM1jB,GAC1B,IAAM2jB,EAAW,eAAQJ,GACzBI,EAAYD,GAAQ1jB,EACpBwjB,EAAQG,GAVK,4CAajB,WAA4B5f,GAA5B,eAAA9E,EAAA,yDAMI8E,EAAE+Q,iBAGEyO,EAAKvkB,WAAaukB,EAAKF,UAT/B,uBAUcM,EAVd,eAUiCJ,IACbF,UAAY,GACxBM,EAAYxlB,MAAQ,kCACpBqlB,EAAQG,GAbhB,0CAiBUtjB,EAAOkjB,EAAK3jB,KAAM2jB,EAAK1jB,SAAU0jB,EAAKxkB,MAAOwkB,EAAKvkB,UAjB5D,wBAkBUoB,EAAMmjB,EAAKxkB,MAAOwkB,EAAKvkB,UAlBjC,QAqBIH,EAAQsB,KAAK,cArBjB,6CAbiB,sBAqCjB,OACI,eAAC,IAAD,CAAM0I,EAAE,QAAQ0D,WAAW,SAASC,gBAAiB,CAAC,MAAO,kBAAmB5D,EAAE,QAAlF,UACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAO4Y,IAAI,8BACX,cAAC,IAAD,CAAMhZ,GAAG,IAAI0D,UAAU,SAAS1J,SAAS,UAAUC,WAAW,WAAW2K,MAAM,YAA/E,yEAIJ,cAAC,KAAD,CAAKxE,EAAE,KAAKsD,UAAU,SAAS1D,GAAG,KAAlC,SAII,sBAAMuZ,SAjDD,4CAiDL,SACI,eAAC,KAAD,CAAO3e,QAAQ,IAAf,UAEI,cAAC,GAAD,IAEA,eAAC,KAAD,CAAayB,YAAU,EAACnC,GAAG,IAA3B,UACI,cAAC,KAAD,yBACA,cAAC,KAAD,CAAOkhB,WAAS,EAAC5jB,MAAOJ,EAAMqO,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,OAAQ1f,EAAEoB,OAAOnF,QAAQmO,YAAY,eAGrG,eAAC,KAAD,CAAatJ,YAAU,EAAvB,UACI,cAAC,KAAD,2BACA,cAAC,KAAD,CAAO7E,MAAOH,EAAUoO,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,WAAY1f,EAAEoB,OAAOnF,QAAQmO,YAAY,kBAGnG,eAAC,KAAD,CAAatJ,YAAU,EAAvB,UACI,cAAC,KAAD,qBACA,cAAC,KAAD,CAAO7E,MAAOjB,EAAOkP,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,QAAS1f,EAAEoB,OAAOnF,QAAQmO,YAAY,0BAG7F,eAAC,KAAD,CAAatJ,YAAU,EAAvB,UACI,cAAC,KAAD,4BACA,cAAC,KAAD,CAAO7E,MAAOhB,EAAUiP,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,WAAY1f,EAAEoB,OAAOnF,QAAQzB,KAAK,gBAG5F,eAAC,KAAD,CAAasG,YAAU,EAAvB,UACI,cAAC,KAAD,wCACA,cAAC,KAAD,CAAO7E,MAAOqjB,EAAWpV,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,YAAa1f,EAAEoB,OAAOnF,QAAQzB,KAAK,gBAI1FJ,GACI,eAAC,IAAD,CAAOmN,OAAO,QAAd,UACI,cAAC,IAAD,IACCnN,KAKb,cAAC,IAAD,CAAQlB,UAAWmB,EAASG,KAAK,SAAS+E,YAAY,QAAQC,QAAQ,QAAtE,0BAIA,eAAC,IAAD,CAAM2I,UAAU,SAAhB,wDAA8D,cAAC,IAAD,CAAMkB,MAAM,QAAQyW,eAAe,YAAYlhB,GAAG,IAAIe,KAAK,SAA3D,qCCnGhF1F,GAAe,CACjBe,MAAO,GACPC,SAAU,IA0DC8kB,OAvDf,WACI,IAAMjlB,EAAUC,cAChB,EAAwB2C,mBAASzD,IAAjC,mBAAOulB,EAAP,KAAaC,EAAb,KACQzkB,EAAoBwkB,EAApBxkB,MAAOC,EAAaukB,EAAbvkB,SACf,EAAkCuB,IAA1BH,EAAR,EAAQA,MAAOhC,EAAf,EAAeA,QAASD,EAAxB,EAAwBA,MAExB,SAASslB,EAAeC,EAAM1jB,GAC1B,IAAM2jB,EAAW,eAAQJ,GACzBI,EAAYD,GAAQ1jB,EACpBwjB,EAAQG,GATC,4CAYb,WAA4B5f,GAA5B,SAAA9E,EAAA,6DACI8E,EAAE+Q,iBADN,SAEU1U,EAAMmjB,EAAKxkB,MAAOwkB,EAAKvkB,UAFjC,OAGIH,EAAQsB,KAAK,cAHjB,4CAZa,sBAkBb,OACI,cAAC,KAAD,CAAKwC,GAAG,OAAO0S,GAAG,WAAW0M,SAnBpB,4CAmB4CpZ,QAAQ,OAAOzF,WAAW,SAASC,eAAe,SAAS0F,EAAE,QAAQxG,cAAc,SAAxI,SAEI,eAAC,KAAD,CAAOe,QAAQ,IAAIiS,GAAG,QAAQ5M,OAAO,OAAOG,EAAG,CAAC,OAAQ,OAAQ,QAASM,EAAG,CAAC,IAAK,MAAlF,UACI,cAAC,GAAD,IAEA,eAAC,KAAD,CAAarE,YAAU,EAAvB,UACI,cAAC,KAAD,qBACA,cAAC,KAAD,CAAO+e,WAAS,EAAC5jB,MAAOjB,EAAOkP,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,QAAS1f,EAAEoB,OAAOnF,QAAQmO,YAAY,0BAGvG,eAAC,KAAD,CAAatJ,YAAU,EAAvB,UACI,cAAC,KAAD,4BACA,cAAC,KAAD,CAAO7E,MAAOhB,EAAUiP,SAAU,SAAAlK,GAAC,OAAI0f,EAAe,WAAY1f,EAAEoB,OAAOnF,QAAQmO,YAAY,WAAW5P,KAAK,gBAI/GJ,GACI,eAAC,IAAD,CAAOmN,OAAO,QAAd,UACI,cAAC,IAAD,IACCnN,EAAM4N,WAKnB,cAAC,IAAD,CAAQ9O,UAAWmB,EAASG,KAAK,SAAS+E,YAAY,QAAQC,QAAQ,QAAtE,+BAIA,eAAC,IAAD,CAAM2I,UAAU,SAAhB,0DAAmE,cAAC,IAAD,CAAMkB,MAAM,QAAQyW,eAAe,YAAYlhB,GAAG,IAAIe,KAAK,UAA3D,gCClD7E1F,GAAe,CACjB+lB,YAAa,CAAC,CACVxlB,KAAM,YACNG,SAAU,CAAC,CAAEsM,KAAM,mBAEvBsX,cAAc,GAGlB,SAASjkB,GAAQV,EAAOW,GAEpB,OADiBA,EAATC,MAEJ,IAAK,mBACD,IAAQwlB,EAAgBzlB,EAAOE,QAAvBulB,YACR,OAAO,2BACApmB,GADP,IAEIomB,gBAER,QACI,OAAOpmB,GAgFJqmB,OA5Ef,WAEI,MAA0BrlB,qBAAWN,GAASL,IAA9C,mBAAOL,EAAP,KAAciB,EAAd,KAEQmlB,EAAgBpmB,EAAhBomB,YAEFE,EAAeniB,kBAAO,GAEtBkN,EAAS2C,KAGTvQ,EAAKU,iBAAOmJ,KAAKiZ,MAAMC,YAE7B,EAAoCtI,KAApC,mBAAOtN,EAAP,KAAmBD,EAAnB,KA+BA,OA7BA4D,GAAOyQ,UACP7iB,qBAAU,WAoBN,OAlBAoS,GAAO0Q,GAAG,kBAAkB,YAAmC,IAA5BwB,EAA2B,EAA/BhjB,GAAcmhB,EAAiB,EAAjBA,WAIzC/X,QAAQ0F,IAAI,sBAAuB,CAAEkU,WAAU7B,eAC/C/X,QAAQ0F,IAAI,iCAAkC+T,EAAarW,SAE3DqW,EAAarW,SAAU,EAEvByB,KAAOwT,mBAAmB7T,GAAQ,WAC9BuT,EAAWnD,SAAQ,SAAAoD,GACfxT,EAAOpJ,MAAM4c,YAOlB,WACHtQ,GAAOgR,IAAI,kBACPhR,GAAOmS,WACPnS,GAAOoS,gBAGhB,IAGC,cAAC,KAAD,CACItV,SACAhP,MAAO+jB,EACP9V,SAAU,SAACC,GACP1D,QAAQ0F,IAAI,kBAAmBhC,GAC/BtP,EAAS,CAAEL,KAAM,mBAAoBC,QAAS,CAAEulB,YAAa7V,KAC7D,IAAMqU,EAAavT,EAAOuT,WACrBnX,QAAO,SAAAoX,GAAS,OAAK,CAAC,YAAa,iBAAiBpS,SAASoS,EAAUjkB,SAE5EiM,QAAQ0F,IAAI,gBAAiB+T,EAAarW,SAEtCqW,EAAarW,QACbpD,QAAQ0F,IAAI,oCAEZ1F,QAAQ0F,IAAI,kCACRqS,EAAWjd,SACXkF,QAAQ0F,IAAI,iCACZgC,GAAOuQ,KAAK,iBAAkB,CAAErhB,GAAIA,EAAGwM,QAAS2U,iBAIxD0B,EAAarW,SAAU,GArB/B,SAwBI,cAAC,KAAD,CAAKmJ,OAAO,mBAAZ,SACI,cAAC,KAAD,CAAgBzI,gBAAeC,oB,oBCpFzCgW,GAAQ,CACV7jB,GAAI,aACJC,GAAI,YACJC,GAAI,aACJC,GAAI,OACJC,GAAI,YACJ0jB,GAAI,WACJC,GAAI,cA0GFC,GAAgB,SAAAjnB,GAClB,IAAMoB,EAAUC,cAERb,EAASsC,IAATtC,KAEKiN,GAA4CzN,EAAjD4D,IAAiD5D,EAA5CyN,QAAQhB,EAAoCzM,EAApCyM,QAAoBhJ,GAAgBzD,EAA3B8D,UAA2B9D,EAAhByD,MAAMC,EAAU1D,EAAV0D,MAEzC6T,EAAQ,UAAM9J,EAAOtL,KAAb,YAAqBsL,EAAOrL,UAEpCmP,EAAS2C,GAAe,CAC1BG,SAAS,IAGb,EAAoC+J,KAApC,mBAAOtN,EAAP,KAAmBD,EAAnB,KAEA,EAAoCqW,eAA5B1gB,EAAR,EAAQA,OAAQ2gB,EAAhB,EAAgBA,OAAQhjB,EAAxB,EAAwBA,QAfG,SAmBZijB,IAnBY,2EAmB3B,gCAAA5lB,EAAA,6DAEU4L,EAAe,CACjB1J,QACAD,OACA4J,SAAS,EACTC,WAAW,EACXb,QAAS5K,KAAKC,UAAU2K,GACxB3I,UAAW,IAAI0J,KACfC,OAAQ,CACJtL,KAAM3B,EAAK2B,KACXC,SAAU5B,EAAK4B,SACfuB,GAAInD,EAAKmD,KAZrB,kBAiB+BlC,MAAM,kBAAmB,CAC5CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUsL,KAtBjC,cAiBcrL,EAjBd,gBAyB2BA,EAASC,OAzBpC,OAyBcA,EAzBd,OA2BQZ,EAAQsB,KAAR,sBAA4BV,EAAK4B,IAAjC,UA3BR,kDA6BQsZ,MAAM,uEA7Bd,2DAnB2B,sBAqD3B,OApCArW,GAAkB,iCAqCd,cAAC,KAAD,CACI0K,SACAhP,MAAOkK,EAFX,SAII,eAAC,KAAD,CAAKtB,EAAG,CAAC,OAAQ,MAAOyM,GAAG,QAAQxM,EAAG,CAAC,OAAQ,QAASsE,WAAW,sBAAsB2X,UAAU,SAAS/iB,UAAU,OAAtH,UAEI,eAAC,KAAD,CAAKsL,OAAO,UAAUqG,SAAS,WAAW7K,EAAG,CAAC,OAAQ,QAASic,UAAU,OAAzE,UACI,cAAC,KAAD,CAAK3iB,MAAM,OAAOF,OAAO,OAAOyR,SAAS,WAAWyE,IAAI,IAAI4M,KAAK,IAAI9b,OAAO,IAAInF,QAAS8gB,IACzF,cAAC,KAAD,UACI,cAAC,GAAD,CACIpW,UAAU,EACVF,gBACAC,oBAKZ,eAAC,IAAD,CAAMtF,OAAO,IAAIoM,GAAG,YAAYjI,MAAM,QAAQlK,WAAW,SAASC,eAAe,gBAAgBhB,MAAM,OAAOuR,SAAS,SAASoN,OAAO,IAAIiE,KAAK,IAAI7b,EAAE,IAAtJ,UACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAM8b,aAAW,EAACxiB,SAAS,QAA3B,SAAoCrB,IACpC,eAAC,IAAD,eAAQ,cAAC,IAAD,CAAMwB,GAAIsiB,MAAlB,IAAkCV,GAAMrjB,MACxC,eAAC,IAAD,CAAM8jB,aAAW,EAAjB,cAAmB,cAAC,IAAD,CAAMriB,GAAIuiB,MAA7B,IAA4ClQ,QAEhD,cAAC,IAAD,CAASxR,UAAQ,EAACC,MAAM,mBAAxB,SACI,eAAC,IAAD,CAAQK,QAAS+gB,EAAqBM,UAAU,aAAa5hB,QAAQ,UAAUD,YAAY,QAA3F,cAAoG,cAAC,IAAD,CAAMX,GAAIyiB,MAA9G,YAIR,eAAC,IAAD,CAAanhB,SAAQrC,UAAWyB,KAAK,MAArC,UACI,cAAC,IAAD,IACA,eAAC,IAAD,CAAcgS,GAAG,WAAjB,UACI,cAAC,IAAD,IACA,cAAC,IAAD,UAAclU,IACd,eAAC,IAAD,CAAWuS,SAAS,WAApB,UACI,cAAC,KAAD,CAAKvR,MAAM,OAAOF,OAAO,OAAOyR,SAAS,WAAWyE,IAAI,IAAI4M,KAAK,IAAI9b,OAAO,MAE5E,eAAC,IAAD,CAAMoc,GAAG,IAAT,cAAc,cAAC,IAAD,CAAM1iB,GAAIuiB,MAAxB,IAAuClQ,KAEvC,cAAC,KAAD,CAAKK,GAAG,QAAQtT,UAAU,OAA1B,SAEI,cAAC,GAAD,CAEQyM,UAAU,EACVF,gBACAC,oBAMhB,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQhL,QAAQ,QAAQO,QAASlC,EAAjC,oBACA,cAAC,IAAD,CAAQkC,QAAS+gB,EAAqB1E,UAAW,cAAC,IAAD,CAAMxd,GAAIyiB,MAAa9hB,YAAY,QAApF,+CAUjBgiB,GA3NI,WAEf,MAAoC7jB,mBAAS,IAA7C,mBAAO8jB,EAAP,KAAmBC,EAAnB,KACA,EAA8B/jB,oBAAS,GAAvC,mBAAOrD,EAAP,KAAgBqnB,EAAhB,KACA,EAA0BhkB,wBAASvD,GAAnC,mBAAOC,EAAP,KAAcunB,EAAd,KAGA,EAAgCjkB,wBAASvD,GAAzC,mBAAOynB,EAAP,KAAiBC,EAAjB,KACA,EAAgCnkB,mBAAS,IAAzC,mBAAOokB,EAAP,KAAiBC,EAAjB,KARqB,SAWNC,IAXM,2EAWrB,kCAAA9mB,EAAA,sEAEQwmB,GAAW,GACLpb,EAAS,GAEXsb,IAAUtb,EAAOsb,SAAWA,GAC1BE,EAASzR,SAAQ/J,EAAOwb,SAAWA,GANjD,SAQ+B3mB,MAAM,0BAAD,OAA0D,IAA/B+F,OAAOgB,KAAKoE,GAAQ/E,QAAgB8E,GAAkBC,KARrH,cAQc7K,EARd,iBAS2BA,EAASC,OATpC,QAScA,EATd,OAWc8lB,EAAa3b,GAAgBnK,GACnC+lB,EAAcD,GAZtB,kDAcQG,EAAS,EAAD,IAdhB,yBAgBQD,GAAW,GAhBnB,8EAXqB,sBAmCrB,OAJA3lB,qBAAU,WACNimB,MACD,CAACJ,IAEAxnB,EAAc,cAAC,KAAD,oBAId,eAAC,WAAD,WAEI,eAAC,IAAD,CAAMkX,GAAG,QAAQlT,MAAM,OAAO+G,EAAE,IAAhC,UAEI,cAAC,IAAD,CAAMvG,GAAG,IAAIe,KAAK,IAAlB,SACI,cAAC,IAAD,CAAMkF,EAAG,GAAIC,EAAG,GAAIlG,GAAImG,GAAMpG,GAAG,QAGrC,eAAC,KAAD,CAAYP,MAAM,MAAMO,GAAG,IAA3B,UACI,cAAC,KAAD,CAAgBoB,QAASiiB,EAAzB,SACI,cAAC,IAAD,CAAMpjB,GAAIiJ,QAEd,cAAC,KAAD,CACI5L,MAAO6lB,EACPG,UAAW,SAACjiB,GAAD,MAAiB,UAAVA,EAAEyB,KAAmBugB,KACvC9X,SAAU,SAAC4G,GAAD,OAAWiR,EAAYjR,EAAM1P,OAAOnF,QAC9CmO,YAAY,6CAKpB,eAAC,IAAD,WACI,cAAC,IAAD,CAAS3K,UAAQ,EAACC,MAAM,qBAAxB,SACI,cAAC,IAAD,CAAYd,GAAIoG,IAAQ8C,SAAU,cAAC,IAAD,CAAMlJ,GAAIsiB,MAAgB9E,UAAW,cAAC,IAAD,CAAMxd,GAAIsjB,MAAjF,SACKN,EAAWpB,GAAMoB,GAAY,yBAGtC,eAAC,IAAD,CAAU1c,OAAO,WAAjB,UACI,cAAC,IAAD,CAAUnF,QAAS,kBAAM8hB,EAAY,OAArC,uBACA,cAAC,IAAD,CAAU9hB,QAAS,kBAAM8hB,EAAY,OAArC,wBACA,cAAC,IAAD,CAAU9hB,QAAS,kBAAM8hB,EAAY,OAArC,wBACA,cAAC,IAAD,CAAU9hB,QAAS,kBAAM8hB,EAAY,OAArC,kBACA,cAAC,IAAD,CAAU9hB,QAAS,kBAAM8hB,EAAY,OAArC,oBACA,cAAC,IAAD,CAAU9hB,QAAS,kBAAM8hB,EAAY,OAArC,sBACA,cAAC,IAAD,CAAU9hB,QAAS,kBAAM8hB,EAAY,OAArC,iCAMZ,eAAC,IAAD,CAAMzZ,GAAG,OAAO3D,GAAI,CAAC,OAAQrG,MAAM,eAAeqK,gBAAiB,CAAC,MAAO,kBAAmBF,IAAK,EAAGpD,EAAE,IAAxG,WAGS9K,GAAWmnB,EAAWzb,KAAI,SAACoc,GAAD,OACvB,cAAC,GAAD,eAAsCA,GAAlBA,EAAS7kB,SAKhCjD,GAAiC,IAAtBmnB,EAAWjgB,QACnB,cAAC,KAAD,yDC7ET6gB,OAzBf,WACE,OACE,cAAC,IAAD,CAAgBrqB,MAAOA,EAAvB,SACE,qBAAKyL,UAAU,MAAf,SACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6H,KAAK,cAActS,UAAWwoB,KACrC,cAAC,IAAD,CAAOlW,KAAK,QAAQtS,UAAWknB,KAC/B,cAAC,IAAD,CAAOoC,OAAK,EAAChX,KAAK,IAAItS,UAAWukB,KACjC,cAAC,EAAD,CAAcjS,KAAK,aAAarS,WAAW,SAASD,UAAW4N,KAC/D,cAAC,IAAD,CAAO0E,KAAK,SAAStS,UAAWgnB,KAChC,cAAC,IAAD,CAAO1U,KAAK,UAAUtS,UAAWwmB,KACjC,cAAC,EAAD,CAAclU,KAAK,uBAAuB7Q,KAAK,OAAOxB,WAAW,SAASD,UAAW+hB,KACrF,cAAC,IAAD,CAAOzP,KAAK,2BAA2BtS,UAAWulB,KAClD,cAAC,IAAD,CAAOjT,KAAK,IAAItS,UAAWsmB,iBCnB1BiD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAStpB,OACP,cAAC,IAAMupB,WAAP,UACE,cAAC,GAAD,MAEFviB,SAASwiB,eAAe,SAM1BX,O","file":"static/js/main.ce7bfa5d.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\"\r\n\r\nconst theme = extendTheme({\r\n    colors: {\r\n        brand: {\r\n            50: \"#eaeaff\",\r\n            100: \"#c2c2f3\",\r\n            200: \"#9b9ae6\",\r\n            300: \"#7371da\",\r\n            400: \"#4c48cf\",\r\n            500: \"#332fb6\",\r\n            600: \"#27258e\",\r\n            700: \"#1b1a66\",\r\n            800: \"#0f1040\",\r\n            900: \"#06041a\",\r\n        }\r\n    }\r\n})\r\n\r\nexport default theme;","import Cookies from 'js-cookie';\r\nimport React from 'react';\r\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, redirectTo, isLoading, loggedIn, ...rest }) => {\r\n    const location = useLocation();\r\n    const token = Cookies.get(\"token\");\r\n    return (\r\n        <Route {...rest}\r\n            render={(props) =>\r\n                !!token\r\n                    ? <Component {...props} />\r\n                    : <Redirect to={redirectTo}\r\n                        state={\r\n                            { from: location.pathname }\r\n                        }\r\n                    />\r\n            }\r\n        />\r\n    )\r\n\r\n}\r\nexport default PrivateRoute\r\n","import { createContext, useContext, useEffect, useReducer } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Cookies from \"js-cookie\"\r\n\r\nconst UserContext = createContext();\r\n\r\nconst initialValue = {\r\n    user: undefined,\r\n    error: undefined,\r\n    loading: true\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'logout':\r\n            return {\r\n                ...state,\r\n                user: undefined\r\n            }\r\n        case 'loading':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: undefined,\r\n            }\r\n        case 'success':\r\n            const { user } = action.payload;\r\n            return {\r\n                ...state,\r\n                user,\r\n                loading: false\r\n            }\r\n        case 'error':\r\n            const { error } = action.payload;\r\n            return {\r\n                ...state,\r\n                user: undefined,\r\n                loading: false,\r\n                error\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const UserProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialValue);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        async function getUserInfo() {\r\n            dispatch({ type: \"loading\" });\r\n            const token = Cookies.get(\"token\");\r\n            if (!token) {\r\n                dispatch({ type: \"success\", payload: { user: undefined } });\r\n                return\r\n            }\r\n            try {\r\n                const response = await fetch(\"/api/users/userInfo\");\r\n                const json = await response.json();\r\n                dispatch({ type: 'success', payload: { user: json } });\r\n            } catch (error) {\r\n                dispatch({ type: 'error', payload: { error } });\r\n            }\r\n        }\r\n\r\n        getUserInfo();\r\n\r\n    }, [])\r\n\r\n    function logout() {\r\n        Cookies.remove(\"token\");\r\n        dispatch({ type: \"logout\" });\r\n        history.push(\"/\")\r\n    }\r\n\r\n    async function login(email, password) {\r\n        dispatch({ type: \"loading\" });\r\n        //Login User \r\n        const response = await fetch(\"/api/users/login\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        if (response.ok) {\r\n            //save token in a cookie\r\n            Cookies.set(\"token\", json.token);\r\n\r\n            delete json.token;\r\n            dispatch({ type: 'success', payload: { user: json } });\r\n            return json;\r\n        }\r\n        dispatch({ type: 'error', payload: { error: json } });\r\n        return undefined;\r\n    }\r\n\r\n    async function signUp(name, lastName, email, password) {\r\n        dispatch({ type: \"loading\" });\r\n        //Create User Record\r\n        const response = await fetch(\"/api/users\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                lastName,\r\n                email,\r\n                password\r\n            })\r\n        })\r\n        const json = await response.json();\r\n        if (response.ok) {\r\n            dispatch({ type: \"success\", payload: { user: {} } });\r\n            return;\r\n        }\r\n        dispatch({ type: \"error\", payload: { error: json } });\r\n    }\r\n\r\n    const value = {\r\n        logout,\r\n        login,\r\n        signUp,\r\n        ...state\r\n    }\r\n\r\n    return (\r\n        <UserContext.Provider value={value}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useUser() {\r\n    return useContext(UserContext);\r\n}","import React, { Fragment, useState, useRef } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport { Text, Icon, ButtonGroup, IconButton, Button, Spacer, Flex, Tooltip, AlertDialog, AlertDialogBody, AlertDialogOverlay, AlertDialogContent, AlertDialogHeader, AlertDialogFooter } from \"@chakra-ui/react\"\r\n\r\nimport { FaChalkboardTeacher } from \"react-icons/fa\";\r\nimport { MdDelete, MdPublic } from \"react-icons/md\";\r\nimport { RiFileEditFill } from \"react-icons/ri\";\r\nimport { RiGitRepositoryPrivateFill } from \"react-icons/ri\";\r\nimport { SiGoogletranslate } from \"react-icons/si\";\r\n\r\n\r\nconst LANGUAGES = {\r\n    es: \"Español\",\r\n    en: \"Inglés\",\r\n    fr: \"Francés\",\r\n    ru: \"Ruso\",\r\n    de: \"Alemán\",\r\n    ja: \"Japonés\",\r\n    zh: \"Chino\"\r\n}\r\n\r\nfunction WorksheetCard({ lang, title, _id: id, createdAt, deleteSheet, isPublic }) {\r\n    const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n    const onClose = () => setIsAlertOpen(false);\r\n    const cancelRef = useRef();\r\n    return (\r\n        <Fragment>\r\n\r\n            <Flex boxShadow=\"base\" background=\"white\" height=\"40\" borderRadius=\"xl\" width=\"full\">\r\n                <Flex padding=\"5\" flexDirection=\"column\">\r\n                    <Text title={title === \"\" ? \"Sin título\" : title} noOfLines={2} fontFamily=\"sans-serif\" fontSize=\"large\" fontWeight=\"semibold\">{title === \"\" ? \"Sin título\" : title}</Text>\r\n                    <Spacer />\r\n\r\n                    {LANGUAGES[lang] && <Text >\r\n                        <Icon mr=\"2\" as={SiGoogletranslate} />\r\n                        {LANGUAGES[lang]}\r\n                    </Text>}\r\n\r\n                    <Text noOfLines={1} title={`Actividad ${isPublic ? \"Pública\" : \"Privada\"}`}>\r\n                        <Icon mr=\"2\" as={isPublic ? MdPublic : RiGitRepositoryPrivateFill} />\r\n                        Actividad {isPublic ? \"Pública\" : \"Privada\"}\r\n                    </Text>\r\n\r\n\r\n                </Flex>\r\n                <Spacer />\r\n                <Flex pr=\"5\" py=\"5\">\r\n                    <ButtonGroup as={Flex} flexDirection=\"column\" alignItems=\"center\" justifyContent=\"space-evenly\" spacing=\"0\" size=\"lg\" colorScheme=\"brand\" variant=\"ghost\">\r\n\r\n                        <Tooltip hasArrow label=\"Comenzar Actividad\" >\r\n                            <IconButton as=\"a\" href={`/worksheets/${id}/practice`} icon={<Icon as={FaChalkboardTeacher} />} />\r\n                        </Tooltip>\r\n\r\n                        <Tooltip hasArrow label=\"Editar Actividad\">\r\n                            <IconButton as=\"a\" href={`/worksheets/${id}/edit`} icon={<Icon as={RiFileEditFill} />} />\r\n                        </Tooltip>\r\n\r\n                        <Tooltip hasArrow label=\"Eliminar Actividad\">\r\n                            <IconButton onClick={e => setIsAlertOpen(true)} icon={<Icon as={MdDelete} />} />\r\n                        </Tooltip>\r\n                    </ButtonGroup>\r\n                </Flex>\r\n            </Flex >\r\n\r\n            <AlertDialog\r\n                isOpen={isAlertOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            Eliminar Actividad\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            ¿Estás seguro de querer borrar esta actividad? Esta acción es irreversible.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button ref={cancelRef} onClick={onClose}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button colorScheme=\"red\" onClick={e => deleteSheet(id)} ml={3}>\r\n                                Eliminar\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nWorksheetCard.defaultProps = {\r\n    lang: \"\",\r\n    isPublic: true,\r\n}\r\n\r\nWorksheetCard.propTypes = {\r\n    lang: PropTypes.oneOf([\"en\", \"fr\", \"de\", \"ja\", \"es\", \"zh\", \"ru\", \"\"]).isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired,\r\n    isPublic: PropTypes.bool.isRequired,\r\n    createdAt: PropTypes.string.isRequired,\r\n    deleteSheet: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default WorksheetCard\r\n\r\n\r\n","import { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useBodyBackground = (backgroundColor) => {\r\n    //Set the color value to the body background on mount \r\n\r\n    useEffect(() => {\r\n        document.body.style.background = backgroundColor;\r\n    }, [backgroundColor]);\r\n}\r\n\r\n\r\n\r\n\r\nuseBodyBackground.propTypes = {\r\n    backgroundColor: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default useBodyBackground\r\n","var _g, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 70,\n    height: 78,\n    viewBox: \"0 0 70 78\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.7126 21.9061L55.7683 3.7113L29.024 0.0596367C25.5601 -0.413512 22.3645 1.97751 21.8856 5.39973L14.2604 59.911C13.7815 63.3332 16.2016 66.4903 19.6655 66.9635L56.4828 71.9905C59.9467 72.4636 63.1423 70.0726 63.6212 66.6504L69.8733 21.9541L69.7126 21.9061Z\",\n    fill: \"#605EC5\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M69.8201 21.991L53.7102 19.7918L55.9559 3.73657L69.8201 21.991Z\",\n    fill: \"#8987DE\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M57.2476 29.9889L30.5532 26.3441L30.0225 30.138L56.7169 33.7828L57.2476 29.9889Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M55.9146 39.52L29.2202 35.8752L28.6895 39.6692L55.3839 43.3139L55.9146 39.52Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.8744 45.4979L27.4214 48.7365L50.65 51.908L51.103 48.6695L27.8744 45.4979Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.6339 26.3764L33.2997 10.2388H6.3008C2.80408 10.2388 -0.0300293 13.0394 -0.0300293 16.4934V71.5224C-0.0300293 74.9771 2.80474 77.777 6.3008 77.777H43.4684C46.9651 77.777 49.7992 74.9764 49.7992 71.5224V26.4016L49.6339 26.3764Z\",\n    fill: \"#252388\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M49.752 26.4463H33.4893V10.2388L49.752 26.4463Z\",\n    fill: \"#4846AE\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.4054 36.0681H11.4578V39.8981H38.4054V36.0681Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M38.4054 45.6899H11.4578V49.5198H38.4054V45.6899Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.9068 55.4049H11.4578V58.6742H34.9068V55.4049Z\",\n    fill: \"white\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 70,\n    height: 77.7778,\n    fill: \"white\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.ec93b273.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMissingWord(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_2\",\n    \"data-name\": \"Capa 2\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 42 16\",\n    stroke: \"currentColor\",\n    fill: \"currentColor\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.14,13.06c-.39,0-.74-.5-1-1.51a19.28,19.28,0,0,1-.42-2c-.43.06-1,.17-1.71.32l-1.69.35c-.22.56-.58,1.38-1.1,2.45a.61.61,0,0,1-.55.36.7.7,0,0,1-.46-.19.61.61,0,0,1-.2-.46A11.73,11.73,0,0,1,10,10a.7.7,0,0,1-.1-.38c0-.35.2-.57.62-.67.49-.91,1.1-2,1.84-3.14,1-1.61,1.64-2.42,1.89-2.42s.56.23.69.7l.4,2.15.95,4.44.36,1a2.39,2.39,0,0,1,.19.69.63.63,0,0,1-.2.46A.64.64,0,0,1,16.14,13.06Zm-2.26-7.3-1.82,3q.76-.21,2.34-.48Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M23.38,12.61a10.06,10.06,0,0,1-3.67.57.71.71,0,0,1-.52-.26.77.77,0,0,1-.25-.54V10.53q0-.91.12-2.61c.08-1.22.13-2.1.14-2.64s0-1,.07-1.75a.57.57,0,0,1,.21-.43,7,7,0,0,1,2-.26,3.58,3.58,0,0,1,2.16.76A2.65,2.65,0,0,1,24.8,5.78a3.05,3.05,0,0,1-1.27,2.59,4.4,4.4,0,0,1,1.43.9,1.57,1.57,0,0,1,.48,1.09,2,2,0,0,1-.84,1.49A4.11,4.11,0,0,1,23.38,12.61ZM22.17,9.25l-.68-.1H21a4.84,4.84,0,0,1-.74-.05c0,.53,0,1,0,1.43v1.33a8.26,8.26,0,0,0,2.73-.48,2.71,2.71,0,0,0,.86-.53c.26-.22.39-.39.39-.5s-.28-.43-.82-.68A7.17,7.17,0,0,0,22.17,9.25Zm-.72-5.11a7.5,7.5,0,0,0-1,0V5.3l-.13,2.47c.61.05.93.08,1,.07a2.67,2.67,0,0,0,1.58-.6,1.83,1.83,0,0,0,.66-1.46,1.45,1.45,0,0,0-.67-1.12A2.27,2.27,0,0,0,21.45,4.14Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"cls-1\",\n    d: \"M33,5.7a.67.67,0,0,1-.62-.48,1.11,1.11,0,0,0-.33-.49,1.76,1.76,0,0,0-.66-.07c-.62,0-1.31.47-2.06,1.41a5.9,5.9,0,0,0-1.53,3.61,2,2,0,0,0,.53,1.42,1.68,1.68,0,0,0,1.31.61A2.85,2.85,0,0,0,31,11.37a8.66,8.66,0,0,0,1.14-.75,1.09,1.09,0,0,1,.54-.27.57.57,0,0,1,.46.21.65.65,0,0,1,.19.46.68.68,0,0,1-.24.51A5.19,5.19,0,0,1,29.66,13a2.92,2.92,0,0,1-2.24-1,3.37,3.37,0,0,1-.88-2.33,7.19,7.19,0,0,1,1.81-4.44,4.12,4.12,0,0,1,3.06-1.89,4.86,4.86,0,0,1,.56,0,1.9,1.9,0,0,1,.44.09A.67.67,0,0,1,33,3.14c.29,0,.48.2.56.58A7.52,7.52,0,0,1,33.65,5a.78.78,0,0,1-.14.46A.56.56,0,0,1,33,5.7Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M39.8,0H2.2a2,2,0,0,0-2,2V14a2,2,0,0,0,2,2H39.8a2,2,0,0,0,2-2V2A2,2,0,0,0,39.8,0Zm-.65,14.26H2.86A.91.91,0,0,1,2,13.35V2.7a1,1,0,0,1,1-1h36a1,1,0,0,1,1.13,1.07V3a.68.68,0,0,1,0,.12h0v10.2A.9.9,0,0,1,39.15,14.26Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMissingWord);\nexport default __webpack_public_path__ + \"static/media/missingWord.646310c6.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _rect2, _rect3, _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgWordOrder(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 12,\n    y: 6,\n    width: 4,\n    height: 4,\n    rx: 0.5,\n    fill: \"#4846AE\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6,\n    y: 6,\n    width: 4,\n    height: 4,\n    rx: 0.5,\n    fill: \"#4846AE\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    y: 6,\n    width: 4,\n    height: 4,\n    rx: 0.5,\n    fill: \"#4846AE\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.5218 11.5161C12.0215 12.0161 11.5219 12.5161 10.9268 12.8914C10.0216 13.5162 8 13.5 6.99997 13.5C5.98032 13.4885 4.99928 13.0089 3.99992 12.5\",\n    stroke: \"#616161\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.32786 13.9956C4.10086 13.6319 4.02894 13.2646 3.80915 12.8979C3.72803 12.7626 3.64479 12.6383 3.57362 12.5089C3.41056 12.2124 3.5 12 3.78875 12.0797C3.2496 12.0797 4.5 11.9506 5.07287 11.9506C5.44509 11.9511 6 11.9075 6.13559 11.9075\",\n    stroke: \"#616161\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgWordOrder);\nexport default __webpack_public_path__ + \"static/media/wordOrder.45c8be8b.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Flex, Spacer, Box, Icon, Menu, MenuList, MenuButton, Button, useMediaQuery, IconButton, Text, MenuItem, MenuDivider } from \"@chakra-ui/react\"\r\nimport { FaUserCircle } from \"react-icons/fa\"\r\nimport { HiMenuAlt4 } from \"react-icons/hi\";\r\nimport { FiLogOut } from \"react-icons/fi\"\r\nimport { Logo } from \"../svgs/index\";\r\n\r\nimport { useUser } from \"../context/UserContext\";\r\n\r\nfunction Navbar({ leftActions, rightActions, withIcon, sm }) {\r\n    const [isTabletOrLower] = useMediaQuery([\"(max-width:900px)\"]);\r\n    const { logout, user, loading } = useUser();\r\n\r\n    return (\r\n        <Flex px=\"10\" background=\"white\" py=\"4\" shadow=\"sm\" alignItems=\"center\"\r\n            sx={{\r\n                \"@media print\": {\r\n                    display: \"none\",\r\n                }\r\n            }}\r\n        >\r\n            <Button as=\"a\" href=\"/\" variant=\"unstyled\">\r\n                <Icon w={10} h={10} as={Logo} />\r\n            </Button>\r\n\r\n            {\r\n                isTabletOrLower\r\n                    ? (\r\n                        <Fragment>\r\n                            <Spacer />\r\n                            <Menu>\r\n                                <MenuButton colorScheme=\"brand\" variant=\"ghost\" as={Button} children={<Icon as={HiMenuAlt4} />} />\r\n                                <MenuList zIndex=\"dropdown\">\r\n                                    {\r\n                                        !loading && (\r\n                                            <Fragment>\r\n                                                <Text p=\"4\" fontSize=\"x-large\" fontWeight=\"medium\">\r\n                                                    {`${user.name} ${user.lastName}`}\r\n                                                </Text>\r\n                                                <MenuItem onClick={logout} icon={<Icon as={FiLogOut} />} >\r\n                                                    Cerrar Sesión\r\n                                                </MenuItem>\r\n                                            </Fragment>\r\n                                        )\r\n                                    }\r\n\r\n                                    {!!sm && <MenuDivider />}\r\n                                    {sm}\r\n                                </MenuList>\r\n                            </Menu>\r\n                        </Fragment>\r\n                    )\r\n                    : (\r\n                        <Fragment>\r\n                            {leftActions}\r\n                            <Spacer />\r\n                            {rightActions}\r\n\r\n                            {user && <Box>\r\n                                <Menu>\r\n                                    <MenuButton variant=\"ghost\" colorScheme=\"brand\" as={IconButton} icon={<Icon w={8} h={8} as={FaUserCircle} />} />\r\n\r\n                                    <MenuList>\r\n                                        <Box p=\"5\">\r\n                                            <Text fontSize=\"x-large\" fontWeight=\"medium\">\r\n                                                {`${user.name} ${user.lastName}`}\r\n                                            </Text>\r\n                                        </Box>\r\n                                        <MenuItem onClick={logout} icon={<Icon as={FiLogOut} />} >\r\n                                            Cerrar Sesión\r\n                                        </MenuItem>\r\n                                    </MenuList>\r\n\r\n                                </Menu>\r\n\r\n                            </Box>\r\n                            }\r\n\r\n                        </Fragment>\r\n                    )\r\n            }\r\n\r\n        </Flex>\r\n    )\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    withIcon: true\r\n}\r\n\r\nNavbar.propTypes = {\r\n    sm: PropTypes.node,\r\n    leftActions: PropTypes.node,\r\n    rightActions: PropTypes.node,\r\n    withIcon: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default Navbar\r\n","import { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useDocumentTitle = title => {\r\n    useEffect(() => {\r\n        document.title = title\r\n    }, [title]);\r\n}\r\n\r\nuseDocumentTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default useDocumentTitle\r\n","export function isFullscreen() {\r\n    return (\r\n        document.fullscreen ||\r\n        document.mozFullScreen ||\r\n        document.webkitIsFullScreen ||\r\n        document.msFullscreenElement);\r\n};\r\n\r\nexport function parseWorksheets(worksheets) {\r\n    return worksheets.map(parseWorksheet);\r\n}\r\n\r\nexport function stringifyWorkshet(worksheet) {\r\n    const updatedWorksheet = { ...worksheet };\r\n    updatedWorksheet.content = JSON.stringify(worksheet.content);\r\n    return updatedWorksheet;\r\n}\r\n\r\nexport function parseWorksheet(worksheet) {\r\n    const updatedWorksheet = { ...worksheet };\r\n    updatedWorksheet.content = JSON.parse(worksheet.content);\r\n    return updatedWorksheet;\r\n}\r\n\r\nexport function createQueryString(params) {\r\n    if (Object.keys(params).length === 0) return \"\";\r\n    return Object.keys(params)\r\n        .map(key => {\r\n            const value = params[key];\r\n            if (!!value) {\r\n                return `${key}=${params[key]}`;\r\n            }\r\n            return \"\"\r\n        })\r\n        .join(\"&\");\r\n}","import React, { useEffect, Fragment, useReducer } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { Grid, Container, Text, Flex, Icon, Button, Skeleton, Alert, AlertDescription, AlertIcon, Progress, useToast, MenuItem } from \"@chakra-ui/react\"\r\n\r\nimport WorksheetCard from \"../components/WorksheetCard\";\r\n\r\nimport { HiDocumentAdd } from \"react-icons/hi\";\r\nimport useBodyBackground from '../hooks/useBodyBackground';\r\nimport Navbar from '../components/Navbar';\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport { parseWorksheets } from '../utils';\r\nimport { useUser } from '../context/UserContext';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\n// const examples = [\r\n//     {\r\n//         \"id\": \"67e10aff-5431-4c51-8639-06768ebdf48f\",\r\n//         \"title\": \"Frases Mexicanas\",\r\n//         \"content\": \"[{\\\"type\\\":\\\"heading 2xl\\\",\\\"children\\\":[{\\\"text\\\":\\\"Instrucciones : \\\"},{\\\"text\\\":\\\"Rellena \\\",\\\"bold\\\":true},{\\\"text\\\":\\\"los \\\"},{\\\"text\\\":\\\"espacios \\\",\\\"italic\\\":true},{\\\"text\\\":\\\"vacíos como corresponda usando las palabras a continuación\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"subtitle\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"heading xl\\\",\\\"children\\\":[{\\\"text\\\":\\\"Toluca , nieto ,tortas, pelos, taco, corrió.\\\",\\\"bold\\\":true,\\\"italic\\\":true}],\\\"textAlign\\\":\\\"center\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"exercise-block\\\",\\\"exerciseType\\\":\\\"missing-word\\\",\\\"children\\\":[{\\\"type\\\":\\\"exercise-list-items\\\",\\\"children\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"1. De lengua me hecho un \\\"},{\\\"text\\\":\\\"taco\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" .\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"2. ¿Qué Pachuca por \\\"},{\\\"text\\\":\\\"Toluca\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" ?\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"3. Mejor aquí \\\"},{\\\"text\\\":\\\"corrió\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" que aquí quedó… \\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"4. Abuelita soy tu \\\"},{\\\"text\\\":\\\"nieto\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" !\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"5. Hablar sin \\\"},{\\\"text\\\":\\\"pelos\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" en la lengua.\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}],\\\"textAlign\\\":\\\"left\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"6. Me quedé como el perro de las dos \\\"},{\\\"text\\\":\\\"tortas\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" .\\\"}]}]}]},{\\\"type\\\":\\\"paragraph\\\",\\\"textAlign\\\":\\\"left\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]}]\",\r\n//         \"createdAt\": \"2021-04-24T01:50:11.979Z\",\r\n//         \"lang\": \"es\",\r\n//         \"isPublic\": false\r\n//     },\r\n//     {\r\n//         \"id\": \"1ee461c0-6a59-4092-9832-c2181cb5c402\",\r\n//         \"title\": \"El presente de Indicativo\",\r\n//         \"content\": \"[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"El Presente de Indicativo\\\",\\\"bold\\\":true},{\\\"text\\\":\\\", en español indica que la acción expresada por el verbo se da en el mismo momento en el que se habla. El presente de indicativo es uno de  los tiempos verbales más utilizados y versátiles del español. Por esta misma razón puede ser utilizado en muchos contextos diferentes. \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Este tiempo verbal no tiene por qué estar ligado únicamente al presente (ahora) sino que puede estar desligado del tiempo o referirse al pasado o al futuro.  \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Es un tiempo verbal muy versátil que nos sirve tanto para hablar del presente (\\\"},{\\\"text\\\":\\\"“¿Dónde vives?”\\\",\\\"italic\\\":true},{\\\"text\\\":\\\"), como del futuro (\\\"},{\\\"text\\\":\\\"“Este verano voy a Sicilia”\\\",\\\"italic\\\":true},{\\\"text\\\":\\\"), del pasado (\\\"},{\\\"text\\\":\\\"“Cervantes publica la primera parte del Quijote en 1605”\\\",\\\"italic\\\":true},{\\\"text\\\":\\\") y de verdades inmutables (\\\"},{\\\"text\\\":\\\"“Dos y dos son cuatro”/ “Lo que no mata, engorda” / “El aceite flota en el agua\\\",\\\"italic\\\":true},{\\\"text\\\":\\\"”).\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Además, usamos el presente para hablar de:\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Cualidades de las cosas\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Es una casa antigua y tiene un patio grande\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ese libro vale 20 euros\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Situaciones regulares\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Pedro normalmente 8 horas al día\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Juan vive en Motril y trabaja en Granada\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Situaciones momentáneas\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Mi novio esta semana está en Madrid\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Hoy no puedo trabajar\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"–    Cosas que no cambian\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Los gatos comen ratones\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"En verano hace calor\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"El presente del indicativo también se usa para describir:\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"    \\\"},{\\\"text\\\":\\\"* Acciones habituales\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"bold\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Cuando una acción se repite en el presente, el pasado y el futuro, normalmente se emplea el presente del indicativo  para describirla.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplo:    \\\"},{\\\"text\\\":\\\" Siempre leo en voz alta.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"* Acciones futuras\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"A veces se describen acciones del futuro empleando el presente para darles más énfasis, color y vida.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplos:    \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"La fiesta empieza a las nueve.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"La semana que viene hay un eclipse del sol.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Si abres la boca, ¡estás muerto!\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"* El futuro perifrástico\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Se forma el futuro perifrástico con el verbo ir o venir conjugado en el presente.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplos:     \\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Vamos a ir con ellos mañana.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Mi padre viene el mes próximo.\\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"text\\\":\\\"* Acciones del pasado\\\",\\\"bold\\\":true},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Acciones reportadas en los periódicos, revistas, etc., a menudo emplean el presente para hacerlas más vivas.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Ejemplos:   \\\"},{\\\"text\\\":\\\" \\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"El robo tiene lugar el 18 de febrero de 1868. \\\",\\\"italic\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Tres hombres enmascarados entran en el banco, sacan sus pistolas y piden a los empleados que estén tranquilos.\\\",\\\"italic\\\":true}]}]\",\r\n//         \"createdAt\": \"2021-04-24T02:42:29.794Z\",\r\n//         \"lang\": \"es\",\r\n//         \"isPublic\": true\r\n//     },\r\n//     {\r\n//         \"id\": \"b9e5b43d-63ae-4879-8f40-7280d8432a74\",\r\n//         \"title\": \"Vocabulary B1-B2: Health\",\r\n//         \"content\": \"[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"Complete the sentences using the words below.\\\",\\\"bold\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\",\\\"bold\\\":true}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"x-ray, medicine, ambulance, dentist, nurse, bandage\\\",\\\"italic\\\":true}],\\\"textAlign\\\":\\\"center\\\"},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"exercise-block\\\",\\\"exerciseType\\\":\\\"missing-word\\\",\\\"children\\\":[{\\\"type\\\":\\\"exercise-list-items\\\",\\\"children\\\":[{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"A \\\"},{\\\"text\\\":\\\"nurse\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" helps a doctor. They can also help patients who don't have a serious condition.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\" \\\"},{\\\"text\\\":\\\" Medicine\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" makes us feel better or helps us get better. It comes in many forms.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"We can put a \\\"},{\\\"text\\\":\\\"bandage\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" around an injury or body part that hurts.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\" An \\\"},{\\\"text\\\":\\\"X-ray\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" is a picture of our bones.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"An \\\"},{\\\"text\\\":\\\"ambulance\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" takes people to the hospital quickly.\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"A \\\"},{\\\"text\\\":\\\"dentist\\\",\\\"missingWord\\\":true},{\\\"text\\\":\\\" checks our teeth.\\\"}]}]}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]},{\\\"type\\\":\\\"paragraph\\\",\\\"children\\\":[{\\\"text\\\":\\\"\\\"}]}]\",\r\n//         \"createdAt\": \"2021-04-24T22:18:44.365Z\",\r\n//         \"lang\": \"en\",\r\n//         \"isPublic\": true\r\n//     }\r\n// ]\r\n\r\nconst initialState = {\r\n    error: undefined,\r\n    loading: true,\r\n    worksheets: undefined,\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'call-api':\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case 'api-call-ended':\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case 'update-worksheets':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                worksheets: action.payload.worksheets\r\n            }\r\n\r\n        case 'api-error':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            console.warn(\"The action type given did not match any posible action\", action)\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const history = useHistory();\r\n    const toast = useToast();\r\n\r\n    const { user } = useUser();\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const { error, loading, worksheets } = state;\r\n\r\n    useEffect(() => {\r\n\r\n        async function getWorksheets() {\r\n            dispatch({ type: 'call-api' });\r\n\r\n            const response = await fetch(\"/api/activities\");\r\n            const json = await response.json();\r\n\r\n            if (response.ok) {\r\n                dispatch({ type: 'update-worksheets', payload: { worksheets: parseWorksheets(json) } });\r\n                return;\r\n            }\r\n            dispatch({ type: 'api-error', payload: { error: json } })\r\n\r\n        }\r\n\r\n        getWorksheets()\r\n\r\n    }, [])\r\n\r\n    async function handleCreateWorksheet() {\r\n\r\n        dispatch({ type: 'call-api' });\r\n\r\n        const newWorksheet = {\r\n            title: \"Actividad sin título\",\r\n            lang: \"es\",\r\n            private: false,\r\n            published: false,\r\n            content: JSON.stringify([{\r\n                type: 'paragraph',\r\n                children: [{ text: '' }]\r\n            }]),\r\n            createdAt: new Date(),\r\n            author: {\r\n                name: user.name,\r\n                lastName: user.lastName,\r\n                id: user.id\r\n            }\r\n        }\r\n\r\n        const response = await fetch(\"/api/activities\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newWorksheet)\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        dispatch({ type: 'api-call-ended' });\r\n\r\n        if (response.ok) {\r\n            // console.log(json);\r\n            //Redirect to the form page with the id of the document created\r\n            history.push(`/worksheets/${json._id}/edit`);\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: 'api-error', payload: { error: json } });\r\n    }\r\n\r\n    async function handleDeleteWorksheet(id) {\r\n        dispatch({ type: 'call-api' });\r\n\r\n        const response = await fetch(`/api/activities/${id}`, {\r\n            method: \"DELETE\"\r\n        })\r\n\r\n        const json = response.json();\r\n\r\n        if (response.ok) {\r\n\r\n            const updatedWorksheets = [...worksheets].filter(worksheet => worksheet._id !== id);\r\n\r\n            dispatch({ type: 'update-worksheets', payload: { worksheets: updatedWorksheets } });\r\n\r\n            toast({\r\n                title: \"Actividad Eliminada\",\r\n                description: \"La actividad fue eliminada exitósamente\",\r\n                status: \"info\",\r\n                durarion: 5000,\r\n                isClosable: true\r\n            })\r\n            return;\r\n        }\r\n\r\n        dispatch({ type: 'api-error', payload: { error: json } });\r\n    }\r\n\r\n    const worksheetsHandler = {\r\n        createSheet: handleCreateWorksheet,\r\n        deleteSheet: handleDeleteWorksheet,\r\n    }\r\n\r\n    useBodyBackground(\"var(--chakra-colors-gray-100)\")\r\n    useDocumentTitle(`LangSheets | Mis actividades`);\r\n    return (\r\n        <Fragment>\r\n\r\n            <Navbar\r\n                sm={\r\n                    <MenuItem icon={<Icon as={FaSearch} />} href=\"/activities\" as=\"a\">Búsqueda de Actividades</MenuItem>\r\n                }\r\n                rightActions={\r\n                    <Button leftIcon={<Icon as={FaSearch} />} size=\"sm\" mr=\"4\" as=\"a\" href=\"/activities\" variant=\"outline\" colorScheme=\"brand\">Búsqueda De Actividades</Button>\r\n                }\r\n            />\r\n            {loading &&\r\n                <Progress size=\"xs\" isIndeterminate\r\n                    sx={{\r\n                        \"& > div\": {\r\n                            background: \"var(--chakra-colors-brand-300)\"\r\n                        }\r\n                    }}\r\n                />\r\n            }\r\n            {error &&\r\n                <Alert status=\"error\">\r\n                    <AlertIcon />\r\n                    <AlertDescription>{error.message}</AlertDescription>\r\n                </Alert>\r\n            }\r\n\r\n            <Container maxW=\"container.lg\" >\r\n                <Text fontSize=\"xx-large\" fontWeight=\"semibold\" my=\"5\" textAlign={[\"center\", \"left\"]}> Mis Worksheets </Text>\r\n\r\n\r\n                <Grid\r\n                    mx={{ md: \"7\", lg: \"0\" }}\r\n                    gap=\"5\"\r\n                    justifyContent=\"center\"\r\n                    placeItems=\"center\"\r\n                    templateColumns={{\r\n                        base: \"\",\r\n                        md: \"repeat(2, var(--chakra-sizes-72))\",\r\n                        lg: \"repeat(3, var(--chakra-sizes-80))\"\r\n                    }}\r\n                >\r\n                    {!!worksheets && worksheets.map(worksheet => (\r\n                        <Skeleton width=\"full\" key={worksheet._id} isLoaded={!loading} >\r\n                            <WorksheetCard\r\n                                {...{ ...worksheet, ...worksheetsHandler }}\r\n                            />\r\n                        </Skeleton>\r\n                    ))\r\n                    }\r\n                    <Flex width=\"full\" as={Button} colorScheme=\"brand\" variant=\"ghost\" background=\"white\" onClick={worksheetsHandler.createSheet} leftIcon={<Icon as={HiDocumentAdd} />} size=\"lg\" boxShadow=\"base\" height=\"40\" borderRadius=\"xl\">\r\n                        Crear Nueva actividad\r\n                    </Flex>\r\n                </Grid>\r\n\r\n            </Container>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dashboard\r\n","import Icon from '@chakra-ui/icon'\r\nimport { Box, Flex } from '@chakra-ui/layout'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React, { Fragment } from 'react'\r\nimport { FaChalkboardTeacher, FaPrint } from 'react-icons/fa'\r\nimport { Logo } from '../../svgs'\r\n\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <Flex flexDirection=\"column\" alignItems=\"center\">\r\n\r\n                <Box px=\"4\" variant=\"unstyled\" _focus={{ outline: \"none\" }} as=\"a\" href=\"/\">\r\n                    <Logo width=\"70px\" />\r\n                </Box>\r\n\r\n                <Flex mt=\"40\" flexDirection=\"column\" flexGrow=\"1\" width=\"full\">\r\n\r\n                    <Tooltip hasArrow arrowSize=\"5\" placement=\"auto-start\" label=\"Previsualizar actividad\">\r\n                        <Box\r\n                            as=\"a\" target=\"_blank\" referrerPolicy=\"no-referrer\" href={`/worksheets/${props.id}/practice`}\r\n                            sx={{\r\n                                \"&\": {\r\n                                    transition: \"all ease 300ms\",\r\n                                    color: \"white\",\r\n                                    cursor: \"pointer\",\r\n                                    textAlign: \"center\",\r\n                                    borderRadius: \"none\"\r\n                                },\r\n                                \"&:hover, &:active\": {\r\n                                    background: \"#252388\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Icon m=\"4\" w={8} h={8} as={FaChalkboardTeacher} />\r\n                        </Box>\r\n                    </Tooltip>\r\n\r\n                    <Tooltip hasArrow arrowSize=\"5\" placement=\"auto-start\" label=\"Imprimir actividad\">\r\n                        <Box\r\n                            onClick={props.handlePrint}\r\n                            sx={{\r\n                                \"&\": {\r\n                                    transition: \"all ease 300ms\",\r\n                                    color: \"white\",\r\n                                    cursor: \"pointer\",\r\n                                    textAlign: \"center\",\r\n                                    borderRadius: \"none\"\r\n                                },\r\n                                \"&:hover, &:active\": {\r\n                                    background: \"#252388\"\r\n                                }\r\n                            }}\r\n                        >\r\n                            <Icon m=\"4\" w={8} h={8} as={FaPrint} />\r\n                        </Box>\r\n                    </Tooltip>\r\n\r\n                </Flex>\r\n\r\n            </Flex>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar\r\n","import React, { useRef } from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Editable, EditablePreview, EditableInput, Box } from \"@chakra-ui/react\"\r\n\r\n\r\nfunction WorksheetTitle({ title, updateWorksheetProp, dispatch }) {\r\n    const textRef = useRef();\r\n    return (\r\n        <Box\r\n            onClick={() => textRef.current.focus()}\r\n            sx={{\r\n                \"@media print\": {\r\n                    textAlign: \"center\",\r\n                }\r\n            }}\r\n        >\r\n            <Editable\r\n                fontSize=\"x-large\"\r\n                required\r\n                id=\"title\"\r\n                value={title}\r\n                onBlur={() => updateWorksheetProp({ property: 'title' })}\r\n                onChange={newValue => dispatch({ type: 'change-worksheet-prop', payload: { property: 'title', value: newValue } })}\r\n                type=\"text\"\r\n                placeholder=\"Escribe un tílulo aquí...\"\r\n            >\r\n                <EditablePreview ref={textRef} />\r\n                <EditableInput />\r\n            </Editable>\r\n        </Box>\r\n    )\r\n}\r\n\r\nWorksheetTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    updateWorksheetProp: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default WorksheetTitle\r\n","import React from 'react'\r\nimport { Box } from '@chakra-ui/layout'\r\nimport { Editable } from \"slate-react\";\r\n\r\nconst CustomEditable = ({ decorate, renderElement, renderLeaf, readOnly, placeholder }) => (\r\n    <Box\r\n        background=\"white\"\r\n        p=\"5\"\r\n        as={Editable}\r\n        {...{\r\n            decorate,\r\n            renderElement,\r\n            renderLeaf,\r\n            readOnly,\r\n            placeholder,\r\n        }}\r\n    />\r\n)\r\n\r\nexport default CustomEditable\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Select, Box, Text } from '@chakra-ui/react';\r\n\r\nconst LanguagePicker = ({ updateWorksheetProp, dispatch, lang }) => {\r\n    return (\r\n        <Box my=\"4\">\r\n            <Text my=\"2\">Idioma</Text>\r\n            <Select\r\n                background=\"white\"\r\n                required\r\n                value={lang}\r\n                onBlur={() => updateWorksheetProp({ property: 'lang' })}\r\n                onChange={e => dispatch({ type: \"change-worksheet-prop\", payload: { property: \"lang\", value: e.target.value } })}\r\n            >\r\n                <option value=\"\"></option>\r\n                <option value=\"de\">Alemán</option>\r\n                <option value=\"es\">Español</option>\r\n                <option value=\"fr\">Francés</option>\r\n                <option value=\"en\">Inglés</option>\r\n                <option value=\"ru\">Ruso</option>\r\n                <option value=\"zh\">Chino</option>\r\n                <option value=\"ja\">Japonés</option>\r\n            </Select>\r\n        </Box>\r\n    )\r\n}\r\n\r\nLanguagePicker.defaultProps = {\r\n    lang: \"\",\r\n}\r\n\r\nLanguagePicker.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    lang: PropTypes.string.isRequired,\r\n    updateWorksheetProp: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default LanguagePicker\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box, Text } from '@chakra-ui/layout'\r\nimport { Tooltip, Switch } from '@chakra-ui/react'\r\n\r\nconst PrivateSwitch = ({ dispatch, updateWorksheetProp, isPrivate }) => {\r\n    return (\r\n        <Box my=\"4\">\r\n            <Tooltip label=\"Si la actividad es privada, no será listada en la página global de actividades. Sólo tus alumnos podrán acceder a ella.\">\r\n                <Text my=\"2\" >Actividad Privada <Switch colorScheme=\"brand\" ml=\"4\" onBlur={() => updateWorksheetProp({ property: 'private' })} onChange={(e) => dispatch({ type: \"change-worksheet-prop\", payload: { property: \"private\", value: !isPrivate } })} isChecked={isPrivate} /> </Text>\r\n            </Tooltip>\r\n        </Box>\r\n    )\r\n}\r\n\r\nPrivateSwitch.defaultProps = {\r\n    isPrivate: false\r\n}\r\n\r\nPrivateSwitch.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    isPrivate: PropTypes.bool.isRequired,\r\n    updateWorksheetProp: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default PrivateSwitch\r\n","import React from 'react'\r\nimport { Text, Icon, Flex } from \"@chakra-ui/react\"\r\nimport { Logo as BrandLogo } from \"../svgs\"\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <Flex as=\"a\" href=\"/\" alignItems=\"center\" >\r\n            <Icon w={10} h={10} as={BrandLogo} />\r\n            <Text fontSize=\"x-large\" fontWeight=\"bold\" color=\"brand.500\">Langsheets</Text>\r\n        </Flex>\r\n    )\r\n}\r\n\r\n\r\nexport default Logo\r\n","import { Editor, Transforms } from 'slate';\r\n\r\nconst withTextAlignment = (editor) => {\r\n\tconst { normalizeNode } = editor;\r\n\r\n\teditor.normalizeNode = (entry) => {\r\n\t\tconst [node, path] = entry;\r\n\t\t// make sure, every block has a standard alignment of 'left'\r\n\t\tif (Editor.isBlock(node) && !node.alignment) {\r\n\t\t\tTransforms.setNodes(editor, { textAlign: 'left' }, { at: path });\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//Default Behaviour\r\n\t\tnormalizeNode(entry);\r\n\t};\r\n\treturn editor;\r\n};\r\nexport default withTextAlignment;\r\n","import { Transforms, Node, Path } from 'slate';\r\n\r\nconst withExerciseBlock = (editor) => {\r\n    const { normalizeNode } = editor;\r\n\r\n    editor.normalizeNode = entry => {\r\n        const [node, path] = entry;\r\n        if (node.type === 'exercise-block') {\r\n\r\n            //Add a paragraph below if there's not a block below the exercise block \r\n            if (!Node.has(editor, Path.next(path))) {\r\n                return Transforms.insertNodes(editor, { type: \"paragraph\", children: [{ text: \"\" }] }, { at: Path.next(path) });\r\n            }\r\n\r\n            //Add a paragraph before if there's not a block \r\n            if (!Node.has(editor, Path.previous(path))) {\r\n                console.log(\"Paragraph inserted\");\r\n                return Transforms.insertNodes(editor, { type: \"paragraph\", children: [{ text: \"\" }] }, { at: Path.previous(path) });\r\n            }\r\n\r\n        }\r\n        normalizeNode(entry);\r\n    }\r\n    return editor;\r\n};\r\n\r\n\r\nexport default withExerciseBlock;\r\n","import { Node, Element, Transforms, Path, Editor } from 'slate';\r\n\r\nconst withMissingWordExercise = (editor) => {\r\n\r\n    const { normalizeNode } = editor;\r\n\r\n    editor.normalizeNode = entry => {\r\n        const [node, path] = entry;\r\n\r\n        //Check whethert the block is a paragraph or a paragraph-with-missing-word\r\n        if (Editor.isBlock(editor, node) && [\"paragraph\", \"paragraph-with-missing-word\"].includes(node.type)) {\r\n\r\n            let hasMissingWords = false;\r\n\r\n            //Loock for missing word items inside the paragraph\r\n            for (const [child] of Node.descendants(node)) {\r\n                if (child.missingWord) {\r\n                    hasMissingWords = true;\r\n                }\r\n            }\r\n\r\n            //Make sure the type of paragraph corresponds \r\n            //to whether or nor they have a missing word item inside of them\r\n\r\n            if (hasMissingWords) {\r\n                if (node.type !== \"paragraph-with-missing-word\") {\r\n                    return Transforms.setNodes(editor, { type: \"paragraph-with-missing-word\" }, { at: path });\r\n                };\r\n            } else {\r\n                if (node.type === \"paragraph-with-missing-word\") {\r\n                    return Transforms.setNodes(editor, { type: \"paragraph\" }, { at: path });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (Node.isNode(node) && Element.isElement(node)) {\r\n            const firstNodePath = Node.first(editor, path)[1];\r\n            const lastNodePath = Node.last(editor, path)[1];\r\n\r\n            for (const [child, childPath] of Node.children(editor, path)) {\r\n\r\n                if (child.missingWord === true) {\r\n                    // If the node is the last child, \r\n                    // insert child with an space after it\r\n                    if (Path.equals(childPath, lastNodePath)) {\r\n                        return Transforms.insertNodes(editor, { text: \" \" }, {\r\n                            at: Path.next(childPath),\r\n                            select: true,\r\n                            hanging: true\r\n                        })\r\n                    }\r\n\r\n                    // If the node is the first child, insert an empty node before\r\n                    if (Path.equals(childPath, firstNodePath)) {\r\n                        return Transforms.insertNodes(editor, { text: ' ' },\r\n                            {\r\n                                at: childPath,\r\n                                select: true,\r\n                                hanging: true\r\n                            }\r\n                        );\r\n                    }\r\n\r\n                    //If the blank space has a next sibling with no space , insert one\r\n                    if (Node.has(editor, Path.next(childPath))) {\r\n                        let { text } = Node.get(editor, Path.next(childPath));\r\n                        if (text[0] !== ' ') {\r\n                            return Transforms.insertText(editor, ' ', {\r\n                                at: { path: Path.next(childPath), offset: 0 }\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        normalizeNode(entry);\r\n    }\r\n    return editor;\r\n}\r\n\r\nexport default withMissingWordExercise;","import { Node, Transforms, Editor } from 'slate';\r\n\r\nconst withWordOrderExercise = (editor) => {\r\n\r\n    const { normalizeNode } = editor;\r\n\r\n    editor.normalizeNode = entry => {\r\n        const [node, path] = entry;\r\n\r\n        let isIntoAnExerciseBlock = false;\r\n\r\n        for (const [ancerstorNode] of Node.ancestors(editor, path)) {\r\n            if (ancerstorNode.type === \"exercise-block\") {\r\n                isIntoAnExerciseBlock = true;\r\n            }\r\n        }\r\n\r\n        //Check whether the block is a paragraph or a word-order-exercise-paragraph\r\n        if (Editor.isBlock(editor, node) && [\"paragraph\", \"word-order-exercise-paragraph\"].includes(node.type) && isIntoAnExerciseBlock) {\r\n\r\n            let hasDivisions = false;\r\n\r\n            const nodeString = Node.string(node);\r\n            const divisions = nodeString.split(\"/\");\r\n\r\n            if (divisions.length > 1) {\r\n                hasDivisions = true;\r\n            }\r\n\r\n            //Make sure the type of paragraph corresponds \r\n            //to whether or nor they have divisions inside of them\r\n\r\n            if (hasDivisions) {\r\n                if (node.type !== \"word-order-exercise-paragraph\") {\r\n                    return Transforms.setNodes(editor, { type: \"word-order-exercise-paragraph\" }, { at: path });\r\n                };\r\n            } else {\r\n                if (node.type === \"word-order-exercise-paragraph\") {\r\n                    return Transforms.setNodes(editor, { type: \"paragraph\" }, { at: path });\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        normalizeNode(entry);\r\n    }\r\n    return editor;\r\n}\r\n\r\nexport default withWordOrderExercise;","import { useMemo } from 'react'\r\nimport { createEditor } from 'slate';\r\nimport { withReact } from 'slate-react';\r\nimport { withHistory } from \"slate-history\";\r\n\r\n//slate Custom plugins\r\nimport { withMissingWordExercise, withTextAlignment, withExerciseBlock, withWordOrderExercise } from \"../components/Slate/plugins\";\r\n\r\nfunction useSlateEditor(config) {\r\n    const editor = useMemo(() => (!config?.plugins\r\n        ? withTextAlignment(\r\n            withWordOrderExercise(\r\n                withExerciseBlock(\r\n                    withMissingWordExercise(\r\n                        withHistory(\r\n                            withReact(createEditor())\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n        : withReact(createEditor()))\r\n        , [])\r\n    return editor;\r\n}\r\n\r\nexport default useSlateEditor\r\n","import { createContext } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport const socket = io({ autoConnect: false });\r\n\r\n\r\nexport const SocketContext = createContext(socket);","export function shuffleArray(array) {\r\n    if (!array.length || !array) throw new Error(\"Expected an array wit items and got\", JSON.stringify(array));\r\n\r\n    let result = [...array];\r\n    let currentIndex = result.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = result[currentIndex];\r\n        result[currentIndex] = result[randomIndex];\r\n        result[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    if (array[0] === result[0]) {\r\n        return shuffleArray(result);\r\n    }\r\n\r\n    return result;\r\n}","import { nanoid } from \"nanoid\";\r\nimport { Node } from \"slate\";\r\nimport { shuffleArray } from \"./objects\";\r\n\r\n\r\nexport function getExerciseBlockProps(editor, path) {\r\n    if (!editor || !path) throw new Error('Slate editor and path are required');\r\n    let showAnswers;\r\n    let checkExercise;\r\n    for (const [node] of Node.ancestors(editor, path)) {\r\n        if (node.type === \"exercise-block\") {\r\n            showAnswers = node.showAnswers;\r\n            checkExercise = node.checkExercise;\r\n        }\r\n    }\r\n\r\n    return {\r\n        showAnswers,\r\n        checkExercise\r\n    }\r\n}\r\n\r\n\r\n//Word order exercise functions\r\n\r\n//turns a string into an array of words\r\nexport function getDivisions(string, config) {\r\n    let words = string.split(\"/\");\r\n\r\n    let withIDs = words.map(word => ({ word, id: nanoid(), isCorrect: false }));\r\n\r\n    return config.shuffle ? shuffleArray(withIDs) : withIDs;\r\n\r\n}","import { Text } from \"@chakra-ui/layout\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst UserLabel = props => {\r\n    return (\r\n        <Text as=\"span\">\r\n            {props.message} <DotAnimation />\r\n        </Text>\r\n    )\r\n}\r\n\r\nUserLabel.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nconst DotAnimation = props => (\r\n    <Text as=\"span\" id=\"wave\" position=\"relative\">\r\n        <Text as=\"span\" className=\"dot\"></Text>\r\n        <Text as=\"span\" className=\"dot\"></Text>\r\n        <Text as=\"span\" className=\"dot\"></Text>\r\n    </Text>\r\n)\r\n\r\nexport default UserLabel;","import { FaCheck, FaTimes } from \"react-icons/fa\"\r\nimport { Icon } from \"@chakra-ui/icon\";\r\nimport { InputRightElement } from \"@chakra-ui/input\";\r\n\r\nconst Mark = ({ show, type }) => {\r\n    if (!show) return null;\r\n\r\n    return type === \"correct\"\r\n        ? <InputRightElement as=\"span\" children={<Icon as={FaCheck} color=\"green.400\" />} />\r\n        : <InputRightElement as=\"span\" children={<Icon as={FaTimes} color=\"red.400\" />} />\r\n}\r\n\r\n\r\nexport default Mark;","import { Fragment, useContext } from \"react\";\r\nimport { Transforms } from \"slate\";\r\nimport { ReactEditor, useSlate } from \"slate-react\";\r\n\r\nimport { SocketContext } from \"../../../../context/socket\";\r\n\r\nimport { getExerciseBlockProps } from \"../../../../utils/exerciseBlocks\";\r\n\r\nimport { InputGroup, Input } from \"@chakra-ui/input\";\r\nimport { Text } from \"@chakra-ui/layout\";\r\nimport { Tooltip } from \"@chakra-ui/tooltip\";\r\n\r\nimport UserLabel from \"./UserLabel\";\r\nimport Mark from \"./Mark\";\r\n\r\nfunction handleIsCorrect(userAnswer, correctAnswer) {\r\n    //remove all the spaces around the words and compare them in a non sensitive case\r\n    return userAnswer.toLowerCase().trim() === correctAnswer.toLowerCase().trim();\r\n}\r\n\r\nconst MissingWordInput = (props) => {\r\n\r\n    const socket = useContext(SocketContext);\r\n    const { text: correctAnswer, userAnswer = \"\", isCorrect = false, focused = undefined } = props.leaf;\r\n    const editor = useSlate();\r\n    const path = ReactEditor.findPath(editor, props.text);\r\n    const { showAnswers, checkExercise } = getExerciseBlockProps(editor, path)\r\n\r\n    const inputValue = showAnswers ? correctAnswer : userAnswer;\r\n\r\n    function handleOnFocus(event) {\r\n        if (focused) {\r\n            event.preventDefault();\r\n            event.target.blur();\r\n            return;\r\n        }\r\n        Transforms.setNodes(editor, {\r\n            focused: {\r\n                username: socket.auth.username,\r\n                userID: socket.id\r\n            }\r\n        }, {\r\n            at: path\r\n        })\r\n    }\r\n    function handleOnChange(e) {\r\n        const value = e.target.value;\r\n        //apply changes in at the leaf\r\n        Transforms.setNodes(editor, {\r\n            isAnswered: value.trim().length > 0,\r\n            isCorrect: handleIsCorrect(value, correctAnswer),\r\n            userAnswer: value\r\n        }, {\r\n            at: path\r\n        });\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        if (focused) {\r\n            Transforms.setNodes(editor, {\r\n                focused: undefined\r\n            }, {\r\n                at: path\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <InputGroup w=\"32\" as=\"span\" display=\"inline-block\" position=\"relative\">\r\n            {focused && socket.id !== focused.userID\r\n                ? (\r\n                    <Fragment>\r\n                        <Text as=\"span\" w=\"3\" h=\"3\" bg=\"brand.500\" position=\"absolute\" transform=\"translateY(-50%) translateX(50%)\" animation=\"pulse 2s infinite\" boxShadow=\"0 0 0 #3c37cfb7\" right=\"0\" borderRadius=\"50%\" zIndex=\"overlay\" />\r\n                        <Tooltip label={<UserLabel message={`${focused.username} esta escribiendo`} />}>\r\n                            <Input cursor=\"not-allowed\" variant=\"filled\" transition=\"all ease 300ms\" readOnly={checkExercise} value={inputValue} onFocus={handleOnFocus} onChange={handleOnChange} />\r\n                        </Tooltip>\r\n                    </Fragment>\r\n                )\r\n                : (\r\n                    <Input variant=\"filled\" readOnly={checkExercise} value={inputValue} onFocus={handleOnFocus} onBlur={handleOnBlur} onChange={handleOnChange} />\r\n                )}\r\n            <Mark {...{ type: isCorrect ? \"correct\" : \"wrong\", show: showAnswers ? false : checkExercise }} />\r\n        </InputGroup >\r\n    )\r\n\r\n}\r\n\r\nexport default MissingWordInput;","import { useMediaQuery } from \"@chakra-ui/media-query\";\r\n\r\nimport { Box } from \"@chakra-ui/layout\";\r\n\r\nconst MissingWordEditable = props => {\r\n\r\n    const [isPrinting] = useMediaQuery([\"print\"])\r\n\r\n    //If printing preview is active duplicate the content of the element using the text property of leaf \r\n    //so the missing word space in the printing view is larger\r\n    //In normal mode use the children property to render the text in the leaf\r\n    const children = isPrinting\r\n        ? props.leaf.text + props.leaf.text\r\n        : props.children;\r\n\r\n    return (\r\n        <Box as=\"span\"\r\n            color={isPrinting ? \"transparent\" : \"\"}\r\n            borderRadius=\"sm\"\r\n            px=\"1\"\r\n            background=\"brand.200\"\r\n            {...props.attributes}\r\n            sx={{\r\n                \"@media print\": {\r\n                    background: \"none\",\r\n                    borderBottom: \"solid black 1px\",\r\n                    color: \"transparent\",\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MissingWordEditable;","import { Text } from \"@chakra-ui/layout\";\r\nimport { useReadOnly } from \"slate-react\"\r\nimport MissingWordInput from \"./MissingWord/Input\";\r\nimport MissingWordEditable from \"./MissingWord/Editable\";\r\n\r\n// import { MissingWordEditable, MissingWordInput } from \"./MissingWord\";\r\nconst Leaf = (props) => {\r\n    let { leaf, children, attributes } = props\r\n    const isReadOnly = useReadOnly();\r\n    const isMissingWord = leaf.missingWord === true;\r\n\r\n    if (isMissingWord) {\r\n        //If the editor is in readOnly mode render an input to be answered by a student\r\n        if (isReadOnly) {\r\n            return <MissingWordInput {...props} />\r\n        }\r\n        return <MissingWordEditable {...props} />\r\n    }\r\n\r\n    if (leaf.division) {\r\n        children = <Text as=\"span\" fontWeight=\"black\" color=\"brand.500\">{children}</Text>\r\n    }\r\n\r\n    if (leaf.bold) {\r\n        children = <strong>{children}</strong>\r\n    }\r\n    if (leaf.italic) {\r\n        children = <em>{children}</em>\r\n    }\r\n\r\n    if (leaf.underline) {\r\n        children = <u>{children}</u>\r\n    }\r\n\r\n    if (leaf.strike) {\r\n        children = <s>{children}</s>\r\n    }\r\n\r\n    //Default text element\r\n    return (\r\n        <span {...attributes}>{children}</span>\r\n    )\r\n};\r\n\r\nexport default Leaf\r\n","import { Text } from '@chakra-ui/layout';\r\n\r\nconst DefaultElement = (props) => {\r\n    const { children, element, attributes } = props;\r\n    const { textAlign } = element;\r\n    return (\r\n        <Text textAlign={textAlign} {...attributes}>\r\n            {children}\r\n        </Text>\r\n    )\r\n}\r\n\r\n\r\nexport default DefaultElement\r\n","import React from 'react'\r\n\r\nconst MissingWordExerciseParagraph = (props) => {\r\n    const { attributes, children } = props;\r\n    return (\r\n        <div {...attributes}>{children}</div>\r\n    )\r\n}\r\n\r\nexport default MissingWordExerciseParagraph\r\n","import React, { useContext, useRef } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { ReactEditor, useReadOnly, useSlate } from 'slate-react';\r\nimport { Node, Transforms } from 'slate';\r\n\r\nimport { Flex, Text } from '@chakra-ui/layout';\r\nimport { Tooltip } from \"@chakra-ui/react\";\r\nimport UserLabel from '../Inline/MissingWord/UserLabel';\r\n\r\nimport { getDivisions, getExerciseBlockProps } from '../../../utils/exerciseBlocks';\r\nimport { SocketContext } from '../../../context/socket';\r\n\r\nconst WordOrderExerciseParagraph = (props) => {\r\n    const isReadOnly = useReadOnly();\r\n\r\n    if (isReadOnly)\r\n        return <WordOrderPractice {...props} />\r\n\r\n    return <Editable {...props} />\r\n}\r\n\r\nconst WordOrderPractice = props => {\r\n\r\n    const socket = useContext(SocketContext);\r\n\r\n    const editor = useSlate();\r\n    console.log(props);\r\n    const { element } = props;\r\n    const { focused = undefined } = element;\r\n\r\n    const path = ReactEditor.findPath(editor, element);\r\n\r\n    const { showAnswers, checkExercise } = getExerciseBlockProps(editor, path)\r\n\r\n    const textContent = Node.string(element);\r\n    //save the shuffled words in a ref to prevent them from being shuffled on each render\r\n    const userAnswersRef = useRef(getDivisions(textContent, { shuffle: true }));\r\n    const { userAnswers = userAnswersRef.current } = element;\r\n\r\n    const correctAnswers = getDivisions(textContent, { shuffle: false });\r\n\r\n    function handleOnDragEnd(result) {\r\n\r\n        if (focused) {\r\n            Transforms.setNodes(editor, { focused: undefined }, { at: path });\r\n        }\r\n\r\n        // `destination` is `undefined` if the item was dropped outside the list\r\n        // In this case, do nothing\r\n        if (!result.destination) {\r\n            return\r\n        }\r\n\r\n        const items = reorder(\r\n            userAnswers,\r\n            result.source.index,\r\n            result.destination.index\r\n        );\r\n\r\n        Transforms.setNodes(editor, { userAnswers: checkAnswers(items, correctAnswers) }, { at: path })\r\n    }\r\n\r\n    if (showAnswers) {\r\n        return (\r\n            <Flex flexWrap=\"wrap\" alignItems=\"center\" my=\"4\" p=\"4\" borderRadius=\"base\" border=\"2px var(--chakra-colors-brand-600) solid\">\r\n                {\r\n                    correctAnswers.map((word) => (\r\n                        <WordComponent key={word.id} {...{ ...word, isCorrect: true, }} />\r\n                    ))\r\n                }\r\n            </Flex>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleOnDragEnd} >\r\n            <Droppable droppableId=\"droppable\" direction=\"horizontal\">\r\n                {(provided, snapshot) => {\r\n                    if (snapshot.isDraggingOver && !focused) {\r\n                        Transforms.setNodes(editor, {\r\n                            focused: {\r\n                                username: socket.auth.username,\r\n                                userID: socket.id\r\n                            }\r\n                        }, {\r\n                            at: path\r\n                        })\r\n                    };\r\n                    return (\r\n                        focused && focused.userID !== socket.id ? (\r\n                            <Tooltip label={<UserLabel message={`${focused.username} esta contestando este ejercicio`} />}>\r\n                                <Flex position=\"relative\" flexWrap=\"wrap\" alignItems=\"center\" p=\"4\" my=\"4\" borderRadius=\"base\" border=\"2px var(--chakra-colors-brand-600) solid\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                    className={`${snapshot.isDraggingOver && 'draggingOver'}`}\r\n                                >\r\n                                    <Text as=\"span\" w=\"3\" h=\"3\" bg=\"brand.500\" position=\"absolute\" transform=\"translateY(-50%) translateX(50%)\" animation=\"pulse 2s infinite\" boxShadow=\"0 0 0 #3c37cfb7\" top=\"0\" right=\"0\" borderRadius=\"50%\" zIndex=\"overlay\" />\r\n                                    {userAnswers.map((word, index) => (\r\n                                        <DraggableWordComponent key={word.id} {...{ ...word, index, focused, checkExercise }} />\r\n                                    ))}\r\n                                    {provided.placeholder}\r\n                                </Flex>\r\n                            </Tooltip>\r\n                        ) : (\r\n                            <Flex position=\"relative\" flexWrap=\"wrap\" alignItems=\"center\" my=\"4\" p=\"4\" borderRadius=\"base\" border=\"2px var(--chakra-colors-brand-600) solid\"\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                className={`${snapshot.isDraggingOver && 'draggingOver'}`}\r\n                            >\r\n                                {userAnswers.map((word, index) => (\r\n                                    <DraggableWordComponent key={word.id} {...{ ...word, index, checkExercise }} />\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </Flex>\r\n                        )\r\n                    )\r\n                }}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    )\r\n}\r\n\r\nconst WordComponent = (props) => {\r\n    return (\r\n        <Text\r\n            m=\"1\" px=\"2\"\r\n            py=\"1\"\r\n            bg={props.isCorrect ? \"green.500\" : \"yellow.300\"}\r\n            color={props.isCorrect ? \"white\" : \"black\"}\r\n            borderRadius=\"base\"\r\n            as=\"span\"\r\n            fontWeight=\"medium\"\r\n            transition=\"all ease 300\"\r\n            cursor=\"default\"\r\n        >\r\n            {props.word}\r\n        </Text>\r\n    )\r\n}\r\n\r\nconst DraggableWordComponent = ({ id, word, index, checkExercise, focused, isCorrect }) => {\r\n\r\n    function getBg(snapshot) {\r\n\r\n        if (snapshot.isDragging) {\r\n            return \"brand.300\"\r\n        }\r\n\r\n        if (checkExercise) {\r\n            if (isCorrect)\r\n                return \"green.300\"\r\n\r\n            return \"yellow.300\"\r\n        }\r\n\r\n        return \"brand.500\"\r\n    }\r\n\r\n    function getColor() {\r\n        if (checkExercise && !isCorrect) {\r\n            return \"black\"\r\n        }\r\n        return \"white\"\r\n    }\r\n\r\n    return (\r\n        <Draggable isDragDisabled={!!focused} key={id} draggableId={id} index={index}>\r\n            {(provided, snapshot) => (\r\n                <Text\r\n                    userSelect=\"none\"\r\n                    m=\"1\"\r\n                    px=\"2\"\r\n                    py=\"1\"\r\n                    borderRadius=\"base\"\r\n                    as=\"span\"\r\n                    cursor={!!focused ? \"not-allowed\" : \"move\"}\r\n                    fontWeight=\"medium\"\r\n                    color={getColor()}\r\n                    transition=\"all ease 300\"\r\n                    bg={getBg(snapshot)}\r\n                    style={provided.draggableProps.style}\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                >\r\n                    {word}\r\n                </Text>\r\n            )}\r\n        </Draggable>\r\n    )\r\n}\r\n\r\nconst Editable = (props) => {\r\n    const { attributes, children } = props;\r\n    return (\r\n        <div {...attributes}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction checkAnswers(userAnswers, correctAnswers) {\r\n\r\n    return userAnswers.map((answer, index) => {\r\n        return {\r\n            ...answer,\r\n            isCorrect: answer.word === correctAnswers[index].word\r\n        };\r\n\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction reorder(list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n\r\n    return result;\r\n};\r\n\r\n\r\n\r\n\r\nexport default WordOrderExerciseParagraph\r\n","import { Text } from '@chakra-ui/layout'\r\nimport React from 'react'\r\n\r\nfunction Heading({ element, children, attributes }) {\r\n    const { textAlign } = element;\r\n    const fontSize = element.type.split(\" \")[1];\r\n    return (\r\n        <Text textAlign={textAlign} fontSize={fontSize} {...attributes}>{children}</Text>\r\n    )\r\n}\r\n\r\nexport default Heading\r\n\r\n","import { Editor, Transforms } from \"slate\";\r\n\r\nfunction isBlockActive(key, format, editor) {\r\n    if (!editor) return false;\r\n    //get the node in the current selection that matches the format given\r\n    const [match] = Editor.nodes(editor, {\r\n        match: n => n[key] === format,\r\n    })\r\n    return !!match\r\n}\r\n\r\nfunction toggleBlock(key, format, editor) {\r\n    const isActive = isBlockActive(key, format, editor);\r\n    Transforms.setNodes(\r\n        editor,\r\n        { [key]: isActive ? null : format },\r\n        { match: n => Editor.isBlock(editor, n) }\r\n    );\r\n}\r\n\r\nfunction isMarkActive(format, editor) {\r\n    if (!editor) return false;\r\n    //get the marks (style marks) in the current selection\r\n    const marks = Editor.marks(editor);\r\n    if (!marks) return false\r\n    return marks[format] === true;\r\n}\r\n\r\nfunction toggleMark(format, editor) {\r\n    if (!editor) return\r\n    const isActive = isMarkActive(format, editor)\r\n\r\n    if (isActive) {\r\n        return Editor.removeMark(editor, format)\r\n    }\r\n\r\n    return Editor.addMark(editor, format, true)\r\n\r\n}\r\n\r\nexport {\r\n    isBlockActive,\r\n    toggleBlock,\r\n    isMarkActive,\r\n    toggleMark\r\n}","import { Button } from '@chakra-ui/button';\r\nimport { MenuItem } from '@chakra-ui/menu';\r\nimport { Tooltip } from '@chakra-ui/tooltip';\r\nimport PropTypes from \"prop-types\";\r\nimport React from 'react'\r\nimport { useSlate } from 'slate-react';\r\n\r\nimport { toggleBlock, toggleMark, isBlockActive, isMarkActive } from \"../../utils/slate\";\r\n\r\n\r\nconst ToolbarButton = ({ format, label, type, customOnClick, variant, icon, formatKey, ...rest }) => {\r\n\r\n    const editor = useSlate();\r\n\r\n    function handleClick() {\r\n        if (typeof customOnClick === \"function\") {\r\n            //run custom click function\r\n            return customOnClick.call()\r\n        }\r\n        if (type === \"mark\") {\r\n            return toggleMark(format, editor);\r\n        }\r\n        return toggleBlock(formatKey, format, editor);\r\n    }\r\n\r\n    function isActive() {\r\n        if (type === \"mark\") {\r\n            return isMarkActive(format, editor);\r\n        };\r\n        return isBlockActive(formatKey, format, editor);\r\n    }\r\n\r\n    if (variant === \"button\") {\r\n        return (\r\n            <Tooltip hasArrow label={label} fontSize=\"md\">\r\n                <Button size=\"sm\" {...rest} color={isActive() ? 'brand.500' : '#616161'} background={isActive() ? \"brand.100\" : \"\"} variant=\"ghost\" onClick={handleClick} >\r\n                    {icon}\r\n                </Button>\r\n            </Tooltip >\r\n        )\r\n    };\r\n\r\n    return (\r\n        <MenuItem color={isActive() ? \"brand.500\" : \"\"} background={isActive() ? \"brand.100\" : \"\"} onClick={handleClick} icon={icon} >\r\n            {label}\r\n        </MenuItem>\r\n    )\r\n\r\n}\r\n\r\nToolbarButton.defaultProps = {\r\n    customOnClick: undefined,\r\n    variant: \"button\",\r\n    formatKey: \"type\"\r\n}\r\n\r\nToolbarButton.propTypes = {\r\n    customOnClick: PropTypes.func,\r\n    formatKey: PropTypes.string.isRequired,\r\n    format: PropTypes.string.isRequired,\r\n    icon: PropTypes.node,\r\n    variant: PropTypes.oneOf([\"menuListItem\", \"button\"]).isRequired,\r\n    type: PropTypes.oneOf([\"mark\", \"block\"]).isRequired,\r\n    label: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.node\r\n    ]).isRequired,\r\n}\r\nexport default ToolbarButton\r\n","import { Button, ButtonGroup } from '@chakra-ui/button';\r\nimport React, { Fragment } from 'react'\r\nimport { Transforms } from 'slate';\r\nimport { ReactEditor, useSlate } from 'slate-react';\r\n\r\nconst ScoringSection = (props) => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <ButtonsSection {...props} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst ButtonsSection = (props) => {\r\n    const editor = useSlate();\r\n\r\n    const exerciseBlockPath = ReactEditor.findPath(editor, props.element);\r\n\r\n    function handleCheckAnswers() {\r\n        Transforms.setNodes(editor, { checkExercise: true }, { at: exerciseBlockPath });\r\n    }\r\n\r\n    function handleShowAnswers() {\r\n        Transforms.setNodes(editor, { showAnswers: true }, { at: exerciseBlockPath });\r\n    }\r\n\r\n    return (\r\n        <ButtonGroup display=\"flex\" flexWrap=\"wrap\" spacing={[\"0\", \"4\"]} justifyContent=\"center\" colorScheme=\"brand\" size=\"sm\">\r\n            <Button my=\"2\" variant=\"solid\"\r\n                onClick={handleCheckAnswers}\r\n            >\r\n                Calificar respuestas\r\n            </Button>\r\n            <Button my=\"2\" variant=\"outline\"\r\n                onClick={handleShowAnswers}\r\n            >\r\n                Ver respuestas\r\n            </Button>\r\n        </ButtonGroup>\r\n    )\r\n}\r\n\r\nexport default ScoringSection\r\n","import React, { Fragment } from \"react\";\r\nimport { useReadOnly, useSelected, useFocused, useSlate } from \"slate-react\";\r\nimport { Box, Collapse, Divider, Flex, Icon, IconButton, Input, Popover, PopoverBody, PopoverCloseButton, PopoverContent, PopoverHeader, PopoverTrigger, Text } from \"@chakra-ui/react\";\r\nimport ToolbarButton from \"../ToolbarButton\";\r\nimport ScoringSection from \"../../ScoringSection\";\r\nimport { Editor, Range } from \"slate\";\r\n\r\nimport { toggleMark } from \"../../../utils/slate\";\r\nimport { shuffleArray } from \"../../../utils/objects\";\r\n\r\nimport { MissingWord as MissingWordIcon } from \"../../../svgs\";\r\nimport { IoMdHelpCircleOutline } from \"react-icons/io\";\r\n\r\nconst EXERCISES_TYPES = {\r\n    'missing-word': \"Palabras faltantes\",\r\n    'word-order': \"Ordenar oraciones\"\r\n}\r\n\r\nconst EXERCISES_HELP_TEXT = {\r\n    \"missing-word\": <Fragment>\r\n        <Text my=\"2\">\r\n            Cada oración puede contener una o múltiple palabras faltantes.\r\n        </Text>\r\n        <Text my=\"2\">\r\n            Para añadir una palabra faltante seleccione la palabra(s) y presione el boton de añadir palabra faltante. <Icon color=\"brand.500\" w=\"2.5em\" as={MissingWordIcon} />\r\n        </Text>\r\n\r\n        <Text my=\"2\">\r\n            Cada palabra faltante lucirá con un fondo de color púrpura.\r\n        </Text>\r\n\r\n        <Text my=\"2\" color=\"brand.500\" fontWeight=\"semibold\">\r\n            Ejemplo:\r\n    </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Escribiendo la siguiente oración\r\n        </em>\r\n        </Text>\r\n        <Text my=\"2\" as=\"samp\">\r\n            Si quieres cambiar el <Text px=\"2\" as=\"span\" bg=\"brand.200\" borderRadius=\"base\" >mundo</Text>, cámbiate a ti mismo.\r\n    </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Se creara el siguiente ejercicio :\r\n        </em>\r\n        </Text>\r\n        <Flex alignItems=\"center\" flexWrap=\"wrap\">\r\n            Si quieres cambiar el <Input w=\"24\" bg=\"gray.100\" />, cámbiate a ti mismo.\r\n    </Flex>\r\n\r\n    </Fragment>,\r\n    \"word-order\": <Fragment>\r\n        <Text my=\"2\">\r\n            Cada oración tiene que ser dividida usando diagonales <Text as=\"kbd\" bg=\"brand.100\">/</Text>\r\n        </Text>\r\n        <Text my=\"2\" color=\"brand.500\" fontWeight=\"semibold\">\r\n            Ejemplo:\r\n        </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Escribiendo la siguiente oración\r\n            </em>\r\n        </Text>\r\n        <Text my=\"2\" as=\"samp\">\r\n            Si quieres <Text as=\"span\" color=\"brand.500\" fontSize=\"x-large\">/</Text> cambiar <Text as=\"span\" color=\"brand.500\" fontSize=\"x-large\">/</Text>el mundo, cámbiate<Text as=\"span\" color=\"brand.500\" fontSize=\"x-large\">/</Text> a ti mismo.\r\n        </Text>\r\n        <Text my=\"2\">\r\n            <em>\r\n                Se creara el siguiente ejercicio :\r\n            </em>\r\n        </Text>\r\n        <Flex flexWrap=\"wrap\">\r\n            {\r\n                shuffleArray([\"Si quieres\", \"cambiar\", \"el mundo, cámbiate\", \"a ti mismo.\"]).map((word, index) => (\r\n                    <Text key={`${word}-${index}`} as=\"span\" borderRadius=\"base\" m=\"1\" px=\"1\" py=\"2\" color=\"white\" bg=\"brand.500\">{word}</Text>\r\n                ))\r\n            }\r\n        </Flex>\r\n    </Fragment>\r\n}\r\n\r\nfunction handleCreateMissingWord(editor, node) {\r\n    //Make sure there's text selected\r\n    if (Range.isCollapsed(editor.selection)) {\r\n        alert(\"Para crear una palabra faltante , seleciona primero la palabra\")\r\n        return\r\n    }\r\n\r\n    //Asign the property missingWord into the selected text in the editor\r\n    toggleMark(\"missingWord\", editor)\r\n}\r\n\r\nconst Tools = (props) => {\r\n    const editor = useSlate();\r\n    switch (props.exerciseType) {\r\n        case 'missing-word':\r\n            return (\r\n                <Box w=\"full\">\r\n                    <ToolbarButton m=\"2\" colorScheme=\"brand\" type=\"mark\" customOnClick={() => handleCreateMissingWord(editor)} format=\"missingWord\" label=\"Añadir Palabra faltante\" icon={<Icon width=\"2.5em\" as={MissingWordIcon} />} />\r\n                    <Divider borderBottomWidth=\"2px\" opacity=\"1\" />\r\n                </Box>\r\n            )\r\n        case 'word-order':\r\n            return null\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\n\r\nexport const ExerciseBlock = (props) => {\r\n    const editor = useSlate();\r\n    const isReadOnly = useReadOnly();\r\n\r\n    const isFocused = useFocused();\r\n    const isSelected = useSelected();\r\n\r\n    function isActive() {\r\n        if (isFocused && isSelected) {\r\n            if (editor.selection) {\r\n                if (Range.isExpanded(editor.selection)) {\r\n                    const [element] = Editor.fragment(editor, editor.selection);\r\n                    if (element.exerciseType === \"missing-word\") {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    if (isReadOnly) {\r\n        return (\r\n            <Fragment>\r\n                <Box {...props.attributes} borderBottomRadius=\"base\" py=\"4\" >\r\n                    {props.children}\r\n                </Box>\r\n                <ScoringSection {...props} />\r\n            </Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <Box borderRadius=\"5px\" border={`${isActive() ? \"var(--chakra-colors-brand-100)\" : \"transparent\"} 1px solid`} {...props.attributes} transition=\"all ease 300ms\" position=\"relative\"  >\r\n\r\n            <Collapse in={isActive()} animateOpacity contentEditable={false}>\r\n                {!isReadOnly &&\r\n                    (<Box borderTopRadius=\"base\" w={[\"full\", \"full\", \"auto\"]} bg=\"brand.400\" px=\"4\" py=\"2\" color=\"white\">\r\n                        Actividad: <b> {EXERCISES_TYPES[props.element.exerciseType]} </b>\r\n\r\n                        {\r\n                            !!EXERCISES_HELP_TEXT[props.element.exerciseType] &&\r\n                            <Popover>\r\n                                <PopoverTrigger>\r\n                                    <IconButton variant=\"ghost\" colorScheme=\"white\" icon={<Icon as={IoMdHelpCircleOutline} />} />\r\n                                </PopoverTrigger>\r\n                                <PopoverContent>\r\n                                    <PopoverCloseButton />\r\n                                    <PopoverHeader color=\"black\">Ayuda</PopoverHeader>\r\n                                    <PopoverBody color=\"black\">\r\n                                        {EXERCISES_HELP_TEXT[props.element.exerciseType]}\r\n                                    </PopoverBody>\r\n                                </PopoverContent>\r\n                            </Popover>\r\n                        }\r\n\r\n\r\n                    </Box>)\r\n                }\r\n                <Tools isActive={isActive()} exerciseType={props.element.exerciseType} />\r\n            </Collapse>\r\n            <Box borderBottomRadius=\"base\" py=\"4\" px={isActive() && \"2\"}  >\r\n                {props.children}\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n\r\nexport const ExerciseList = (props) => {\r\n    return (\r\n        <Box {...props.attributes}>\r\n            {props.children}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ExerciseBlock;","import React, { useCallback } from 'react'\r\n//Slate elements\r\nimport Leaf from \"../components/Slate/Inline/Leaf\";\r\nimport DefaultElement from \"../components/Slate/Block/DefaultElement\";\r\nimport MissingWordExerciseParagraph from \"../components/Slate/Block/MissingWordExerciseParagraph\";\r\nimport WordOrderExerciseParagraph from \"../components/Slate/Block/WordOrderExerciseParagraph\";\r\nimport Heading from \"../components/Slate/Block/Heading\";\r\nimport { ExerciseList, ExerciseBlock } from '../components/Slate/Block/ExerciseBlock';\r\n\r\n\r\nconst useSlateRender = () => {\r\n    //method to render inline leaves in the slate editor\r\n    const renderLeaf = useCallback(props => {\r\n        return <Leaf {...props} />\r\n    }, [])\r\n    //method to render block/void elements in the slate editor\r\n    const renderElement = useCallback(props => {\r\n        const type = props.element.type;\r\n\r\n        if (type?.split(\" \")[0] === \"heading\") {\r\n            return <Heading {...props} />\r\n        }\r\n        switch (type) {\r\n            case 'exercise-block':\r\n                return <ExerciseBlock {...props} />\r\n            case 'exercise-list-items':\r\n                return <ExerciseList {...props} />\r\n            case 'missing-word-exercise-paragraph':\r\n                return <MissingWordExerciseParagraph {...props} />\r\n\r\n            case 'word-order-exercise-paragraph':\r\n                return <WordOrderExerciseParagraph {...props} />\r\n\r\n            default:\r\n                return <DefaultElement {...props} />\r\n        }\r\n    }, [])\r\n    return [renderLeaf, renderElement];\r\n}\r\n\r\nexport default useSlateRender\r\n","import { useState, useEffect } from \"react\"\r\nimport { isFullscreen } from \"../utils\";\r\n\r\nexport default function useIsFullscreen() {\r\n\r\n    const initialValue = isFullscreen();\r\n\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    function handler() {\r\n        setValue(isFullscreen());\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('fullscreenchange', handler)\r\n\r\n        return () => {\r\n            document.removeEventListener('fullscreenchange', handler)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return value;\r\n}","import { Node, Transforms } from \"slate\";\r\nimport { ReactEditor } from \"slate-react\";\r\n\r\nfunction createExercise(editor, { type }) {\r\n\r\n    const newNode = {\r\n        type: 'exercise-block',\r\n        exerciseType: type,\r\n        children: [{\r\n            type: 'paragraph',\r\n            children: [{\r\n                text: ''\r\n            }]\r\n        }]\r\n    }\r\n\r\n    if (editor.selection) {\r\n        const [node] = Node.fragment(editor, editor.selection);\r\n        //Prevent the user from creating embeded exercise-block s\r\n        if (node.type === \"exercise-block\") {\r\n            alert(\"No es posible crear un ejercicio dentro de otro ejercicio, selecciona una linea de texto vacía fuera del cuadro de ejercicio\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    Transforms.insertNodes(editor, newNode, { select: true });\r\n    ReactEditor.focus(editor);\r\n\r\n}\r\n\r\nexport {\r\n    createExercise,\r\n}","import React, { Fragment } from 'react'\r\nimport { useSlate } from 'slate-react'\r\nimport useIsFullscreen from '../../hooks/useIsFullscreen'\r\n\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Menu, MenuButton, MenuGroup, MenuItem, MenuList } from '@chakra-ui/menu'\r\n\r\nimport { isFullscreen } from '../../utils'\r\nimport { createExercise } from '../Slate/commands'\r\nimport { BsFullscreen, BsFullscreenExit } from 'react-icons/bs'\r\nimport { FaFileUpload, FaPrint } from 'react-icons/fa'\r\nimport { MissingWord as MissingWordIcon, WordOrderIcon } from '../../svgs'\r\n\r\n\r\n\r\nconst ActionsMenu = (props) => {\r\n    const { handlePublishActivity, worksheet } = props;\r\n    const editor = useSlate();\r\n    const isFullscreen = useIsFullscreen();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Menu>\r\n                <MenuButton>Actividad</MenuButton>\r\n                <MenuList>\r\n                    <MenuItem onClick={handlePublishActivity} icon={<Icon as={FaFileUpload} />} >\r\n                        {worksheet?.published\r\n                            ? \"Anular Publicación\"\r\n                            : \"Publicar Actividad\"\r\n                        }\r\n                    </MenuItem>\r\n                    <MenuItem icon={<Icon as={FaPrint} />} onClick={handlePrint}>Imprimir Actividad</MenuItem>\r\n                </MenuList>\r\n            </Menu>\r\n            <Menu>\r\n                <MenuButton mx=\"4\">Insertar</MenuButton>\r\n                <MenuList>\r\n                    <MenuGroup title=\"Ejercicios\">\r\n                        <MenuItem icon={<Icon w={8} h={8} as={MissingWordIcon} />} onClick={e => createExercise(editor, { type: \"missing-word\" })}>Palabras Faltantes</MenuItem>\r\n                        <MenuItem icon={<Icon w={8} h={8} as={WordOrderIcon} />} onClick={e => createExercise(editor, { type: \"word-order\" })}>Ordenar Oraciones</MenuItem>\r\n                    </MenuGroup>\r\n                </MenuList>\r\n            </Menu>\r\n            <Menu>\r\n                <MenuButton mx=\"4\">Ver</MenuButton>\r\n                <MenuList>\r\n                    {\r\n                        isFullscreen\r\n                            ? <MenuItem icon={<Icon as={BsFullscreenExit} />} onClick={handleCloseFullscreen}>Vista normal</MenuItem>\r\n                            : <MenuItem icon={<Icon as={BsFullscreen} />} onClick={handleOpenFullscreen}>Pantalla completa</MenuItem>\r\n                    }\r\n                </MenuList>\r\n            </Menu>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nfunction handlePrint(e) {\r\n    //set print preview scale to 100%\r\n    document.body.style.zoom = \"100%\";\r\n\r\n    //Deselect the button so the tooltip disappears\r\n    e.target.blur();\r\n\r\n    //Open the native print browser dialog\r\n    //with a delay to prevent the button tooltip apearing on the printing preview \r\n    setTimeout(() => {\r\n        window.print();\r\n    }, 500)\r\n}\r\n\r\nfunction handleOpenFullscreen() {\r\n\r\n    if (isFullscreen()) return;\r\n\r\n    let screen = document.documentElement;\r\n\r\n    if (screen.requestFullscreen) {\r\n        screen.requestFullscreen();\r\n    } else if (screen.mozRequestFullScreen) { /*Firefox*/\r\n        screen.mozRequestFullScreen();\r\n    } else if (screen.webkitRequestFullscreen) { /* Safari */\r\n        screen.webkitRequestFullscreen();\r\n    } else if (screen.msRequestFullscreen) { /* IE11 */\r\n        screen.msRequestFullscreen();\r\n    }\r\n}\r\n\r\nfunction handleCloseFullscreen() {\r\n\r\n    if (!isFullscreen()) return;\r\n\r\n    if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) { /*Firefox */\r\n        document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) { /* Safari */\r\n        document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) { /* IE11 */\r\n        document.msExitFullscreen();\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ActionsMenu\r\n","import { Button } from '@chakra-ui/button'\r\nimport Icon from '@chakra-ui/icon'\r\nimport { Text } from '@chakra-ui/layout'\r\nimport { useMediaQuery } from '@chakra-ui/media-query'\r\nimport { Menu, MenuButton, MenuItem, MenuList } from '@chakra-ui/menu'\r\nimport { Tooltip } from '@chakra-ui/tooltip'\r\nimport React, { Fragment } from 'react'\r\nimport { FaAlignCenter, FaAlignJustify, FaAlignLeft, FaAlignRight, FaBold, FaHeading, FaItalic, FaStrikethrough, FaUnderline } from 'react-icons/fa'\r\nimport { HiViewGridAdd } from 'react-icons/hi'\r\nimport { useSlate } from 'slate-react'\r\nimport { MissingWord as MissingWordIcon, WordOrderIcon } from '../../svgs'\r\nimport { createExercise } from '../Slate/commands'\r\nimport ToolbarButton from '../Slate/ToolbarButton'\r\n\r\nconst DesktopToolbar = () => {\r\n\r\n    const editor = useSlate();\r\n    const [isDesktop] = useMediaQuery(\"(min-width: 1024px)\")\r\n    return (\r\n        <Fragment>\r\n\r\n            <Menu>\r\n                <MenuButton  {...isDesktop ? '' : { ...{ borderRadius: \"none\", height: \"full\" } }} flex=\"0 0 auto\" display=\"flex\" as={Button} size=\"sm\" colorScheme=\"brand\" variant=\"solid\">\r\n                    <Icon w={5} h={5} mr=\"2\" as={HiViewGridAdd} /> Insertar Ejercicio\r\n                </MenuButton>\r\n                <MenuList>\r\n                    <MenuItem icon={<Icon w={5} h={5} as={MissingWordIcon} />}\r\n                        onClick={e => createExercise(editor, { type: \"missing-word\" })}\r\n                    >Palabras faltantes</MenuItem>\r\n                    <MenuItem icon={<Icon w={5} h={5} as={WordOrderIcon} />}\r\n                        onClick={e => createExercise(editor, { type: \"word-order\" })}\r\n                    >Ordernar oraciones</MenuItem>\r\n                </MenuList>\r\n            </Menu>\r\n\r\n            <Menu>\r\n                <Tooltip hasArrow label=\"Estilos de tipografía\" fontSize=\"md\">\r\n                    <MenuButton\r\n                        as={Button}\r\n                        aria-label=\"Estilos de tipografía\"\r\n                        variant=\"ghost\"\r\n                        color=\"#616161\"\r\n                        size=\"sm\"\r\n                    >\r\n                        <Icon as={FaHeading} />\r\n                    </MenuButton>\r\n                </Tooltip>\r\n\r\n                <MenuList>\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading 4xl\" label={<Text fontSize=\"3xl\">Título 1</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading 3xl\" label={<Text fontSize=\"2xl\">Título 2</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading 2xl\" label={<Text fontSize=\"xl\">Subtítulo 1</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"heading xl\" label={<Text fontSize=\"lg\">Subtítulo 2</Text>} />\r\n                    <ToolbarButton variant=\"menuListItem\" type=\"block\" format=\"\" label={<Text fontSize=\"md\">Texto normal</Text>} />\r\n                </MenuList>\r\n            </Menu>\r\n\r\n            <ToolbarButton type=\"mark\" format=\"bold\" label=\"Negrita\" icon={<Icon as={FaBold} />} />\r\n            <ToolbarButton type=\"mark\" format=\"italic\" label=\"Cursiva\" icon={<Icon as={FaItalic} />} />\r\n            <ToolbarButton type=\"mark\" format=\"underline\" label=\"Subrayado\" icon={<Icon as={FaUnderline} />} />\r\n            <ToolbarButton type=\"mark\" format=\"strike\" label=\"Tachado\" icon={<Icon as={FaStrikethrough} />} />\r\n\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"left\" label=\"Alinear a la izquierda\" icon={<Icon as={FaAlignLeft} />} />\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"center\" label=\"Alinear al centro\" icon={<Icon as={FaAlignCenter} />} />\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"right\" label=\"Alinear a la derecha\" icon={<Icon as={FaAlignRight} />} />\r\n            <ToolbarButton type=\"block\" formatKey=\"textAlign\" format=\"justify\" label=\"Justificar\" icon={<Icon as={FaAlignJustify} />} />\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DesktopToolbar\r\n","// @refresh reset\r\nimport React, { useEffect, Fragment, useReducer } from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { Slate } from \"slate-react\"\r\n\r\nimport Navbar from \"../components/Form/Navbar\";\r\nimport WorksheetTitle from \"../components/Form/WorksheetTitle\";\r\n\r\nimport { Box, Spinner, Tooltip, Icon, IconButton, ButtonGroup, Text, Grid, GridItem, MenuItem, Flex, Menu, MenuButton, Button, MenuList, Divider, Switch, MenuGroup, useMediaQuery, Slide, MenuDivider, useToast, Skeleton, Progress, Popover, PopoverTrigger, PopoverContent } from \"@chakra-ui/react\";\r\n\r\nimport Editable from \"../components/Slate/Editable\";\r\nimport LanguagePicker from '../components/LanguagePicker';\r\nimport PrivateSwitch from \"../components/PrivateSwitch\";\r\nimport Logo from '../components/Logo';\r\n\r\nimport { FaArrowLeft, FaFileUpload, FaChalkboardTeacher, FaPrint, FaHome, FaChevronUp, FaCheckCircle } from \"react-icons/fa\";\r\nimport { HiDotsVertical } from 'react-icons/hi';\r\nimport { BsFullscreenExit, BsFullscreen } from \"react-icons/bs\";\r\nimport { MdKeyboardHide } from \"react-icons/md\";\r\n\r\nimport useSlateEditor from '../hooks/useSlateEditor';\r\nimport useSlateRender from '../hooks/useSlateRender';\r\nimport useDocumentTitle from \"../hooks/useDocumentTitle\";\r\nimport useIsFullscreen from \"../hooks/useIsFullscreen\";\r\n\r\nimport { Transforms } from 'slate';\r\nimport { isFullscreen, parseWorksheet, stringifyWorkshet } from '../utils';\r\nimport useSlateDecorate from '../hooks/useSlateDecorate';\r\nimport ActionsMenu from '../components/Form/ActionsMenu';\r\nimport Toolbar from '../components/Form/Toolbar';\r\n\r\n\r\nconst ACTIONS = {\r\n    SAVING_WORKSHEET: 'saving-worksheet',\r\n    SAVING_WORKSHEET_SUCCESS: 'saving-worksheet-success',\r\n    TOGGLE_WRITTING_MODE: \"toggle-writting-mode\",\r\n    CHANGE_WORKSHEET_PROP: \"change-worksheet-prop\",\r\n    SET_WORKSHEET: \"set-worksheet\",\r\n    SUCESS: \"sucess\",\r\n    ERROR: \"error\",\r\n}\r\n\r\n\r\nfunction reducer(state, action) {\r\n\r\n    switch (action.type) {\r\n        case ACTIONS.TOGGLE_WRITTING_MODE:\r\n            return {\r\n                ...state,\r\n                isWritingMode: !state.isWritingMode\r\n            }\r\n        case ACTIONS.CHANGE_WORKSHEET_PROP: {\r\n            if (!action.payload.property) throw new Error(\"'property' is required but got undefined\");\r\n\r\n            //prevent user from updating content prop when being in preview mode\r\n            if (action.payload.property === \"content\" && !state.isWritingMode) {\r\n                console.log(\"Cannot update activity state in preview mode\");\r\n                return state;\r\n            }\r\n\r\n            const updatedWorksheet = { ...state.worksheet };\r\n            updatedWorksheet[action.payload.property] = action.payload.value;\r\n\r\n            return {\r\n                ...state,\r\n                worksheet: updatedWorksheet,\r\n            }\r\n        }\r\n        case ACTIONS.SAVING_WORKSHEET:\r\n            return {\r\n                ...state,\r\n                savingWorksheet: true,\r\n            }\r\n        case ACTIONS.SAVING_WORKSHEET_SUCCESS:\r\n            return {\r\n                ...state,\r\n                savingWorksheet: false\r\n            }\r\n        case ACTIONS.SET_WORKSHEET:\r\n            return {\r\n                ...state,\r\n                savingWorksheet: false,\r\n                loading: false,\r\n                worksheet: action.payload.worksheet,\r\n                error: undefined\r\n            }\r\n        case ACTIONS.ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        default:\r\n            console.warn(\"Action provided did not matched\", action);\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialValue = {\r\n    isWritingMode: true,\r\n    loading: true,\r\n    error: \"\",\r\n    worksheet: undefined,\r\n    savingWorksheet: false\r\n}\r\n\r\nfunction handleOpenFullscreen() {\r\n\r\n    if (isFullscreen()) return;\r\n\r\n    let screen = document.documentElement;\r\n\r\n    if (screen.requestFullscreen) {\r\n        screen.requestFullscreen();\r\n    } else if (screen.mozRequestFullScreen) { /*Firefox*/\r\n        screen.mozRequestFullScreen();\r\n    } else if (screen.webkitRequestFullscreen) { /* Safari */\r\n        screen.webkitRequestFullscreen();\r\n    } else if (screen.msRequestFullscreen) { /* IE11 */\r\n        screen.msRequestFullscreen();\r\n    }\r\n}\r\n\r\nfunction handleCloseFullscreen() {\r\n\r\n    if (!isFullscreen()) return;\r\n\r\n    if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) { /*Firefox */\r\n        document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) { /* Safari */\r\n        document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) { /* IE11 */\r\n        document.msExitFullscreen();\r\n    }\r\n}\r\n\r\nconst Form = () => {\r\n    const history = useHistory();\r\n    const toast = useToast();\r\n    //Get the id of the worksheet from the url \r\n    const { id } = useParams();\r\n    //Slate editor component\r\n    const editor = useSlateEditor();\r\n\r\n    //Slate editor render functions\r\n    const [renderLeaf, renderElement] = useSlateRender();\r\n    const decorate = useSlateDecorate(editor);\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue);\r\n    const { worksheet, loading, error, isWritingMode, savingWorksheet } = state;\r\n\r\n    const isFullscreen = useIsFullscreen();\r\n\r\n    useEffect(() => {\r\n        async function getWorksheet() {\r\n            const response = await fetch(`/api/activities/${id}`);\r\n            const json = await response.json();\r\n\r\n            if (response.status === 404) {\r\n                history.push(`/worksheets/404`);\r\n                return;\r\n            }\r\n\r\n            if (response.ok) {\r\n                dispatch({ type: ACTIONS.SET_WORKSHEET, payload: { worksheet: parseWorksheet(json) } })\r\n                return;\r\n            }\r\n\r\n            toast({\r\n                description: json.message,\r\n                status: 'error',\r\n                isClosable: true\r\n            })\r\n\r\n            // dispatch({ type: ACTIONS.ERROR, payload: { error: json } });\r\n\r\n        }\r\n\r\n        getWorksheet();\r\n\r\n    }, [id, toast, history]);\r\n\r\n    async function handlePublishActivity() {\r\n        dispatch({ type: ACTIONS.SAVING_WORKSHEET });\r\n\r\n        try {\r\n            const response = await fetch(`/api/activities/${id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    property: \"published\",\r\n                    value: !state.worksheet.published,\r\n                })\r\n            })\r\n            const json = await response.json();\r\n            dispatch({ type: ACTIONS.SAVING_WORKSHEET_SUCCESS });\r\n\r\n            dispatch({ type: ACTIONS.CHANGE_WORKSHEET_PROP, payload: { property: \"published\", value: json.published } })\r\n\r\n            toast({\r\n                position: isDesktop ? 'top-right' : 'bottom',\r\n                title: json.published\r\n                    ? \"La actividad fue publicada exitósamente\"\r\n                    : \"La publicación de la actividad fue anulada exitósamente\",\r\n                status: \"success\",\r\n                duration: 5000,\r\n                isClosable: true\r\n            })\r\n        } catch (error) {\r\n            // console.log(error);\r\n            toast({\r\n                position: isDesktop ? 'top-right' : 'bottom',\r\n                title: \"Error al guardar los cambios\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true\r\n            })\r\n        }\r\n    }\r\n\r\n    async function updateWorksheetProp({ property }) {\r\n        dispatch({ type: ACTIONS.SAVING_WORKSHEET });\r\n        let body = { property, value: state.worksheet[property], author: state.worksheet.author };\r\n\r\n        if (property === \"content\") {\r\n            body[\"value\"] = JSON.stringify(state.worksheet[property]);\r\n        }\r\n\r\n        // console.log(`Updating ${property}: ${body.value}`);\r\n\r\n        try {\r\n            const response = await fetch(`/api/activities/${id}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n            const json = await response.json();\r\n            //Implement logic to update props\r\n            console.log(json);\r\n            dispatch({ type: ACTIONS.SAVING_WORKSHEET_SUCCESS });\r\n\r\n        } catch (error) {\r\n\r\n            toast({\r\n                position: isDesktop ? 'top-right' : 'bottom',\r\n                title: \"Error al guardar los cambios\",\r\n                status: \"error\",\r\n                duration: 5000,\r\n                isClosable: true\r\n            })\r\n        }\r\n    }\r\n\r\n    function handlePrint(e) {\r\n        //set print preview scale to 100%\r\n        document.body.style.zoom = \"100%\";\r\n\r\n        //Deselect the button so the tooltip disappears\r\n        e.target.blur();\r\n\r\n        //Open the native print browser dialog\r\n        //with a delay to prevent the button tooltip apearing on the printing preview \r\n        setTimeout(() => {\r\n            window.print();\r\n        }, 500)\r\n    }\r\n\r\n    const title = !!state?.worksheet?.title\r\n        ? `LangSheets | ${state?.worksheet?.title}`\r\n        : \"LangSheets\";\r\n    useDocumentTitle(title);\r\n\r\n    const host = window.location.host;\r\n\r\n    const [isDesktop] = useMediaQuery(\"(min-width: 1024px)\")\r\n\r\n\r\n    function handleHideKeyboard() {\r\n        Transforms.deselect(editor);\r\n    }\r\n    return (\r\n        <Slate\r\n            {...{\r\n                editor,\r\n                value: loading\r\n                    ? [{ children: [{ text: 'Cargando...' }] }]\r\n                    : error\r\n                        ? [{ children: [{ text: '' }] }]\r\n                        : worksheet.content,\r\n                onChange: newContent => dispatch({ type: ACTIONS.CHANGE_WORKSHEET_PROP, payload: { property: 'content', value: newContent } }),\r\n            }}\r\n        >\r\n            {isDesktop\r\n                ? (\r\n\r\n                    <Grid h=\"100vh\" templateColumns=\"repeat(12, 1fr)\" templateRows=\"auto 1fr\">\r\n\r\n                        <GridItem rowSpan={2} colSpan={1} bg=\"#05043E\" py=\"10\" position=\"sticky\" top=\"0\" zIndex=\"docked\" sx={{\r\n                            \"@media print\": {\r\n                                display: \"none\",\r\n                            }\r\n                        }}>\r\n                            <Navbar {...{ handlePrint, id }} />\r\n                        </GridItem>\r\n\r\n\r\n                        <GridItem rowSpan={1} colSpan={11} sx={{\r\n                            \"@media print\": {\r\n                                display: \"none\",\r\n                            }\r\n                        }} >\r\n                            {loading &&\r\n                                <Progress size=\"sm\" isIndeterminate\r\n                                    sx={{\r\n                                        \"& > div\": {\r\n                                            background: \"var(--chakra-colors-brand-300)\"\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            }\r\n\r\n                            <Grid gridTemplateRows=\"auto auto auto\" gridTemplateColumns=\"50px 1fr auto\" h=\"full\" bg=\"white\">\r\n\r\n                                <GridItem rowSpan=\"1\" colSpan=\"1\" display=\"grid\" placeItems=\"center\" >\r\n                                    <Flex as=\"a\" href=\"/dashboard\" mx=\"4\">\r\n                                        <Icon as={FaArrowLeft} />\r\n                                    </Flex>\r\n                                </GridItem>\r\n\r\n                                <GridItem rowSpan=\"1\" display=\"flex\" flexDirection=\"row\" alignItems=\"center\" pt=\"2\">\r\n                                    <Skeleton isLoaded={!loading} >\r\n                                        <WorksheetTitle {...{ updateWorksheetProp, dispatch, title: worksheet ? worksheet.title : \"\" }} />\r\n                                    </Skeleton>\r\n                                    {\r\n                                        !loading &&\r\n                                        <Button ml=\"5\" variant=\"ghost\" size=\"sm\" rightIcon={savingWorksheet ? <Spinner /> : <Icon color=\"green.500\" as={FaCheckCircle} />}>{savingWorksheet ? \"Guardando Actividad\" : \"Cambios guardados\"}</Button>\r\n                                    }\r\n                                </GridItem>\r\n\r\n                                <GridItem display=\"flex\" alignItems=\"center\" px=\"4\" colStart={3} rowSpan={2}>\r\n                                    <ButtonGroup>\r\n                                        <Tooltip title=\"Al hacer una actividad pública tus alumnos podrán acceder a la actividad\">\r\n                                            <Button onClick={handlePublishActivity} colorScheme=\"brand\">\r\n                                                <Icon as={FaFileUpload} mr=\"2\" />\r\n                                                {worksheet?.published\r\n                                                    ? \"Anular Publicación\"\r\n                                                    : \"Publicar Actividad\"\r\n                                                }\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </ButtonGroup>\r\n                                </GridItem>\r\n\r\n                                <GridItem py=\"2\" colStart={2} rowSpan=\"1\" display=\"inline-flex\" alignItems=\"center\">\r\n                                    <ActionsMenu {...{ handlePublishActivity, worksheet }} />\r\n                                </GridItem>\r\n                                <GridItem py=\"2\" px=\"5\" colSpan={3} width=\"full\" borderTop=\"2px solid var(--chakra-colors-gray-100)\">\r\n                                    <ButtonGroup as={Flex} alignItems=\"center\">\r\n                                        <Toolbar />\r\n                                    </ButtonGroup>\r\n                                </GridItem>\r\n                            </Grid>\r\n\r\n                        </GridItem>\r\n\r\n\r\n                        <GridItem rowSpan={1} colSpan={8} p=\"12\" bg=\"gray.100\"\r\n                            sx={{\r\n                                \"@media print\": {\r\n                                    gridColumn: \"span 12/span 12\",\r\n                                    gridRow: \"span 2/span 2\"\r\n                                }\r\n                            }}\r\n                            onBlur={() => updateWorksheetProp({ property: 'content' })}\r\n                        >\r\n                            <Skeleton isLoaded={!loading}>\r\n                                <Editable\r\n                                    {...{\r\n                                        decorate,\r\n                                        renderElement,\r\n                                        renderLeaf,\r\n                                        readOnly: !isWritingMode,\r\n                                        placeholder: \"Escribe aquí...\"\r\n                                    }}\r\n                                />\r\n                            </Skeleton>\r\n                        </GridItem>\r\n\r\n                        <GridItem rowSpan={1} colSpan={3}\r\n                            sx={{\r\n                                \"@media print\": {\r\n                                    display: \"none\",\r\n                                }\r\n                            }}>\r\n                            <Divider />\r\n                            <Box p=\"4\">\r\n                                <Text fontWeight=\"semibold\" fontSize=\"lg\">Detalles de la actividad</Text>\r\n                                {\r\n                                    !loading && !error &&\r\n                                    <Fragment>\r\n                                        <LanguagePicker {...{ updateWorksheetProp, dispatch, lang: worksheet.lang }} />\r\n                                        <PrivateSwitch {...{ updateWorksheetProp, dispatch, isPrivate: worksheet.private }} />\r\n                                    </Fragment>\r\n                                }\r\n                            </Box>\r\n\r\n                            <Divider />\r\n                            <Box p=\"4\">\r\n                                <Text fontWeight=\"semibold\" fontSize=\"lg\">Ajustes</Text>\r\n                                <Text my=\"2\" >\r\n                                    Modo de edición: <Switch colorScheme=\"brand\" ml=\"4\" isChecked={isWritingMode} onChange={() => dispatch({ type: \"toggle-writting-mode\" })} />\r\n                                </Text>\r\n                            </Box>\r\n\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n                )\r\n                : (\r\n                    <Flex flexDir=\"column\" minH=\"100vh\">\r\n                        {loading &&\r\n                            <Progress size=\"sm\" isIndeterminate\r\n                                sx={{\r\n                                    \"& > div\": {\r\n                                        background: \"var(--chakra-colors-brand-300)\"\r\n                                    }\r\n                                }}\r\n                            />\r\n                        }\r\n                        <Flex py=\"2\" px=\"4\" alignItems=\"center\">\r\n\r\n                            <Flex flexGrow=\"1\" alignItems=\"center\">\r\n                                <Skeleton isLoaded={!loading} >\r\n                                    <WorksheetTitle {...{ updateWorksheetProp, dispatch, title: worksheet ? worksheet.title : \"\" }} />\r\n                                </Skeleton>\r\n                                {\r\n                                    !loading &&\r\n                                    <Popover>\r\n                                        <PopoverTrigger>\r\n                                            <Button ml=\"5\" variant=\"ghost\" size=\"sm\">\r\n                                                {savingWorksheet\r\n                                                    ? <Spinner />\r\n                                                    : <Icon color=\"green.500\" as={FaCheckCircle} />\r\n                                                }\r\n                                            </Button>\r\n                                        </PopoverTrigger>\r\n                                        <PopoverContent p=\"2\" boxShadow=\"base\">\r\n                                            {\r\n                                                savingWorksheet\r\n                                                    ? \"Guardando cambios\"\r\n                                                    : \"Cambios guardados\"\r\n                                            }\r\n                                        </PopoverContent>\r\n                                    </Popover>\r\n\r\n                                }\r\n                            </Flex>\r\n\r\n                            <Menu>\r\n                                <MenuButton variant=\"ghost\" colorScheme=\"brand\" icon={<Icon as={HiDotsVertical} />} as={IconButton} />\r\n                                <MenuList>\r\n                                    <MenuGroup title=\"Actividad\">\r\n                                        <MenuItem onClick={handlePublishActivity} icon={<Icon color=\"brand.500\" as={FaFileUpload} />} >\r\n                                            {worksheet?.published\r\n                                                ? \"Anular Publicación\"\r\n                                                : \"Publicar Actividad\"\r\n                                            }\r\n                                        </MenuItem>\r\n                                    </MenuGroup>\r\n                                    <MenuDivider />\r\n                                    <MenuGroup title=\"Ver\">\r\n                                        {\r\n                                            isFullscreen\r\n                                                ? <MenuItem icon={<Icon as={BsFullscreenExit} />} onClick={handleCloseFullscreen}>Vista normal</MenuItem>\r\n                                                : <MenuItem icon={<Icon as={BsFullscreen} />} onClick={handleOpenFullscreen}>Pantalla completa</MenuItem>\r\n                                        }\r\n                                    </MenuGroup>\r\n                                </MenuList>\r\n                            </Menu>\r\n\r\n                        </Flex>\r\n                        <Divider />\r\n                        <Box flexGrow=\"1\" bg=\"gray.100\" p=\"4\" boxShadow=\"base\">\r\n                            <Skeleton height=\"full\" isLoaded={!loading}>\r\n                                <Editable\r\n                                    {...{\r\n                                        decorate,\r\n                                        renderElement,\r\n                                        renderLeaf,\r\n                                        readOnly: !isWritingMode,\r\n                                        placeholder: \"Escribe aquí...\"\r\n                                    }}\r\n                                />\r\n                            </Skeleton>\r\n                        </Box>\r\n\r\n                        {editor.selection && (\r\n                            <Slide direction=\"bottom\" in={editor.selection} style={{ zIndex: 50, boxShadow: \"var(--chakra-shadows-dark-lg)\", }}>\r\n\r\n                                <Flex pr=\"30vw\" w=\"100vw\" color=\"#616161\" bg=\"white\" alignItems=\"center\" height=\"50px\">\r\n                                    <Flex width=\"full\" height=\"full\" overflowX=\"auto\" alignItems=\"center\">\r\n                                        <Toolbar />\r\n                                    </Flex>\r\n\r\n                                    <Flex height=\"full\" position=\"fixed\" bottom=\"0\" right=\"0\" alignItems=\"center\">\r\n                                        <Divider orientation=\"vertical\" />\r\n                                        <IconButton bg=\"white\" borderRadius=\"none\" height=\"full\" onClick={handleHideKeyboard} variant=\"ghost\" colorScheme=\"brand\" icon={<Icon as={MdKeyboardHide} />} />\r\n                                        <Divider orientation=\"vertical\" />\r\n                                        <IconButton variant=\"ghost\" borderRadius=\"none\" height=\"full\" colorScheme=\"brand\" icon={<Icon as={FaChevronUp} />} />\r\n                                    </Flex>\r\n                                </Flex>\r\n\r\n                            </Slide>\r\n                        )}\r\n\r\n                        {!editor.selection && (\r\n                            <Slide direction=\"bottom\" in={!editor.selection} style={{ zIndex: 150 }}>\r\n\r\n                                <Box color=\"white\" display=\"flex\" bg=\"#05043E\" alignItems=\"center\" width=\"100%\" justifyContent=\"space-around\">\r\n                                    <Flex onClick={handlePrint} flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\" cursor=\"pointer\" aria-label=\"button\" py=\"2\" _hover={{ color: \"var(--chakra-colors-brand-300)\" }} >\r\n                                        <Icon w={6} h={6} as={FaPrint} />\r\n                                        <Text fontSize=\"x-small\">Imprimir</Text>\r\n                                    </Flex>\r\n\r\n                                    <Flex flexDir=\"column\" alignItems=\"center\" as=\"a\" href=\"/dashboard\" justifyContent=\"center\" cursor=\"pointer\" aria-label=\"button\" py=\"2\" _hover={{ color: \"var(--chakra-colors-brand-300)\" }} >\r\n                                        <Icon w={6} h={6} as={FaHome} />\r\n                                        <Text fontSize=\"x-small\">Inicio</Text>\r\n                                    </Flex>\r\n\r\n                                    <Flex flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\" cursor=\"pointer\" aria-label=\"button\" py=\"2\" _hover={{ color: \"var(--chakra-colors-brand-300)\" }}>\r\n                                        <Icon w={6} h={6} as={FaChalkboardTeacher} />\r\n                                        <Text fontSize=\"x-small\">Previsualizar</Text>\r\n                                    </Flex>\r\n                                </Box>\r\n                            </Slide>\r\n                        )}\r\n                    </Flex>\r\n                )\r\n            }\r\n\r\n\r\n            {/* <pre>\r\n        {worksheet && JSON.stringify(worksheet.content, null, 2)}\r\n    </pre> */}\r\n            <Flex display=\"none\" flexDirection=\"column\" alignItems=\"flex-start\" position=\"fixed\" zIndex=\"banner\" bottom=\"0.5\" width=\"full\"\r\n                sx={{\r\n                    \"@media print\": {\r\n                        display: \"flex\",\r\n                    }\r\n                }}\r\n            >\r\n                <Icon as={Logo} />\r\n                <Text fontSize=\"smaller\"> {host}/worksheets/{id}/practice </Text>\r\n            </Flex>\r\n        </Slate >\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Form\r\n","import { useCallback } from \"react\";\r\nimport { Node, Text } from \"slate\";\r\n\r\nexport default function useSlateDecorate(editor) {\r\n\r\n    return useCallback(([node, path]) => {\r\n        const ranges = [];\r\n\r\n        if (Text.isText(node)) {\r\n            const parent = Node.parent(editor, path);\r\n\r\n            if (parent.type === \"word-order-exercise-paragraph\") {\r\n                const { text } = node\r\n                const parts = text.split(\"/\")\r\n                let offset = 0;\r\n\r\n                parts.forEach((part, index) => {\r\n                    if (index !== 0) {\r\n                        ranges.push({\r\n                            anchor: { path, offset: offset - 1 },\r\n                            focus: { path, offset },\r\n                            division: true,\r\n                        })\r\n                    }\r\n\r\n                    offset = offset + part.length + 1;\r\n                })\r\n            }\r\n        }\r\n        return ranges\r\n    }, [editor])\r\n}","import { Button, ButtonGroup } from '@chakra-ui/button'\r\nimport { Image } from '@chakra-ui/image';\r\nimport { Box, Circle, Flex, Stack, Text, } from '@chakra-ui/layout'\r\nimport React, { Fragment } from 'react'\r\nimport Logo from \"../components/Logo\";\r\nimport { useUser } from '../context/UserContext';\r\n\r\nconst Home = () => {\r\n    const { user } = useUser();\r\n    return (\r\n        <Fragment>\r\n\r\n            <Box px=\"10\">\r\n\r\n                <Flex mx=\"auto\" justifyContent=\"space-between\" alignItems=\"center\" py=\"5\">\r\n                    <Logo />\r\n                    {user\r\n                        ? (\r\n                            <Button as=\"a\" href=\"/dashboard\" colorScheme=\"brand\" variant=\"solid\">\r\n                                Mis actividades\r\n                            </Button>\r\n                        )\r\n                        : (\r\n                            <ButtonGroup spacing=\"5\">\r\n                                <Button as=\"a\" href=\"/login\" colorScheme=\"brand\" variant=\"outline\">\r\n                                    Iniciar Sesión\r\n                                </Button>\r\n                                <Button as=\"a\" href=\"/signup\" variant=\"solid\" colorScheme=\"brand\">\r\n                                    Crear Cuenta\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        )\r\n                    }\r\n                </Flex>\r\n\r\n                <Flex flexDirection={[\"column\", \"row\"]} alignItems=\"center\" my=\"5\" >\r\n                    <Box w={\"40%\"}>\r\n                        <Text lineHeight=\"8\" textAlign={[\"center\", \"left\"]}>\r\n                            <Text as=\"span\" fontWeight=\"bold\" fontSize=\"xxx-large\">Actividades digitales</Text>{\" \"}\r\n                            <Text as=\"span\" color=\"brand.300\" fontWeight=\"bold\" fontSize=\"xxx-large\">Interactivas</Text>\r\n                        </Text>\r\n                        <Text fontSize=\"x-large\">\r\n                            para entornos virtuales de aprendizaje.\r\n                        </Text>\r\n                        {\r\n                            user\r\n                                ? (\r\n                                    <Button my=\"5\" size=\"lg\" as=\"a\" href=\"/dashboard\" colorScheme=\"brand\" variant=\"solid\">\r\n                                        Mis actividades\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button my=\"5\" size=\"lg\" as=\"a\" href=\"/signup\" variant=\"solid\" colorScheme=\"brand\">\r\n                                        Pruébalo gratis\r\n                                    </Button>\r\n                                )\r\n                        }\r\n\r\n                    </Box>\r\n                    <Image w=\"60%\" objectFit=\"cover\" src=\"/hero.svg\" />\r\n                </Flex >\r\n            </Box >\r\n\r\n            <Flex my=\"5\" p=\"10\" w=\"full\" position=\"relative\" alignItems=\"center\">\r\n                <Box mt=\"80\" mx=\"auto\" width=\"container.xl\">\r\n                    <Box w={\"40%\"}>\r\n\r\n                        <Text color=\"brand.300\" fontWeight=\"bold\" fontSize=\"xx-large\" my=\"10\">\r\n                            ¿Cómo funciona?\r\n                        </Text>\r\n\r\n                        <Stack spacing=\"5\">\r\n\r\n                            <Flex>\r\n                                <Circle fontSize=\"x-large\" fontWeight=\"bold\" size=\"50px\" bg=\"brand.300\" color=\"white\">\r\n                                    1\r\n                                </Circle>\r\n                                <Box ml=\"5\">\r\n                                    <Text fontSize=\"x-large\" fontWeight=\"bold\">Crea una actividad</Text>\r\n                                    <Text>Elige una plantilla o comienza una actividad desde cero. Inserta el contenido que necesites (imágenes, videos etc.)</Text>\r\n                                </Box>\r\n                            </Flex>\r\n\r\n                            <Flex>\r\n                                <Circle fontSize=\"x-large\" fontWeight=\"bold\" size=\"50px\" bg=\"brand.300\" color=\"white\">\r\n                                    2\r\n                                </Circle>\r\n                                <Box ml=\"5\">\r\n                                    <Text fontSize=\"x-large\" fontWeight=\"bold\">Publica tu actividad</Text>\r\n                                    <Text>Cambia el estado de tu actividad de borrador a publicado en un solo click.</Text>\r\n                                </Box>\r\n                            </Flex>\r\n\r\n                            <Flex>\r\n                                <Circle fontSize=\"x-large\" fontWeight=\"bold\" size=\"50px\" bg=\"brand.300\" color=\"white\">\r\n                                    2\r\n                                </Circle>\r\n                                <Box ml=\"5\">\r\n                                    <Text fontSize=\"x-large\" fontWeight=\"bold\">Comparte el link de tu actividad</Text>\r\n                                    <Text>\r\n                                        Por cada actividad creada un link único será generado para que los alumnos puedan realizar las actividades en tiempo real.\r\n                                    </Text>\r\n                                </Box>\r\n                            </Flex>\r\n                        </Stack>\r\n                    </Box>\r\n                    <Image position=\"absolute\" top=\"0.5\" right=\"0.5\" src=\"/figurebg.svg\" />\r\n                    <Image position=\"absolute\" right=\"425px\" top=\"310px\" title=\"Crea una actividad\" src=\"/figure1.svg\" />\r\n                    <Image position=\"absolute\" right=\"400px\" top=\"700px\" title=\"Comparte una actividad\" src=\"/figure2.svg\" />\r\n                    <Image position=\"absolute\" right=\"103px\" top=\"470px\" title=\"Publica una actividad\" src=\"/figure3.svg\" />\r\n                </Box>\r\n\r\n            </Flex>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","// @refresh reset\r\nimport React, { Fragment, useEffect, useRef, useReducer } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport { Slate, Editable } from \"slate-react\"\r\n\r\nimport { Container, Box, Text, Input, Flex, Button, useToast, Avatar, AvatarGroup } from \"@chakra-ui/react\";\r\n// import Navbar from \"../components/Navbar\";\r\n\r\n\r\nimport useBodyBackground from '../hooks/useBodyBackground';\r\nimport useSlateRender from '../hooks/useSlateRender';\r\nimport useSlateEditor from '../hooks/useSlateEditor';\r\nimport { useUser } from \"../context/UserContext\";\r\nimport useDocumentTitle from '../hooks/useDocumentTitle';\r\nimport { parseWorksheet } from '../utils';\r\n\r\nimport { SocketContext, socket } from \"../context/socket\";\r\nimport { Editor, Transforms } from 'slate';\r\n// import Logo from '../components/Logo';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\n// import { HiPhoneIncoming } from 'react-icons/hi';\r\n\r\nconst initialValue = {\r\n    users: [],\r\n    username: undefined,\r\n    worksheet: {\r\n        title: \"\",\r\n        content: [\r\n            {\r\n                type: \"paragraph\",\r\n                children: [\r\n                    {\r\n                        text: \"\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    // console.log(`> Practice reducer: ${action.type}`);\r\n    switch (action.type) {\r\n        case 'set-username':\r\n            return {\r\n                ...state,\r\n                username: action.payload.username\r\n            }\r\n        case 'set-worksheet':\r\n            return {\r\n                ...state,\r\n                worksheet: action.payload.worksheet\r\n            }\r\n        case 'set-worksheet-content':\r\n            return {\r\n                ...state,\r\n                worksheet: {\r\n                    ...state.worksheet,\r\n                    content: action.payload.content\r\n                }\r\n            }\r\n        case 'add-user':\r\n            return {\r\n                ...state,\r\n                users: [\r\n                    ...state.users,\r\n                    action.payload.user\r\n                ]\r\n            }\r\n        case 'set-users':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n        default:\r\n            console.warn(\"Action provided did not matched\", action);\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nconst Practice = () => {\r\n    //Get the id of the worksheet from the url \r\n    const { id } = useParams();\r\n    const { user, loading } = useUser();\r\n\r\n    const editor = useSlateEditor();\r\n    const [renderLeaf, renderElement] = useSlateRender();\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue);\r\n    const { username, users, worksheet } = state;\r\n\r\n    const remoteChange = useRef(false);\r\n\r\n    const toast = useToast();\r\n\r\n    useEffect(() => {\r\n        async function getWorksheet() {\r\n            const response = await fetch(`/api/activities/${id}`);\r\n            const json = await response.json();\r\n\r\n            if (response.ok) {\r\n                const worksheet = parseWorksheet(json);\r\n                dispatch({ type: 'set-worksheet', payload: { worksheet } });\r\n            }\r\n\r\n        }\r\n        getWorksheet();\r\n    }, [id])\r\n\r\n    useEffect(() => {\r\n        //Get username from localStorage (Only for students)\r\n        let username = localStorage.getItem(\"ls-username\");\r\n\r\n        //Get username from user hook (Only for Teachers)\r\n        if (!loading && user) {\r\n            username = `${user.name} ${user.lastName}`;\r\n        }\r\n\r\n        dispatch({ type: \"set-username\", payload: { username } })\r\n    }, [loading])\r\n\r\n    useEffect(() => {\r\n        if (username) {\r\n            // console.log(\"User name\", username);\r\n            socket.auth = { username };\r\n            socket.connect();\r\n            socket.emit('join-room', id);\r\n        }\r\n\r\n    }, [id, username])\r\n\r\n    useEffect(() => {\r\n\r\n        // socket.onAny((event, ...args) => {\r\n        //     console.log(event, args);\r\n        // });\r\n\r\n        socket.on('content-change', (operations) => {\r\n\r\n            remoteChange.current = true;\r\n\r\n            Editor.withoutNormalizing(editor, () => {\r\n                operations.forEach(operation => {\r\n                    editor.apply(operation);\r\n                })\r\n            })\r\n\r\n        })\r\n\r\n        socket.on('users', (commingUsers) => {\r\n            dispatch({ type: 'set-users', payload: { users: commingUsers } });\r\n        });\r\n\r\n        socket.on(\"user-connected\", (newUser) => {\r\n            toast({\r\n                description: `${newUser.username} ha ingresado a la actividad.`,\r\n                status: \"info\",\r\n                duration: 3000,\r\n                position: \"top-right\",\r\n                isClosable: true,\r\n            })\r\n            dispatch({ type: 'add-user', payload: { user: newUser } });\r\n        });\r\n\r\n        //Send the updated contend to a new user \r\n        socket.on(\"send-updated-content\", (userID) => {\r\n            // console.log(worksheet.content);\r\n            socket.emit('send-updated-content', userID, worksheet.content);\r\n        });\r\n\r\n        socket.on(\"user-disconnected\", ({ username, users }) => {\r\n            toast({\r\n                description: `${username} ha salido de la actividad.`,\r\n                status: \"info\",\r\n                duration: 3000,\r\n                position: \"top-right\",\r\n                isClosable: true,\r\n            })\r\n            dispatch({ type: 'set-users', payload: { users } });\r\n        });\r\n\r\n        socket.on('connection_error', (err) => {\r\n            // console.error(err);\r\n            switch (err.message) {\r\n                case \"invalid username\":\r\n                    toast({\r\n                        description: \"Debes elegir un nombre válido\",\r\n                        status: \"warning\",\r\n                        duration: 8000,\r\n                        position: \"top-right\",\r\n                        isClosable: true,\r\n                    })\r\n                    break;\r\n                case \"invalid room\":\r\n                    socket.emit(\"join-room\", id)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            socket.offAny();\r\n            socket.off(\"content-change\");\r\n            socket.off(\"send-updated-content\");\r\n            socket.off('users');\r\n            socket.off('user-connected');\r\n            socket.off('user-disconnected');\r\n            // socket.off('action');\r\n            socket.off('connection_error');\r\n        }\r\n    }, [id, worksheet, editor, toast])\r\n\r\n    //Set a custom background color\r\n    useBodyBackground(\"var(--chakra-colors-gray-100)\");\r\n    useDocumentTitle(`LangSheets | ${worksheet.title}`);\r\n\r\n    function onChange(newValue) {\r\n        //Update the content locally\r\n        dispatch({ type: 'set-worksheet-content', payload: { content: newValue } })\r\n\r\n        //Avoid sending certain operations to the server \r\n        const operations = editor.operations\r\n            .filter(operation => ![\"set_value\", \"set_selection\"].includes(operation.type))\r\n\r\n        //If the update was not triggered locally and it includes valid operations\r\n        //Send them to the server\r\n        if (!remoteChange.current && operations.length) {\r\n            // console.log(\"Sending changes to the server\");\r\n            socket.emit('content-change', operations);\r\n        }\r\n\r\n        remoteChange.current = false;\r\n    }\r\n\r\n    return (\r\n        <SocketContext.Provider value={socket}>\r\n            {\r\n                !loading && user\r\n                    ? <TeacherView\r\n                        {...{\r\n                            users,\r\n                            worksheet,\r\n                            dispatch,\r\n                            onChange,\r\n                            editor,\r\n                            renderLeaf,\r\n                            renderElement,\r\n                            activityID: id\r\n                        }}\r\n                    />\r\n                    : <StudentView\r\n                        {...{\r\n                            username,\r\n                            users,\r\n                            worksheet,\r\n                            onChange,\r\n                            dispatch,\r\n                            editor,\r\n                            renderLeaf,\r\n                            renderElement,\r\n                            activityID: id\r\n                        }}\r\n                    />\r\n            }\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst UserNameForm = (props) => {\r\n    const { dispatch } = props;\r\n\r\n    const toast = useToast();\r\n    const inputRef = useRef();\r\n\r\n    function handleSetUserName() {\r\n        const username = inputRef.current.value;\r\n        if (username.trim() !== \"\") {\r\n            localStorage.setItem(\"ls-username\", username);\r\n            dispatch({ type: 'set-username', payload: { username } })\r\n            return\r\n        }\r\n\r\n        toast({\r\n            description: \"Debes elegir un nombre válido\",\r\n            status: \"warning\",\r\n            duration: 8000,\r\n            position: \"top-right\",\r\n            isClosable: true,\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Flex bg=\"gray.100\" h=\"100vh\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Flex flexDir=\"column\" bg=\"white\" px=\"10\" py=\"5\" boxShadow=\"base\" borderRadius=\"base\" alignItems=\"center\" justifyContent=\"center\">\r\n                <Text fontSize=\"x-large\" my=\"4\">Ingresa tu nombre</Text>\r\n                <Input onSubmit={handleSetUserName} size=\"lg\" ref={inputRef} variant=\"filled\" my=\"4\" placeholder=\"Escribe un nombre\" />\r\n                <Button variant=\"solid\" colorScheme=\"brand\" my=\"4\" onClick={handleSetUserName}>Aceptar</Button>\r\n            </Flex>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nconst TeacherView = (props) => {\r\n    const { users, worksheet, dispatch, onChange, editor, renderLeaf, renderElement } = props;\r\n    return (\r\n        <Fragment>\r\n\r\n            <Flex py=\"2\" >\r\n                <Text flexGrow=\"1\" color=\"brand.600\" px=\"4\" fontSize=\"x-large\" fontWeight=\"bold\" >{worksheet.title}</Text>\r\n                <Flex justifyContent=\"flex-end\" alignItems=\"center\" px=\"4\">\r\n                    <UsersList users={users} />\r\n                </Flex>\r\n            </Flex>\r\n\r\n            <Box >\r\n                <Container maxWidth=\"container.lg\" my=\"4\" >\r\n                    <SocketContext.Provider value={socket}>\r\n                        <Slate\r\n                            {...{\r\n                                editor,\r\n                                value: worksheet.content,\r\n                                onChange\r\n                            }}\r\n                        >\r\n                            <Box background=\"white\" px={[\"8\", \"16\"]} py=\"16\" as={Editable} shadow=\"sm\"\r\n                                {...{ renderElement, renderLeaf, readOnly: true }}\r\n                            />\r\n                        </Slate>\r\n                    </SocketContext.Provider>\r\n                </Container>\r\n            </Box >\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst StudentView = (props) => {\r\n    const { username, users, worksheet, dispatch, onChange, editor, renderLeaf, renderElement } = props;\r\n    return (\r\n        username ? (\r\n            <Fragment>\r\n\r\n                <Flex py=\"2\" >\r\n                    <Text flexGrow=\"1\" color=\"brand.600\" px=\"4\" fontSize=\"x-large\" fontWeight=\"bold\" >{worksheet.title}</Text>\r\n                    <Flex justifyContent=\"flex-end\" alignItems=\"center\" px=\"4\">\r\n                        <UsersList users={users} />\r\n                    </Flex>\r\n                </Flex>\r\n\r\n                <Box >\r\n                    <Container maxWidth=\"container.lg\" my=\"4\" >\r\n                        <SocketContext.Provider value={socket}>\r\n                            <Slate\r\n                                {...{\r\n                                    editor,\r\n                                    value: worksheet.content,\r\n                                    onChange\r\n                                }}\r\n                            >\r\n                                <Box background=\"white\" px={[\"8\", \"16\"]} py=\"16\" as={Editable} shadow=\"sm\"\r\n                                    {...{ renderElement, renderLeaf, readOnly: true }}\r\n                                />\r\n                            </Slate>\r\n                        </SocketContext.Provider>\r\n                    </Container>\r\n                </Box >\r\n            </Fragment>\r\n        ) : (\r\n            <UserNameForm {...{ dispatch }} />\r\n        )\r\n    )\r\n}\r\n\r\n\r\nconst UsersList = ({ users }) => (\r\n    <AvatarGroup size=\"sm\" max={3}>\r\n        {users.map(({ username, userID }) => (\r\n            <Avatar key={userID} bg=\"brand.500\" color=\"white\" name={username} src={<FaUserAlt />} title={username} />\r\n        ))}\r\n    </AvatarGroup>\r\n)\r\nexport default Practice\r\n","import { Flex, Text } from '@chakra-ui/layout'\r\nimport React, { Fragment } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nconst NotFounded = () => {\r\n    useDocumentTitle(\"Página no encontrada\")\r\n    return (\r\n        <Fragment>\r\n            <Navbar />\r\n            <Flex alignItems=\"center\" flexDirection=\"column\" justifyContent=\"center\" textAlign=\"center\" height=\"100vh\">\r\n\r\n                <Text fontSize=\"6xl\">404</Text>\r\n                <Text fontSize=\"4xl\">Page not founded</Text>\r\n            </Flex>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NotFounded\r\n","import React, { useState } from 'react'\r\nimport { Box, FormControl, FormLabel, Grid, Image, Input, Button, Stack, Alert, AlertIcon, Text } from \"@chakra-ui/react\";\r\nimport Logo from '../components/Logo';\r\nimport { useUser } from '../context/UserContext';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst initialValue = {\r\n    name: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n    error: undefined\r\n}\r\n\r\nconst SignUp = () => {\r\n    const { login, signUp, loading } = useUser();\r\n    const history = useHistory();\r\n    const [form, setForm] = useState(initialValue);\r\n\r\n    const { name, lastName, email, password, password2, error } = form;\r\n\r\n    function changeFormProp(prop, value) {\r\n        const updatedForm = { ...form };\r\n        updatedForm[prop] = value;\r\n        setForm(updatedForm);\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        // Clean screen from previous errors\r\n        // const updatedForm = { ...form };\r\n        // updatedForm.error = undefined;\r\n        // setForm(updatedForm);\r\n\r\n        e.preventDefault();\r\n\r\n        //Prevent user to pass two different passwords\r\n        if (form.password !== form.password2) {\r\n            const updatedForm = { ...form };\r\n            updatedForm.password2 = \"\";\r\n            updatedForm.error = \"Las contraseñas no coinciden\";\r\n            setForm(updatedForm);\r\n            return;\r\n        }\r\n\r\n        await signUp(form.name, form.lastName, form.email, form.password);\r\n        await login(form.email, form.password);\r\n\r\n        //redirect to dashboard\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n    return (\r\n        <Grid h=\"100vh\" placeItems=\"center\" templateColumns={[\"1fr\", \"repeat(2, 1fr)\"]} w=\"100vw\">\r\n            <Box>\r\n                <Image src=\"/Online_collaboration.png\" />\r\n                <Text px=\"4\" textAlign=\"center\" fontSize=\"x-large\" fontWeight=\"semibold\" color=\"brand.700\">\r\n                    Lleva la interacción de tus clases al siguiente nivel\r\n                </Text>\r\n            </Box>\r\n            <Box w=\"md\" textAlign=\"center\" px=\"10\">\r\n\r\n\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <Stack spacing=\"4\">\r\n\r\n                        <Logo />\r\n\r\n                        <FormControl isRequired mr=\"4\">\r\n                            <FormLabel>Nombre (s)</FormLabel>\r\n                            <Input autoFocus value={name} onChange={e => changeFormProp(\"name\", e.target.value)} placeholder=\"Armando\" />\r\n                        </FormControl>\r\n\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Apellido (s)</FormLabel>\r\n                            <Input value={lastName} onChange={e => changeFormProp(\"lastName\", e.target.value)} placeholder=\"Sánchez\" />\r\n                        </FormControl>\r\n\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Correo</FormLabel>\r\n                            <Input value={email} onChange={e => changeFormProp(\"email\", e.target.value)} placeholder=\"email@provider.com\" />\r\n                        </FormControl>\r\n\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Contraseña</FormLabel>\r\n                            <Input value={password} onChange={e => changeFormProp(\"password\", e.target.value)} type=\"password\" />\r\n                        </FormControl>\r\n\r\n                        <FormControl isRequired>\r\n                            <FormLabel>Confirma tu contraseña</FormLabel>\r\n                            <Input value={password2} onChange={e => changeFormProp(\"password2\", e.target.value)} type=\"password\" />\r\n                        </FormControl>\r\n\r\n                        {\r\n                            error && (\r\n                                <Alert status=\"error\">\r\n                                    <AlertIcon />\r\n                                    {error}\r\n                                </Alert>\r\n                            )\r\n                        }\r\n\r\n                        <Button isLoading={loading} type=\"submit\" colorScheme=\"brand\" variant=\"solid\">\r\n                            Crear Cuenta\r\n                        </Button>\r\n\r\n                        <Text textAlign=\"center\">¿Ya tienes una cuenta? Inicia sesión <Text color=\"brand\" textDecoration=\"underline\" as=\"a\" href=\"/login\"> aquí </Text></Text>\r\n\r\n                    </Stack>\r\n\r\n                </form>\r\n\r\n            </Box>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React, { useState } from 'react'\r\n\r\nimport { useUser } from '../context/UserContext';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport Logo from '../components/Logo';\r\nimport { Box, FormControl, FormLabel, Input, Button, Stack, Alert, AlertIcon, Text } from \"@chakra-ui/react\";\r\n\r\nconst initialValue = {\r\n    email: \"\",\r\n    password: \"\",\r\n}\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [form, setForm] = useState(initialValue);\r\n    const { email, password } = form;\r\n    const { login, loading, error } = useUser();\r\n\r\n    function changeFormProp(prop, value) {\r\n        const updatedForm = { ...form };\r\n        updatedForm[prop] = value;\r\n        setForm(updatedForm);\r\n    }\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        await login(form.email, form.password);\r\n        history.push(\"/dashboard\");\r\n    }\r\n\r\n    return (\r\n        <Box as=\"form\" bg=\"gray.100\" onSubmit={handleSubmit} display=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100vh\" flexDirection=\"column\">\r\n\r\n            <Stack spacing=\"8\" bg=\"white\" shadow=\"base\" w={[\"80vw\", \"50vw\", \"40vw\"]} p={[\"8\", \"10\"]}>\r\n                <Logo />\r\n\r\n                <FormControl isRequired>\r\n                    <FormLabel>Correo</FormLabel>\r\n                    <Input autoFocus value={email} onChange={e => changeFormProp(\"email\", e.target.value)} placeholder=\"email@provider.com\" />\r\n                </FormControl>\r\n\r\n                <FormControl isRequired>\r\n                    <FormLabel>Contraseña</FormLabel>\r\n                    <Input value={password} onChange={e => changeFormProp(\"password\", e.target.value)} placeholder=\"password\" type=\"password\" />\r\n                </FormControl>\r\n\r\n                {\r\n                    error && (\r\n                        <Alert status=\"error\">\r\n                            <AlertIcon />\r\n                            {error.message}\r\n                        </Alert>\r\n                    )\r\n                }\r\n\r\n                <Button isLoading={loading} type=\"submit\" colorScheme=\"brand\" variant=\"solid\">\r\n                    Iniciar Sesión\r\n                </Button>\r\n\r\n                <Text textAlign=\"center\">¿Aun no tienes una cuenta? Crea tu cuenta <Text color=\"brand\" textDecoration=\"underline\" as=\"a\" href=\"/signUp\"> aquí </Text></Text>\r\n\r\n            </Stack>\r\n\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","// @refresh reset\r\nimport { Box } from '@chakra-ui/react';\r\nimport React, { useEffect, useReducer, useRef, useState } from 'react'\r\nimport { Editor } from 'slate';\r\nimport { Slate, Editable } from 'slate-react';\r\nimport { socket } from '../context/socket';\r\n\r\nimport useSlateEditor from '../hooks/useSlateEditor';\r\nimport useSlateRender from '../hooks/useSlateRender';\r\n\r\nconst initialValue = {\r\n    editorValue: [{\r\n        type: 'paragraph',\r\n        children: [{ text: \"Hello World!\" }]\r\n    }],\r\n    remoteChange: false,\r\n};\r\n\r\nfunction reducer(state, action) {\r\n    const { type } = action;\r\n    switch (type) {\r\n        case 'set_editor_value':\r\n            const { editorValue } = action.payload;\r\n            return {\r\n                ...state,\r\n                editorValue\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction SyncEditor() {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialValue);\r\n\r\n    const { editorValue } = state;\r\n\r\n    const socketChange = useRef(false);\r\n\r\n    const editor = useSlateEditor();\r\n\r\n    //Using date as a provitional id;\r\n    const id = useRef(Date.now().toString());\r\n\r\n    const [renderLeaf, renderElement] = useSlateRender();\r\n\r\n    socket.connect()\r\n    useEffect(() => {\r\n\r\n        socket.on('content change', ({ id: senderID, operations }) => {\r\n\r\n            // if (id.current !== senderID) {\r\n\r\n            console.log(\"Operations received\", { senderID, operations });\r\n            console.log(\"Remote change status in socket\", socketChange.current);\r\n\r\n            socketChange.current = true;\r\n\r\n            Editor.withoutNormalizing(editor, () => {\r\n                operations.forEach(operation => {\r\n                    editor.apply(operation);\r\n                })\r\n            })\r\n\r\n            // }\r\n        })\r\n\r\n        return () => {\r\n            socket.off(\"content change\")\r\n            if (socket.connected) {\r\n                socket.disconnect()\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Slate {...{\r\n            editor,\r\n            value: editorValue,\r\n            onChange: (newValue) => {\r\n                console.log(\"Content updated\", newValue);\r\n                dispatch({ type: 'set_editor_value', payload: { editorValue: newValue } })\r\n                const operations = editor.operations\r\n                    .filter(operation => ![\"set_value\", \"set_selection\"].includes(operation.type))\r\n\r\n                console.log(\"Remote change\", socketChange.current);\r\n\r\n                if (socketChange.current) {\r\n                    console.log(\"Change happened in other editor\")\r\n                } else {\r\n                    console.log(\"Change happened in this editor\")\r\n                    if (operations.length) {\r\n                        console.log(\"Sending changes to the server\");\r\n                        socket.emit('content change', { id: id.current, operations });\r\n                    }\r\n                }\r\n\r\n                socketChange.current = false;\r\n            }\r\n        }}>\r\n            <Box border=\"purple 1px solid\">\r\n                <Editable {...{ renderElement, renderLeaf }} />\r\n            </Box>\r\n        </Slate>\r\n    )\r\n}\r\n\r\nexport default SyncEditor\r\n","// @refresh reset\r\nimport React, { useEffect, Fragment, useState } from 'react'\r\n\r\nimport { Grid, Input, IconButton, InputGroup, InputLeftAddon, Box, Flex, Button, ButtonGroup, Tooltip, Modal, ModalHeader, ModalBody, ModalOverlay, ModalContent, ModalFooter, ModalCloseButton, Text, Icon, useDisclosure, Divider, Menu, MenuButton, MenuList, MenuItem } from \"@chakra-ui/react\"\r\n\r\nimport { Logo } from '../svgs';\r\n\r\nimport { FaChevronDown, FaClone, FaLanguage, FaSearch, FaUser, FaUserAlt } from 'react-icons/fa';\r\n\r\nimport { createQueryString, parseWorksheets } from \"../utils/index\";\r\nimport useSlateRender from '../hooks/useSlateRender';\r\nimport useSlateEditor from '../hooks/useSlateEditor';\r\nimport { Slate } from 'slate-react';\r\nimport CustomEditable from '../components/Slate/Editable';\r\nimport useBodyBackground from '../hooks/useBodyBackground';\r\nimport { useUser } from '../context/UserContext';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LANGS = {\r\n    es: \"Español\",\r\n    en: \"Inglés\",\r\n    fr: \"Francés\",\r\n    ru: \"Ruso\",\r\n    de: \"Alemán\",\r\n    it: \"Italiano\",\r\n    jp: \"Japonés\",\r\n}\r\n\r\n\r\nconst Activities = () => {\r\n\r\n    const [activities, setActivities] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(undefined);\r\n\r\n    //filters\r\n    const [language, setLanguage] = useState(undefined);\r\n    const [keywords, setKeywords] = useState(\"\");\r\n\r\n\r\n    async function getActivities() {\r\n        try {\r\n            setLoading(true);\r\n            const params = {};\r\n\r\n            if (language) params.language = language;\r\n            if (!!keywords.trim()) params.keywords = keywords;\r\n\r\n            const response = await fetch(`/api/activities/public?${Object.keys(params).length !== 0 && createQueryString(params)}`);\r\n            const json = await response.json();\r\n\r\n            const activities = parseWorksheets(json);\r\n            setActivities(activities);\r\n        } catch (error) {\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getActivities();\r\n    }, [language])\r\n\r\n    if (error) return <Box>Error</Box>;\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n\r\n            <Flex bg=\"white\" width=\"full\" p=\"5\">\r\n\r\n                <Text as=\"a\" href=\"/\">\r\n                    <Icon w={12} h={12} as={Logo} mr=\"4\" />\r\n                </Text>\r\n\r\n                <InputGroup width=\"50%\" mr=\"4\">\r\n                    <InputLeftAddon onClick={getActivities}>\r\n                        <Icon as={FaSearch} />\r\n                    </InputLeftAddon>\r\n                    <Input\r\n                        value={keywords}\r\n                        onKeyDown={(e) => e.key === \"Enter\" && getActivities()}\r\n                        onChange={(event) => setKeywords(event.target.value)}\r\n                        placeholder=\"Busca actividades de otros profesores\"\r\n                    />\r\n                </InputGroup>\r\n\r\n\r\n                <Menu>\r\n                    <Tooltip hasArrow label=\"Filtrar por idioma\">\r\n                        <MenuButton as={Button} leftIcon={<Icon as={FaLanguage} />} rightIcon={<Icon as={FaChevronDown} />} >\r\n                            {language ? LANGS[language] : \"Seleccionar Idioma\"}\r\n                        </MenuButton>\r\n                    </Tooltip>\r\n                    <MenuList zIndex=\"dropdown\">\r\n                        <MenuItem onClick={() => setLanguage(\"en\")}>Inglés</MenuItem>\r\n                        <MenuItem onClick={() => setLanguage(\"fr\")}>Francés</MenuItem>\r\n                        <MenuItem onClick={() => setLanguage(\"es\")}>Español</MenuItem>\r\n                        <MenuItem onClick={() => setLanguage(\"ru\")}>Ruso</MenuItem>\r\n                        <MenuItem onClick={() => setLanguage(\"de\")}>Aleman</MenuItem>\r\n                        <MenuItem onClick={() => setLanguage(\"it\")}>Italiano</MenuItem>\r\n                        <MenuItem onClick={() => setLanguage(\"jp\")}>Japonés</MenuItem>\r\n                    </MenuList>\r\n                </Menu>\r\n\r\n            </Flex>\r\n\r\n            <Grid mx=\"auto\" px={[\"0px\"]} width=\"container.lg\" templateColumns={[\"1fr\", \"repeat(3, 1fr)\"]} gap={6} p=\"5\">\r\n\r\n                {\r\n                    !loading && activities.map((activity) => (\r\n                        <AcitivityCard key={activity._id} {...activity} />\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    !loading && activities.length === 0 && (\r\n                        <Box>\r\n                            Ninguna actividad fue encontrada :(\r\n                        </Box>\r\n                    )\r\n                }\r\n\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AcitivityCard = props => {\r\n    const history = useHistory();\r\n\r\n    const { user } = useUser();\r\n\r\n    const { _id, author, content, createdAt, lang, title } = props;\r\n\r\n    const username = `${author.name} ${author.lastName}`;\r\n\r\n    const editor = useSlateEditor({\r\n        plugins: false\r\n    });\r\n\r\n    const [renderLeaf, renderElement] = useSlateRender();\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    useBodyBackground(\"var(--chakra-colors-gray-100)\")\r\n\r\n    async function handleCloneActivity() {\r\n\r\n        const newWorksheet = {\r\n            title,\r\n            lang,\r\n            private: false,\r\n            published: false,\r\n            content: JSON.stringify(content),\r\n            createdAt: new Date(),\r\n            author: {\r\n                name: user.name,\r\n                lastName: user.lastName,\r\n                id: user.id\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"/api/activities\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(newWorksheet)\r\n            })\r\n\r\n            const json = await response.json();\r\n\r\n            history.push(`/worksheets/${json._id}/edit`);\r\n        } catch (error) {\r\n            alert(\"Algo salió mal, refresca la página e inténtalo de nuevo :(\");\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <Slate {...{\r\n            editor,\r\n            value: content\r\n        }}>\r\n            <Box w={[\"100%\", \"80\"]} bg=\"white\" h={[\"70vh\", \"60vh\"]} transition=\"ease 0.5s transform\" overflowY=\"hidden\" boxShadow=\"base\"  >\r\n\r\n                <Box cursor=\"zoom-in\" position=\"relative\" h={[\"60vh\", \"50vh\"]} overflowY=\"auto\">\r\n                    <Box width=\"100%\" height=\"100%\" position=\"absolute\" top=\"0\" left=\"0\" zIndex=\"1\" onClick={onOpen} />\r\n                    <Box>\r\n                        <CustomEditable {...{\r\n                            readOnly: true,\r\n                            renderElement,\r\n                            renderLeaf\r\n                        }} />\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Flex zIndex=\"2\" bg=\"brand.700\" color=\"white\" alignItems=\"center\" justifyContent=\"space-between\" width=\"full\" position=\"sticky\" bottom=\"0\" left=\"0\" p=\"5\">\r\n                    <Box>\r\n                        <Text isTruncated fontSize=\"large\">{title}</Text>\r\n                        <Text > <Icon as={FaLanguage} /> {LANGS[lang]}</Text>\r\n                        <Text isTruncated> <Icon as={FaUserAlt} /> {username}</Text>\r\n                    </Box>\r\n                    <Tooltip hasArrow label=\"Clonar actividad\">\r\n                        <Button onClick={handleCloneActivity} alignSelf=\"flex-start\" variant=\"outline\" colorScheme=\"white\"> <Icon as={FaClone} /> </Button>\r\n                    </Tooltip>\r\n                </Flex>\r\n\r\n                <Modal {...{ isOpen, onClose }} size=\"2xl\">\r\n                    <ModalOverlay />\r\n                    <ModalContent bg=\"gray.100\">\r\n                        <ModalCloseButton />\r\n                        <ModalHeader>{title}</ModalHeader>\r\n                        <ModalBody position=\"relative\">\r\n                            <Box width=\"100%\" height=\"100%\" position=\"absolute\" top=\"0\" left=\"0\" zIndex=\"1\" />\r\n\r\n                            <Text mb=\"5\"> <Icon as={FaUserAlt} /> {username}</Text>\r\n\r\n                            <Box bg=\"white\" boxShadow=\"base\">\r\n\r\n                                <CustomEditable\r\n                                    {...{\r\n                                        readOnly: true,\r\n                                        renderElement,\r\n                                        renderLeaf\r\n                                    }}\r\n                                />\r\n\r\n                            </Box>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <ButtonGroup>\r\n                                <Button variant=\"ghost\" onClick={onClose}>Cerrar</Button>\r\n                                <Button onClick={handleCloneActivity} rightIcon={<Icon as={FaClone} />} colorScheme=\"brand\">Clonar Actividad</Button>\r\n                            </ButtonGroup>\r\n                        </ModalFooter>\r\n                    </ModalContent>\r\n                </Modal>\r\n            </Box >\r\n        </Slate >\r\n    )\r\n}\r\n\r\nexport default Activities\r\n","import theme from \"./theme\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport { UserProvider } from \"./context/UserContext\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport Form from \"./pages/Form\";\r\nimport Home from \"./pages/Home\";\r\nimport Practice from \"./pages/Practice\";\r\nimport NotFounded from \"./pages/NotFounded\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport Login from \"./pages/Login\";\r\nimport SyncEditor from \"./pages/SyncEditor\";\r\nimport Activities from \"./pages/Activities\";\r\n\r\nfunction App() {\r\n  return (\r\n    <ChakraProvider theme={theme} >\r\n      <div className=\"App\">\r\n        <Router>\r\n          <UserProvider>\r\n            <Switch>\r\n              <Route path=\"/activities\" component={Activities} />\r\n              <Route path=\"/test\" component={SyncEditor} />\r\n              <Route exact path=\"/\" component={Home} />\r\n              <PrivateRoute path=\"/dashboard\" redirectTo=\"/login\" component={Dashboard} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={SignUp} />\r\n              <PrivateRoute path=\"/worksheets/:id/edit\" type=\"user\" redirectTo=\"/login\" component={Form} />\r\n              <Route path=\"/worksheets/:id/practice\" component={Practice} />\r\n              <Route path=\"*\" component={NotFounded} />\r\n            </Switch>\r\n          </UserProvider>\r\n        </Router>\r\n      </div>\r\n    </ChakraProvider >\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { UserProvider } from './context/UserContext';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}